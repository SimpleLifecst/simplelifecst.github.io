<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue数组应用</title>
      <link href="2021/05/21/vuevfor/"/>
      <url>2021/05/21/vuevfor/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><blockquote><p>Vue.js 允许你自定义过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：<strong>双花括号插值和 <code>v-bind</code> 表达式</strong>。过滤器应该被添加在 JavaScript 表达式的尾部，由“管道”符号指示：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在双花括号中 --&gt;</span></span><br><span class="line">&#123;&#123; message | capitalize &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 在 `v-bind` 中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;rawId | formatId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--通过filters写过滤方法--&gt;</span></span><br><span class="line">filters:&#123;</span><br><span class="line">capitalize(message)&#123;</span><br><span class="line">return message;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">&lt;!--写函数来修饰message返回--&gt;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>定义全局过滤器</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vue.filter(<span class="string">&#x27;capitalize&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!value) <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  value = value.toString()</span><br><span class="line">  <span class="keyword">return</span> value.charAt(<span class="number">0</span>).toUpperCase() + value.slice(<span class="number">1</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>PS：当全局过滤器和局部过滤器重名时，会采用局部过滤器。</p><ul><li>过滤器可以串联</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; message | filterA | filterB &#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>过滤器是JavaScript函数，因此可以接收参数</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; message | filterA(&#x27;arg1&#x27;, arg2) &#125;&#125;</span><br><span class="line"><span class="comment">&lt;!--这里，filterA 被定义为接收三个参数的过滤器函数。其中 message 的值作为第一个参数，普通字符串 &#x27;arg1&#x27; 作为第二个参数，表达式 arg2 的值作为第三个参数。--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JS高阶函数"><a href="#JS高阶函数" class="headerlink" title="JS高阶函数"></a>JS高阶函数</h2><ul><li><p><code>filtet</code>函数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--filter中的回调函数有一个要求：必须返回一个boolean值--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--true：当返回true时，函数内部会自动将这次回调的n加入到新的数组中--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--false:当返回false时，函数内部会过滤掉这次的n--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> nums = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">111</span>,<span class="number">222</span>,<span class="number">444</span>,<span class="number">50</span>,<span class="number">60</span>]</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> newnums = nums.filter(<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">return</span> n&lt;<span class="number">100</span>;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript">  <span class="comment">//返回是小于100的元素</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>map</code>函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> nums = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">111</span>,<span class="number">222</span>,<span class="number">444</span>,<span class="number">50</span>,<span class="number">60</span>]</span><br><span class="line"><span class="keyword">let</span> newnums = nums.map(<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n*<span class="number">2</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//数组有几个元素执行几次，返回的元素，现在返回的两倍的值</span></span><br></pre></td></tr></table></figure></li><li><p><code>reduce</code>函数</p><ul><li>作用：汇总元素</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> total = newNums.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">preValue,n</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preValue + n</span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数有两个参数值 preValue和n</span></span><br><span class="line"><span class="comment">//元素过程···</span></span><br><span class="line"><span class="comment">//第一次 prevalue n1</span></span><br><span class="line"><span class="comment">//第二次 prevalue+n1 n2</span></span><br><span class="line"><span class="comment">//第三次 prevalue+n1+n2 n3</span></span><br><span class="line"><span class="comment">//第四次 prevalue+n1+n2+n3 n4</span></span><br><span class="line"><span class="comment">//假如只有4个元素，最后返回prevalue+n1+n2+n3+n4</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="检测数据更新，响应式方法"><a href="#检测数据更新，响应式方法" class="headerlink" title="检测数据更新，响应式方法"></a>检测数据更新，响应式方法</h2><ul><li><code>push</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">push(<span class="string">&#x27;F&#x27;</span>);<span class="comment">//在数组尾部添加新元素&#x27;F&#x27;，并同时更新网页界面可添加多个元素</span></span><br><span class="line">push(<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;G&#x27;</span>,<span class="string">&#x27;E&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li><code>pop</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pop();<span class="comment">//删掉数组最后一个元素</span></span><br></pre></td></tr></table></figure><ul><li><code>shift</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shift();<span class="comment">//删掉数组第一元素，与pop方法相反</span></span><br></pre></td></tr></table></figure><ul><li><code>unshift</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">unshift(<span class="string">&#x27;F&#x27;</span>);<span class="comment">//在数组最前面添加新元素&#x27;F&#x27;</span></span><br><span class="line">可添加多个元素</span><br><span class="line">unshift(<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;G&#x27;</span>,<span class="string">&#x27;E&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><code>splice</code></li></ul><blockquote><p>作用：删除元素/插入元素/替换元素<br>删除元素：第一个参数开始后的位置，第二个参数删除的个数，<br>         没有第二个参数，表示某位置后面元素全部删掉<br>         格式：splice(2)/splice(2,2);</p><p>替换元素：splice(start,num,’new1’,’new2’,’new…’);<br>         num为替换元素的个数，后面的元素就改成需要替换的元素<br>         splice(2,3,’a’,’b’,’c’);第二个元素后面替换三个元素<br>         原理：是先将元素删掉，然后再添加元素</p><p>插入元素：splice(start,0,’new1’,’new2’,’new…’);<br>         num改为零了，表示不删掉元素，后面直接追加新元素<br>         strat是值意思都是一样的</p></blockquote><ul><li><code>reverse</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作用：反转数组</span><br><span class="line">reserve();</span><br><span class="line">[<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>] ==&gt; [<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;1&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li><code>sort</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--冒泡排序方法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">sortNumber</span>(<span class="params">a,b</span>)</span></span></span><br><span class="line"><span class="function"><span class="javascript"></span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">return</span> a - b</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">  arr[<span class="number">0</span>] = <span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="javascript">  arr[<span class="number">1</span>] = <span class="string">&quot;5&quot;</span></span></span><br><span class="line"><span class="javascript">  arr[<span class="number">2</span>] = <span class="string">&quot;40&quot;</span></span></span><br><span class="line"><span class="javascript">  arr[<span class="number">3</span>] = <span class="string">&quot;25&quot;</span></span></span><br><span class="line"><span class="javascript">  arr[<span class="number">4</span>] = <span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="javascript">  arr[<span class="number">5</span>] = <span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(arr + <span class="string">&quot;&lt;br /&gt;&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(arr.sort(sortNumber))</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue基础 </tag>
            
            <tag> vue数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础指令</title>
      <link href="2021/05/21/vuezhiling/"/>
      <url>2021/05/21/vuezhiling/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="vue使用Mustache语法"><a href="#vue使用Mustache语法" class="headerlink" title="vue使用Mustache语法"></a>vue使用Mustache语法</h2><p>通过Mustache语法，让vue实例的数据data，显示在页面当中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h2><p>组件绑定<code>v-once</code>，该组件只会解析一次mustache语法，之后改变data数据，也不会影响界面数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-once</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  /*</span><br><span class="line">  当控制台改变app.message的值，但是html中message值不改变</span><br><span class="line">  因为使用了v-once</span><br><span class="line">  */</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h2><p>在vue实例中的data直接使用HTML标签，是无法通过mustache语法解析出来，但是给组件绑定<code>v-html</code>让该组件解析html标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-html</span>=<span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  /*</span><br><span class="line">  当控制台改变app.message的值，但是html中message值不改变</span><br><span class="line">  因为使用了v-once</span><br><span class="line">  */</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">data</span>:[</span></span><br><span class="line"><span class="javascript">          message:<span class="string">&#x27;&lt;a href=&quot;https://www.baidu.com&quot;&gt;百度一下&lt;/a&gt;&#x27;</span></span></span><br><span class="line"><span class="javascript">      ]</span></span><br><span class="line"><span class="javascript">  &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h2><p>不需要使用mustache语法显示数据，直接通过<code>v-text=&quot;message&quot;</code>绑定数据。缺点明显，不灵活</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-pre"><a href="#v-pre" class="headerlink" title="v-pre"></a>v-pre</h2><p>原封不动的解析标签内容，不解析mustache语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-pre</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span> <span class="comment">&lt;!--结果： &#123;&#123;message&#125;&#125;--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-bloak"><a href="#v-bloak" class="headerlink" title="v-bloak"></a>v-bloak</h2><p>当vue未解析的时候，htmlDOM提前解析了，展现的内容对用户 不友好，给组件添加v-bloak，当没有解析的时候，不展现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 如果解析时，先解析的是h2标签，而不是vue实例，那么展现的结果就是 &#123;&#123;message&#125;&#125;</span></span><br><span class="line"><span class="comment">这样的效果，对用户体验不好 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-bloak</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 绑定v-bloak时，在没有解析vue实例之前，该标签不会展现内容 </span></span><br><span class="line"><span class="comment">避免让用户看到了 &#123;&#123;message&#125;&#125; </span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5、CSS、Javascript</title>
      <link href="2021/05/20/Html_CSS/"/>
      <url>2021/05/20/Html_CSS/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础知识</title>
      <link href="2021/05/20/Vue2/"/>
      <url>2021/05/20/Vue2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header"><h2>条件渲染</h2><p>控制切换一个元素是否显示。重要代码<code>v-if</code>、<code>v-else</code>、<code>v-else-if</code>、<code>v-show</code>  </p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-3&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--v-if=&quot;boolean&quot;是一个布尔值--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--v-show=&quot;boolean&quot;同样是布尔值&gt;</span></span><br><span class="line"><span class="comment">&lt;p v-show=&quot;seen&quot;&gt;现在你看到我了&lt;/p&gt;</span></span><br><span class="line"><span class="comment">  &lt;p v-if=&quot;seen&quot;&gt;现在你看到我了&lt;/p&gt;</span></span><br><span class="line"><span class="comment">&lt;/div&gt;</span></span><br><span class="line"><span class="comment">&lt;script&gt;</span></span><br><span class="line"><span class="comment">  var app3 = new Vue(&#123;</span></span><br><span class="line"><span class="comment">  el: &#x27;#app-3&#x27;,</span></span><br><span class="line"><span class="comment">  data: &#123;</span></span><br><span class="line"><span class="comment">    seen: true</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">&#125;)</span></span><br><span class="line"><span class="comment">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><span class="blue">v-if 和 v-show的区别：</span>v-if 的布尔值是false是不执行该标签的，不会渲染在DOM结构。v-show 是改变display属性，渲染在DOM结构</p><p><code>v-if</code> 指令用于条件性地渲染一块内容。这块内容只会在指令的表达式返回 <span class="blue">truthy </span>值的时候被渲染。</p><p><code>v-if && v-else</code>联合使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-if</span>=<span class="string">&quot;awesome&quot;</span>&gt;</span>Vue is awesome!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-else</span>&gt;</span>Oh no 😢<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>v-else</code> 元素必须紧跟在带 <code>v-if</code> 或者 <code>v-else-if</code> 的元素的后面，否则它将不会被识别。</p><p><code>v-else-if</code>和 js 里面的<code>else-if</code>是一样的功能，用来连续判断的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--可以用判断句返回boolean值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span></span><br><span class="line">  A</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span></span><br><span class="line">  B</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span></span><br><span class="line">  C</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">  Not A/B/C</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="用key管理可复用的元素"><a href="#用key管理可复用的元素" class="headerlink" title="用key管理可复用的元素"></a>用<code>key</code>管理可复用的元素</h3><p>Vue 会尽可能<cst>高效地渲染</cst>元素，通常会<cst>复用已有</cst>元素而不是从头开始渲染。这么做除了使 Vue 变得非常快之外，还有其它一些好处。例如，如果你允许用户在不同的登录方式之间切换：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;loginType === &#x27;username&#x27;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your username&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your email address&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="blue text-left" style="width:200px">        效果模拟：      </div><div id="app">        <div id="inputid">            <div v-if="email">              <label>Username</label>              <input placeholder="Enter your username">            </div>            <div v-else>              <label>Email</label>              <input placeholder="Enter your email address">            </div>            <button type="button" class="btn btn-success" @click="qiehuan()">切换登录类型</button>        </div>    </div><script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js" type="text/javascript" charset="utf-8"></script><script type="text/javascript">    const app = new Vue({        el:'#app',        data:{            email: false        },        methods:{            qiehuan(){                this.email=!this.email;            }        }    })</script><p><br><cst class="red">结论：</cst>条件渲染时，会出现<cst>复用组件</cst>情况。这也是<cst>节约DOM性能</cst>。我们在输入值是，切换登录value值依然在，这就是<cst>复用了input</cst>组件。如果不希望出现这个结果，可以给input 添加<cst> key</cst>属性，<cst>不同的key值</cst>，将会重新渲染一个新的组件，而不是复用</p><h3 id="v-if-vs-v-show的区别"><a href="#v-if-vs-v-show的区别" class="headerlink" title="v-if vs v-show的区别"></a><code>v-if</code> vs <code>v-show</code>的区别</h3><p><code>v-if</code> 是“真正”的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。</p><p><code>v-if</code> 也是<strong>惰性的</strong>：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。</p><p>相比之下，<code>v-show</code> 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换。</p><p>一般来说，<code>v-if</code> 有更高的切换开销，而 <code>v-show</code> 有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用 <code>v-show</code> 较好；如果在运行时条件很少改变，则使用 <code>v-if</code> 较好。</p><hr><div class="page-header"><h2>列表渲染</h2><p>用 v-for 把一个数组对应为一组元素</p></div><p>我们可以用 <code>v-for</code> 指令基于一个数组来渲染一个列表。<code>v-for</code> 指令需要使用 <code>item in items</code> 形式的特殊语法，其中 <code>items</code> 是<cst>源数据数组</cst>，而 <code>item</code> 则是被迭代的数组元素的<cst>别名</cst>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 渲染数组，在data数据中存放了items数组，每一个li标签绑定了不同的key值，避免复用</span></span><br><span class="line"><span class="comment">item 是别名，可以任意，但最好能表达数组含义。--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;example-1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; item.message &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> example1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">el</span>: <span class="string">&#x27;#example-1&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">items</span>: [</span></span><br><span class="line"><span class="javascript">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Foo&#x27;</span> &#125;,</span></span><br><span class="line"><span class="javascript">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Bar&#x27;</span> &#125;</span></span><br><span class="line"><span class="javascript">    ]</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="cstimg"><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210521081004.png"/></div><p>在 <code>v-for</code> 块中，我们可以访问所有父作用域的 property。<code>v-for</code> 还支持一个可选的第二个参数，即当前项的索引。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;example-2&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in items&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; parentMessage &#125;&#125; - &#123;&#123; index &#125;&#125; - &#123;&#123; item.message &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> example2 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">el</span>: <span class="string">&#x27;#example-2&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">parentMessage</span>: <span class="string">&#x27;Parent&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">items</span>: [</span></span><br><span class="line"><span class="javascript">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Foo&#x27;</span> &#125;,</span></span><br><span class="line"><span class="javascript">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Bar&#x27;</span> &#125;</span></span><br><span class="line"><span class="javascript">    ]</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="cstimg">  <img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210521082043.png" /></div><p>你也可以用 <code>of</code> 替代 <code>in</code> 作为分隔符，因为它更接近 JavaScript 迭代器的语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;item of items&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;v-for-object&quot;</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;value in object&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; value &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">el</span>: <span class="string">&#x27;#v-for-object&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">object</span>: &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">title</span>: <span class="string">&#x27;How to do lists in Vue&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">author</span>: <span class="string">&#x27;Jane Doe&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">publishedAt</span>: <span class="string">&#x27;2016-04-10&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="cstimg">  <img  src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210521082655.png"/></div><p>你也可以提供第二个的参数为 <cst>property </cst>名称 (也就是键名)：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, name) in object&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; name &#125;&#125;: &#123;&#123; value &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>还可以用第三个参数作为索引：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, name, index) in object&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; index &#125;&#125;. &#123;&#123; name &#125;&#125;: &#123;&#123; value &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ES6语法遍历数组"><a href="#ES6语法遍历数组" class="headerlink" title="ES6语法遍历数组"></a>ES6语法遍历数组</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//this.libararys是data数据数组，用in获取的是元素索引</span></span><br><span class="line"><span class="comment">//用of获取的是元素本身，如果是对象的话，直接获取拿到属性值</span></span><br><span class="line"><span class="keyword">let</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> <span class="built_in">this</span>.libararys)&#123;</span><br><span class="line">sum+=<span class="built_in">this</span>.libararys[i].num * <span class="built_in">this</span>.libararys[i].price;</span><br><span class="line">&#125;</span><br><span class="line">      </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> <span class="built_in">this</span>.libararys)&#123;</span><br><span class="line">    sum += item.price * item.num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="v-if-与-v-for-一起使用"><a href="#v-if-与-v-for-一起使用" class="headerlink" title="v-if 与 v-for 一起使用"></a><code>v-if</code> 与 <code>v-for</code> 一起使用</h3><p>当 <code>v-if</code> 与 <code>v-for</code> 一起使用时，<code>v-for</code> 具有比 <code>v-if</code> 更高的优先级。所以不建议同时使用。</p><h2 id="维护状态"><a href="#维护状态" class="headerlink" title="维护状态"></a>维护状态</h2><p>当 Vue 正在更新使用 <code>v-for</code> 渲染的元素列表时，它默认使用“ 就地更新 “的策略。如果数据项的顺序被改变，Vue将不会移动DOM元素来匹配数据项的顺序，而是就地更新每一个元素，并确保它们在每个索引位置正确渲染。</p><p>这个默认的模式是<cst>高效</cst>的，但是<cst>只适用于不依赖子组件状态或临时DOM状态</cst></p><p>为了给 Vue 一个提示，以便它能跟踪每个节点的身份，从而重用和重新排序现有元素，你需要为每项提供一个唯一 <code>key</code> 值：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">v-bind:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>建议尽可能在使用 <code>v-for</code> 时提供 <code>key</code> 值，除非遍历输出的 DOM 内容非常简单，或者是刻意依赖默认行为以获取性能上的提升。</p><p>因为它是 Vue 识别节点的一个通用机制，<code>key</code> 并不仅与 <code>v-for</code> 特别关联。后面我们将在博客中看到，它还具有其它用途。</p><div class="text-right">  <a class="btn-beautify button--animated outline green larger" href="/2021/05/21/vuevfor/"   title="数组应用"><i class="far fa-hand-point-right"></i><span>数组应用</span></a></div>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Front-matter</title>
      <link href="2021/05/20/frontmatter/"/>
      <url>2021/05/20/frontmatter/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header">  <h1 class="blue">    Page Front-matter  </h1></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aside:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line"><span class="section">sticky:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】页面标题</td></tr><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标签、分类和友情链接三个页面需要配置</td></tr><tr><td>updated</td><td>【可选】页面更新日期</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块(默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr><tr><td>sticky</td><td>【可选】在需要文章置顶时，填写数字，最大999</td></tr></tbody></table><div class="page-header">  <h1 class="blue">    Post Front-matter<small>新增转载数据参数</small>  </h1></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">comments:</span></span><br><span class="line"><span class="emphasis">cover:</span></span><br><span class="line"><span class="emphasis">toc:</span></span><br><span class="line"><span class="emphasis">toc_</span>number:</span><br><span class="line">copyright:</span><br><span class="line">copyright<span class="emphasis">_author:</span></span><br><span class="line"><span class="emphasis">copyright_</span>author<span class="emphasis">_href:</span></span><br><span class="line"><span class="emphasis">copyright_</span>url:</span><br><span class="line">copyright<span class="emphasis">_info:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line"><span class="section">aside:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>toc</td><td>【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td>toc_number</td><td>【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的文章作者</td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的文章作者链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的文章连结链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的版权声明文字</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> front_matter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> front-matter </tag>
            
            <tag> butterfly </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap框架学习之旅</title>
      <link href="2021/05/19/Bootstrap1/"/>
      <url>2021/05/19/Bootstrap1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://v3.bootcss.com/">Bootstrap</a>是最受欢迎的HTML、CSS和JS框架，用于响应式布局、移动设备优先的WEB项目</p></blockquote><h3 id="起步Bootstrap"><a href="#起步Bootstrap" class="headerlink" title="起步Bootstrap"></a>起步<a href="https://v3.bootcss.com/getting-started/">Bootstrap</a></h3><p>简要介绍Boostrap，以及如何下载、使用，还有基本模板和案例</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>Bootstrap（当前版本v3.4.1）提供一下几种方式帮你快速上手，每一种方式针对具有不用技能等级的开发者和不同的使用场景</p><div style="display: flex;justify-content: center;">          <div style="width:200px;height:200px;">            <h5>用于生产环境的Bootstrap</h5>            <p>编译并压缩后的CSS、JS和字体文件。不包含文档和源码</p>          </div>           <div style="width:200px;margin: auto 50px;height:200px;">            <h5>Bootstrap 源码</h5>            <p>Less、JavaScript 和 字体文件的源码，并且带有文档。需要 Less 编译器和一些设置工作。</p>          </div>           <div style="width:200px;height:200px;">            <h5>Sass</h5>            <p>这是 Bootstrap 从 Less 到 Sass 的源码移植项目，用于快速地在 Rails、Compass 或 只针对 Sass 的项目中引入。</p>          </div>        </div><h3 id="BootstrapCDN"><a href="#BootstrapCDN" class="headerlink" title="BootstrapCDN"></a>BootstrapCDN</h3><p>直接使用Bootstrap的CSS和JavaScript文件的链接，更加方便</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 可选的 Bootstrap 主题文件（一般不用引入） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap-theme.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-6pzBo3FDv/PJ8r2KRkGHifhEocL+1X2rVCTTkUfGk7/0pbek5mMa1upzvWbrUbOZ&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--引入BootstrapJS文件，先引入Jquery文件，因为依赖它--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="基本模板"><a href="#基本模板" class="headerlink" title="基本模板"></a>基本模板</h3><p>使用一下给出的这份超级简单的HTML模板，可以根据自己的需求进行修改，而不是简单的复制，粘贴</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 101 Template<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src=&quot;https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src=&quot;https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，世界！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Bootstrap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bootstrap入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown语法</title>
      <link href="2021/05/19/markdown/"/>
      <url>2021/05/19/markdown/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="simple text-center">SimpleLife带你学习，带你飞</div><div class="page-headermd text-center"><h2>MarkDown语法</h2><p>Markdown 指南 是一份免费且开源的 Markdown 参考手册，详细讲解了<br>Markdown 这一简单、易用的文档格式化标记语言的用法。</p><span><a class="btn-beautify button--animated outline blue larger" href="https://www.markdown.xyz"   title="官方文档"><span>官方文档</span></a></span></div> <div class="page-header"><h2>Markdown是什么 </h2><p>一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。Markdown有John Gruber于2004年创建，如今很受欢迎</p></div>Markdown 语法的首要设计目标是尽可能易读。基于这个目标，Markdown 格式的文档能够以纯文本形式原样发布，而不会看起来像被填满了标签或格式化指令。 <div class="page-header"><h2>为什么要使用Markdown？</h2></div><ol><li>Markdown 处处可用。人们使用它创建 <span class="blue">网站</span>、<span class="blue">文档</span>、<span class="blue">便签</span>、<span class="blue">书籍</span>、<span class="blue">演示文稿</span>、<span class="blue">邮件</span> 和 <span class="blue">技术文档</span></li><li>Markdown 是可移植的。可以将markdown移植到任意平台。你的格式，在其它平台依然生效</li><li>Markdown 是独立于平台的。不受<span class="blue">操作系统</span>的限制</li><li>Markdown 能适应未来的变化。及时你使用你程序不能使用了，你仍然可以使用文本编辑器读取 Markdown 格式的文本。</li><li>Markdown 无处不在。众多平台支持markdown语法，如<span class="blue">Github</span>，<span class="blue">博客园</span></li></ol> <div class="page-header"><h2>工欲善其事，必先利其器</h2><p>Markdown 入门的最佳方式就是多使用它。由于有大量免费工具的存在，这比以前任何时候都更容易开始上手了。</p></div><div class="text-center"><span><a class="btn-beautify button--animated outline blue larger" href="https://dillinger.io"   title="Markdown在线编辑器<small class=huise>不易访问</small>"><i class="far fa-hand-point-right"></i><span>Markdown在线编辑器<small class=huise>不易访问</small></span></a></span><span><a class="btn-beautify button--animated outline blue larger" href="https://www.typora.io"   title="工具Typora"><i class="far fa-hand-point-right"></i><span>工具Typora</span></a></span></div> <div class="page-header"><h2>Markdown基本语法</h2><p>几乎所有 Markdown 应用程序都支持 John Gruber 原始设计文档中列出的 Markdown 基本语法。但是，Markdown 处理程序之间存在着细微的变化和差异，我们都会尽可能标记出来</p></div><span class="blue">创建标题：</span>在标题前面添加井号(#)。个数代表了标题的级别 <table class="table table-bordered table-hover">     <thead class="trta">    <tr class="text-left trta">      <th>Markdown</th>      <th>HTML</th>      <th>渲染效果</th>    </tr>  </thead>  <tbody>    <tr >      <td><samp># Heading level 1</samp></td>      <td><samp class="highlighter-rouge">&lt;h1&gt;Heading level 1&lt;/h1&gt;</samp></td>      <td><h1 class="no-anchor" data-toc-skip="">Heading level 1</h1></td>    </tr>    <tr>      <td><samp class="highlighter-rouge">## Heading level 2</samp></td>      <td><samp class="highlighter-rouge">&lt;h2&gt;Heading level 2&lt;/h2&gt;</samp></td>      <td><h2 class="no-anchor" data-toc-skip="">Heading level 2</h2></td>    </tr>    <tr>      <td><samp class="highlighter-rouge">### Heading level 3</samp></td>      <td><samp class="highlighter-rouge">&lt;h3&gt;Heading level 3&lt;/h3&gt;</samp></td>      <td><h3 class="no-anchor" data-toc-skip="">Heading level 3</h3></td>    </tr>    <tr>      <td><samp class="highlighter-rouge">#### Heading level 4</samp></td>      <td><samp class="highlighter-rouge">&lt;h4&gt;Heading level  4&lt;/h4&gt;</samp></td>      <td><h4 class="no-anchor">Heading level 4</h4></td>    </tr>    <tr>      <td><samp class="highlighter-rouge">##### Heading level 5</samp></td>      <td><samp class="highlighter-rouge">&lt;h5&gt;Heading level 5&lt;/h5&gt;</samp></td>      <td><h5 class="no-anchor">Heading level 5</h5></td>    </tr>    <tr>      <td><samp class="highlighter-rouge">###### Heading level 6</samp></td>      <td><samp class="highlighter-rouge">&lt;h6&gt;Heading level 6&lt;/h6&gt;</samp></td>      <td><h6 class="no-anchor">Heading level 6</h6></td>    </tr>  </tbody> </table> <span class="blue">可选语法：</span>还可以在文本下方添加任意数量的 == 号来标识一级标题，或者 -- 号来标识二级标题。 <table class="table table-bordered">  <thead class="thead-light">    <tr class="text-left">      <th>Markdown</th>      <th>HTML</th>      <th>渲染效果</th>    </tr>  </thead>  <tbody>    <tr>      <td><samp class="highlighter-rouge">Heading level 1<br />===============</samp></td>      <td><samp class="highlighter-rouge">&lt;h1&gt;Heading level 1&lt;/h1&gt;</samp></td>      <td><h1 class="no-anchor" data-toc-skip="">Heading level 1</h1></td>    </tr>    <tr>      <td><samp class="highlighter-rouge">Heading level 2<br />---------------</samp></td>      <td><samp class="highlighter-rouge">&lt;h2&gt;Heading level 2&lt;/h2&gt;</samp></td>      <td><h2 class="no-anchor" data-toc-skip="">Heading level 2</h2></td>    </tr>  </tbody></table> <footer class="blue"> 当井号（#）和标题文本之间<span class="red">没有空格</span>时，各 Markdown 应用程序的处理方式是不一样的。为了兼容考虑，请在井号和标题文本之间<span class="red">添加一个空格</span>。<hr></footer><p><span class="blue" >创建段落：</span>请使用空白行将一行或多行文本进行分隔。</p><table class="table table-bordered" id="csttable"><thead><tr class="text-left"><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><samp class="highlighter-rouge"> I really like using Markdown.<br /><br />I sampthink I'll use it to format all of my documents from now on.</samp></td><td><samp class="highlighter-rouge">&lt;p&gt;I really like using Markdown.&lt;/p&gt;<br /><br />&lt;p&gt;I think I'll use it to format all of my documents from now on.&lt;/p&gt;</samp></td><td><p>I really like using Markdown.</p><p>I think I'll use it to format all of my documents from now on.</p></td>    </tr>  </tbody></table><p><span class="blue">换行（Line Break）用法的最佳实践</span></p><p>在一行的末尾添加<span class="red">两个或多个空格</span>，然后按回车键（return），即可创建一个换行（line break） (&lt;br&gt;)。<br><br>因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个格<br>为了<span class="red">兼容性</span>，请在行尾添加“<span class="red">结尾空格</span>”或 HTML 的 <span class="red">&lt;br&gt;</span>标签来实现换行。</p><p><span class="blue">强调字体：</span>粗体和斜体的使用<br>要<span class="blue">加粗文本</span>，请在单词或短语的前后各添加<span class="red">两个星号或下划线</span>。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号<br><br>要用<span class="blue">斜体显示文本</span>，请在单词或短语前后添加<span class="red">一个星号或下划线</span>。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。</p><footer class="red">尽量使用星号*去加粗和斜体，因为Markdown的众多应用程序处理单词中间下划线意见不一致。加粗和斜体同时使用，左右两侧添加三个星号*</footer><hr><div class="page-header"><h2>块引用</h2><p>要创建块引用，请在段落前添加一个 > 符号。</p></div><code>> Dorothy followed her through many of the beautiful rooms in her castle.</code><blockquote><p> Dorothy followed her through many of the beautiful rooms in her castle.</p></blockquote><p>  嵌套块引用效果：通过多个'>' 来达到效果</p><blockquote><blockquote><p>3</p><blockquote><p>2</p><blockquote><p>1</p></blockquote></blockquote></blockquote></blockquote><div>  <h2>    列表  </h2>  <p>        你可以将多个条目组织成有序或无序列表。      </p></div>1. 有序列表：2. 无序列表<hr><div class="page-header">  <h2>    表格  </h2>  <p>    如需添加表格，请使用三个或更多个连字符（---）来为每个列创建表头，并使用管道符（|）来分隔每个列。你还可以     在表格的任意一侧添加管道符。  </p></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Syntax      | Description |</span><br><span class="line">| ----------- | ----------- |</span><br><span class="line">| Header      | Title       |</span><br><span class="line">| Paragraph   | Text        |</span><br></pre></td></tr></table></figure><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>Header</td><td>Title</td></tr><tr><td>Paragraph</td><td>Text</td></tr></tbody></table><h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><p>通过在标题行中的连字符(–)的左侧或右侧或两侧添加冒号（<code>:</code>），可以将对应列中的文本向左或向右或居中对齐。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Syntax      | Description | Test Text     |</span><br><span class="line">| :---        |    :----:   |          ---: |</span><br><span class="line">| Header      | Title       | Here&#x27;s this   |</span><br><span class="line">| Paragraph   | Text        | And more      |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">Syntax</th><th align="center">Description</th><th align="right">Test Text</th></tr></thead><tbody><tr><td align="left">Header</td><td align="center">Title</td><td align="right">Here’s this</td></tr><tr><td align="left">Paragraph</td><td align="center">Text</td><td align="right">And more</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> MarkDown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> front-matter </tag>
            
            <tag> 开源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sofeware Sharing</title>
      <link href="2021/05/19/sofeware/"/>
      <url>2021/05/19/sofeware/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header">    <h2 class="huise">HBuilderX<small>web开发编辑器</small></h2>    <p>HBuilderX，简称HX，是轻如编辑器、强如IDE的合体版本。轻巧、极速 为极客、为懒人、为你</p>        <div class="text-right">    <a class="btn-beautify button--animated outline larger" href="https://www.dcloud.io/hbuilderx.html"   title="HBuilderX"><i class="far fa-hand-point-right"></i><span>HBuilderX</span></a>       </div></div><div class="page-header">    <h2 class="blue">XMind<small>思维导图</small></h2>    <p>XMind 是一个全功能的思维导图和头脑风暴软件，为激发灵感和创意而生。作为一款有效提升工作和生活效率的生产力工具，受到全球百千万用户的青睐。</p>        <div class="text-right">    <a class="btn-beautify button--animated outline blue larger" href="https://www.xmind.cn"   title="XMind"><i class="far fa-hand-point-right"></i><span>XMind</span></a>    <a class="btn-beautify button--animated outline blue larger" href="https://pan.baidu.com/s/10Gy1CvkBP_aR6Yrc_KH6Rw"   title="[百度网盘life(破解)]XMind"><i class="far fa-hand-point-right"></i><span>[百度网盘life(破解)]XMind</span></a>       </div></div><div class="page-header">    <h2 class="pink">VS Code<small>强大的IDE</small></h2>    <p>VS Code，全称Visual Studio Code，是轻量的编辑器，通过下载插件，让VS Code 更加灵活，好用。你想要的功能，插件都能满足你！</p>        <div class="text-right">    <a class="btn-beautify button--animated outline pink larger" href="https://code.visualstudio.com/Download/"   title="VS Code"><i class="far fa-hand-point-right"></i><span>VS Code</span></a>       </div></div>]]></content>
      
      
      <categories>
          
          <category> Sofeware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编辑器 </tag>
            
            <tag> 神器 </tag>
            
            <tag> 强大好用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tool Sharing</title>
      <link href="2021/05/19/tooltip/"/>
      <url>2021/05/19/tooltip/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header">    <h2 class="huise">PotPlayer<small>万能播放器</small></h2>    <p>是一款绝对轻量级的万能播放器，而且免费，不会有弹窗</p>        <div class="text-right">    <a class="btn-beautify button--animated outline larger" href="https://potplayer.en.softonic.com/download"   title="PotPlayer"><i class="far fa-hand-point-right"></i><span>PotPlayer</span></a>       </div></div><div class="page-header">    <h2 class="blue">ImageGlass<small>图像查看器</small></h2>    <p>一个轻量级、多功能的图像查看器</p>        <div class="text-right">    <a class="btn-beautify button--animated outline blue larger" href="https://imageglass.org"   title="ImageGlass"><i class="far fa-hand-point-right"></i><span>ImageGlass</span></a>       </div></div><div class="page-header">    <h2 class="pink">Snipaste<small>截图工具</small></h2>    <p>Snipaste 是一个简单但强大的截图工具，也可以让你将截图贴回到屏幕上</p>        <div class="text-right">    <a class="btn-beautify button--animated outline pink larger" href="https://zh.snipaste.com/download.html"   title="Snipaste"><i class="far fa-hand-point-right"></i><span>Snipaste</span></a>       </div></div><div class="page-header">    <h2 class="red">Antelope<small>压缩照片</small></h2>    <p>Antelope是快速，批量优化的应用程序，用于JPEG和PNG文件大小，而不会降低质量</p>        <div class="text-right">    <a class="btn-beautify button--animated outline red larger" href="https://boldright.co.jp/products/antelope/"   title="Antelope"><i class="far fa-hand-point-right"></i><span>Antelope</span></a>       </div></div><div class="page-header">    <h2 class="purple">PicGo<small>图床管理</small></h2>    <p>PicGo 是一款开源跨平台的免费图片上传工具以及图床相册管理软件，它能帮你快速地将图片上传到微博、又拍云、阿里云 OSS、腾讯云 COS、七牛、GitHub、sm.ms、Imgur 等常见的免费图床网站</p>        <div class="text-right">    <a class="btn-beautify button--animated outline purple larger" href="https://github.com/Molunerfinn/PicGo/releases/tag/v2.2.2"   title="[Github]PicGo"><i class="far fa-hand-point-right"></i><span>[Github]PicGo</span></a>      <a class="btn-beautify button--animated outline purple larger" href="https://pan.baidu.com/s/1KOtURBzcILC1n3ftIuuheA"   title="[百度网盘life]PicGo"><i class="far fa-hand-point-right"></i><span>[百度网盘life]PicGo</span></a>       </div></div><div class="page-header">    <h2 class="orange">Typora<small>markdown编辑器</small></h2>    <p>一个轻量级的Markdown编辑器，简单而强大，可读可写，开源免费</p>        <div class="text-right">    <a class="btn-beautify button--animated outline orange larger" href="https://www.typora.io/"   title="Typora"><i class="far fa-hand-point-right"></i><span>Typora</span></a>       </div></div><div class="page-header">    <h2 class="green">TEMPMAIL<small>临时邮箱</small></h2>    <p>不用再担心垃圾邮件，广告邮件，黑客和机器人攻击。让您真实的邮箱保持干净和安全。Temp Mail提供临时、安全、匿名、免费的一次性电子邮件地址。</p>        <div class="text-right">    <a class="btn-beautify button--animated outline green larger" href="https://temp-mail.org/zh/"   title="TEMPMAIL"><i class="far fa-hand-point-right"></i><span>TEMPMAIL</span></a>       </div></div><div class="page-header">    <h2 class="huise">IDM<small>资源下载</small></h2>    <p>IDM，全称internetdownloadmanager。开启后，可以下载网页资源，简单快速而强大</p>        <div class="text-right">    <a class="btn-beautify button--animated outline larger" href="https://pan.baidu.com/s/1rSxKxFVuzQl1gwJ-_9iV6g"   title="[百度网盘life]TEMPMAIL"><i class="far fa-hand-point-right"></i><span>[百度网盘life]TEMPMAIL</span></a>       </div></div><div class="page-header">    <h2 class="blue">HUORONG<small>火绒安全</small></h2>    <p>不打扰，是我们的态度；易使用，是我们的温度。火绒安全也绝对轻量级，个人版免费使用，拒绝弹窗，净化一切</p>        <div class="text-right">    <a class="btn-beautify button--animated outline blue larger" href="https://www.huorong.cn"   title="HUORONG"><i class="far fa-hand-point-right"></i><span>HUORONG</span></a>       </div></div>]]></content>
      
      
      <categories>
          
          <category> Tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神器 </tag>
            
            <tag> 工具箱 </tag>
            
            <tag> 轻量级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Hexo主题</title>
      <link href="2021/05/17/Hexo2/"/>
      <url>2021/05/17/Hexo2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><blockquote><p>什么是<a href="https://git-scm.com/">Git</a>？Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们将本地搭建好的网站，使用Git工具同步到Github上</p></blockquote><p><a href="https://git-scm.com/download/win">Git下载地址</a></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517081113.png"></p><blockquote><p>在window桌面右键菜单栏，点击Git Bash Here，这是接下来需要的工具</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517081245.png"></p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><blockquote><p>Hexo基于Node.js，Node.js下载地址<a href="https://nodejs.org/en/download/%EF%BC%8C%E6%B3%A8%E6%84%8F%E5%AE%89%E8%A3%85Node.js%E4%BC%9A%E5%8C%85%E5%90%AB%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%8F%8Anpm%E7%9A%84%E5%AE%89%E8%A3%85%EF%BC%8C%E5%AE%89%E8%A3%85%E5%90%8E%EF%BC%8C%E5%9C%A8%E5%91%BD%E5%90%8D%E8%A1%8CCMD%E8%BE%93%E5%85%A5node">https://nodejs.org/en/download/，注意安装Node.js会包含环境变量及npm的安装，安装后，在命名行CMD输入node</a> -v，判断是否安装成功</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517081912.png"></p><p>通过两个命令，判断node和npm是否安装成功，安装成功会得到版本号信息</p><h3 id="使用npm命令安装Hexo-Git安装"><a href="#使用npm命令安装Hexo-Git安装" class="headerlink" title="使用npm命令安装Hexo(Git安装)"></a>使用npm命令安装Hexo(Git安装)</h3><p><code>npm install -g hexo-cli </code></p><h3 id="耐心等待安装后，准备初始化博客"><a href="#耐心等待安装后，准备初始化博客" class="headerlink" title="耐心等待安装后，准备初始化博客"></a>耐心等待安装后，准备初始化博客</h3><blockquote><p>选择一个路径，创建博客文件夹，用于存放博客的。进入博客文件夹</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517082803.png"></p><div style=text-align:center;font-size:20px>  我创建了AlovelyYou文件夹，右键打开Git Bash，输入命令<cmd>hexo init</cmd>  <br>使用命令hexo s 本地访问网站，输入临时网站localhost:4000，如下图所示</div><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517083415.png"></p><h3 id="配置username和useremail信息，本地绑定github"><a href="#配置username和useremail信息，本地绑定github" class="headerlink" title="配置username和useremail信息，本地绑定github"></a>配置username和useremail信息，本地绑定github</h3><blockquote><p>git config –global user.name “你的GitHub用户名”<br>git config –global user.email “你的GitHub注册邮箱”</p></blockquote><h3 id="生成ssh密钥文件："><a href="#生成ssh密钥文件：" class="headerlink" title="生成ssh密钥文件："></a>生成ssh密钥文件：</h3><blockquote><p>ssh-keygen -t rsa -C “你的GitHub注册邮箱”</p></blockquote><p>然后直接三个回车即可，默认不需要设置密码。在c盘用户管理员文件夹找到.ssh，打开id_rsa.push密钥，将全部内容复制下来</p><blockquote><p>$ ssh -T <a href="mailto:&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#104;&#x75;&#98;&#46;&#x63;&#111;&#x6d;">&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#104;&#x75;&#98;&#46;&#x63;&#111;&#x6d;</a> # 注意邮箱地址不用改</p></blockquote><p>因为我已经搭建了博客，不演示输入命令的结果了。按照文字说明即可</p><h3 id="进入Github设置ssh密钥"><a href="#进入Github设置ssh密钥" class="headerlink" title="进入Github设置ssh密钥"></a>进入Github设置ssh密钥</h3><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517090803.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517091154.png"></p><p>输入命令ssh <a href="mailto:&#103;&#105;&#x74;&#x40;&#103;&#x69;&#x74;&#104;&#117;&#x62;&#46;&#x63;&#x6f;&#x6d;">&#103;&#105;&#x74;&#x40;&#103;&#x69;&#x74;&#104;&#117;&#x62;&#46;&#x63;&#x6f;&#x6d;</a>，结果所下图所示说明成功啦</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517091358.png"></p><h3 id="配置hexo文件-config-yml"><a href="#配置hexo文件-config-yml" class="headerlink" title="配置hexo文件_config.yml"></a>配置hexo文件_config.yml</h3><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517091801.png"></p><p>我们将本地博客和GitHub关联起来，打开配置文件，在最后一页</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517092021.png"></p><p>如果你的仓库分支是master，在branch填master，我默认是main，如果你的默认是master，请修改</p><p>保存文件配置，现在安装Git部署插件，将本地部署到github</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-envelope --save</span><br></pre></td></tr></table></figure><p><code>hexo c</code> &amp;&amp; <code>hexo g</code> &amp;&amp;<code>hexo d</code></p><p>通过这三条命令，你可以将本地博客部署到Github上，在输入命名时，你可以跟我一样通过&amp;&amp;符合连接三个命令，你也可以单独执行</p><style></style><div style="text-align:right;"><a class="btn-beautify button--animated outline green larger" href="/2021/05/17/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2(%E4%B8%89)/"   title="搭建Hexo博客(三)"><i class="far fa-hand-point-right"></i><span>搭建Hexo博客(三)</span></a></div>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题</title>
      <link href="2021/05/17/Hexo3/"/>
      <url>2021/05/17/Hexo3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="搭建Butterfly主题"><a href="#搭建Butterfly主题" class="headerlink" title="搭建Butterfly主题"></a>搭建<a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly</a>主题</h3><blockquote><p>我自己搭建博客主题就是butterfly，也遇到了很多困惑。目前基本解决了。如果你不喜欢这个主题可以去百度搜索其他Hexo主题。接下来，我会写一些搭建butterfly主题的教程，搭建者需要配合<a href="https://butterfly.js.org/posts/21cfbf15/">官方文档</a>。单纯依靠官方文档搭建是可以的，我也是如此。</p></blockquote><h3 id="Git安装Butterfly主题"><a href="#Git安装Butterfly主题" class="headerlink" title="Git安装Butterfly主题"></a>Git安装Butterfly主题</h3><p>在你的博客根目录右键打开Git Bash</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> master https://github.com/jerryc127/hexo<span class="literal">-theme</span><span class="literal">-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><p>修改站点配置文件<code>_config.yml</code>，把主题更改<code>butterfly</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>如果你没有pug以及stylus的渲染器，请下载安装：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-renderer</span><span class="literal">-pug</span> hexo<span class="literal">-renderer</span><span class="literal">-stylus</span> -<span class="literal">-save</span></span><br></pre></td></tr></table></figure><h3 id="主题配置文件复制"><a href="#主题配置文件复制" class="headerlink" title="主题配置文件复制"></a>主题配置文件复制</h3><p>把主题文件夹中的<code>_config.yml</code>复制到Hexo根目录下，听说重新命名<code>_config.butterfly.yml</code></p><p>以后只需要在<code>_config.butterfly.yml</code>进行配置就行</p><p>Hexo会自动合并主题中的<code>_config.yml</code>和<code>_config.butterfly.yml</code>里的配置，如果存在同名配置，会使用</p><p><code>_config.butterfly.yml</code>的配置，其优先度较高。</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517110551.png"></p><h3 id="小结：butterfly主题基本样式ok"><a href="#小结：butterfly主题基本样式ok" class="headerlink" title="小结：butterfly主题基本样式ok"></a>小结：butterfly主题基本样式ok</h3><blockquote><p>以上是一些简单的搭建操作，使用Hexo命令部署到Github上，已经会有一个基本的主题样式，</p></blockquote><blockquote><p>后续我将结合文档，写留言板、说说、在线聊天等功能博客。在此之前请完善butterfly主题基本样式，如果有问题请留言</p></blockquote><div style="text-align:center;">  <a class="btn-beautify button--animated outline green larger" href="/2021/05/17/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2(%E4%B8%89)/"   title="留言板"><i class="far fa-hand-point-right"></i><span>留言板</span></a>  <a class="btn-beautify button--animated outline blue larger" href="/2021/05/17/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2(%E4%B8%89)/"   title="说说"><i class="far fa-hand-point-right"></i><span>说说</span></a>  <a class="btn-beautify button--animated outline red larger" href="/2021/05/17/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2(%E4%B8%89)/"   title="在线聊天"><i class="far fa-hand-point-right"></i><span>在线聊天</span></a></div>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue框架学习之旅</title>
      <link href="2021/05/17/Vue1/"/>
      <url>2021/05/17/Vue1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Vue-js是什么"><a href="#Vue-js是什么" class="headerlink" title="Vue.js是什么"></a>Vue.js是什么</h3><p>Vue（读音/vju:/，类似view）是一套用于构建用户界面的渐进式框架。以前学习JQuery编程叫命令式编程，学习vue编程，叫声明式编程。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用</p><h3 id="前端三大框架之一"><a href="#前端三大框架之一" class="headerlink" title="前端三大框架之一"></a>前端三大框架之一</h3><p>Vue框架：作者<a href="https://www.jianshu.com/p/3092b382ee80">尤雨溪</a>，创建了全世界三大前端框架之一，领先于React和Angular</p><p>2013年，在Google工作的尤雨溪，收到Angular的启发，开发了一款轻量框架，最初命名Seed</p><p>设计思想：是一种“渐进式框架”，淡化框架本省的主张，降低框架作为工具的复杂度，从而降低对使用者的要求</p><h3 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h3><blockquote><p>官方指南假设你已了解关于 HTML、CSS 和 JavaScript 的中级知识。如果你刚开始学习前端开发，将框架作为你的第一步可能不是最好的主意——掌握好基础知识再来吧！之前有其它框架的使用经验会有帮助，但这不是必需的。</p></blockquote><p>尝试Vue.js最简单的方法是使用hello world例子，引用vue文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告，利于初学者 --&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Vue.js的核心是一个允许采用简洁的模板语法来声明式地将数据渲染进DOM的系统：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span></span><br><span class="line">  <span class="attr">data</span>:&#123;</span><br><span class="line">  <span class="comment">//存放数据</span></span><br><span class="line">  <span class="attr">message</span>: <span class="string">&#x27;Hello Vue&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">  <span class="attr">methods</span>:&#123;</span><br><span class="line">    <span class="comment">//写方法                </span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attr">computed</span>:&#123;</span><br><span class="line">    <span class="comment">//属性方法，有缓存</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="attr">components</span>:&#123;</span><br><span class="line"><span class="comment">//声明子组件</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>以上一个简单的Vue实例，写了基本的Vue语法，使用的是Mustach语法，用来显示Vue实例的数据，但是容器需要捆绑id，接下来我会一步步记录Vue的学习笔记</p></blockquote><div style="text-align:right;">  <a class="btn-beautify button--animated outline green larger" href="/"   title="Vue框架基础"><i class="far fa-hand-point-right"></i><span>Vue框架基础</span></a></div>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Github博客</title>
      <link href="2021/05/16/Hexo1/"/>
      <url>2021/05/16/Hexo1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="搭建github博客"><a href="#搭建github博客" class="headerlink" title="搭建github博客"></a>搭建github博客</h1><ul><li><h3 id="创建Github账号"><a href="#创建Github账号" class="headerlink" title="创建Github账号"></a>创建<a href="https://github.com/join">Github账号</a></h3></li></ul><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516202937.png" alt="Github注册页面"></p><blockquote><p>选择一个好听、好记的用户名，博客以用户名为域名的，使用字母+数组组合</p></blockquote><blockquote><p>创建好github账号，验证Email，这是重要的</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516204745.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516205631.png"></p><p>进入Your repositiories 创建创库，仓库名字 username.github.io，以后进入博客名字就是这个</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516211900.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516212649.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516213223.png"></p><blockquote><p>这时候你的基本博客搭建好了，接下搭建Hexo博客主题，美化自己的博客</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516215941.png" alt="Butterfly样式"></p><h6 id="这是我们后续将会搭建的主题"><a href="#这是我们后续将会搭建的主题" class="headerlink" title="这是我们后续将会搭建的主题"></a>这是我们后续将会搭建的主题</h6><div style="text-align:right;">  <a class="btn-beautify button--animated outline green larger" href="/2021/05/17/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2(%E4%BA%8C)/"   title="搭建Hexo博客(二)"><i class="far fa-hand-point-right"></i><span>搭建Hexo博客(二)</span></a></div>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue插槽Slot</title>
      <link href="2021/05/13/Vue_slot/"/>
      <url>2021/05/13/Vue_slot/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>大纲：了解插槽Slot的基本使用、学习新概念具名，通过给slot添加值name，指定修改内容、理解插槽作用域：父级模板里的所有内容都是在父级作用域中编译的；子模板里的所有内容都是在子作用域中编译的。</p></blockquote><h1 id="插槽slot"><a href="#插槽slot" class="headerlink" title="插槽slot"></a>插槽slot</h1><h5 id="插槽slot的基本使用"><a href="#插槽slot的基本使用" class="headerlink" title="插槽slot的基本使用"></a>插槽slot的基本使用</h5><ul><li>加强扩展性：在模板添加<code>&lt;slot&gt;&lt;/slot&gt;</code>，当需要给模板新添加内容时，可以在子组件中添加</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是子组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--使用模板时需要添加button--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span></span><br><span class="line">    按钮</span><br><span class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这新增的标签会放到插槽位置上，如果有多个标签同样一起放入--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>添加默认值：如果模板在很多地方都需要这个标签，但是小部分不需要，可以给插槽添加默认值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是子组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--默认含有按钮--&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--如果不需要按钮，可以新增替换--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="具名插槽"><a href="#具名插槽" class="headerlink" title="具名插槽"></a>具名插槽</h5><blockquote><p>给<code>slot</code>插槽添加<code>name</code>值，当创建模板的时候，会存在多个插槽，当需要改变特定插槽的值，可以指定它的name</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>左边<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>中间<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>右边<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>不需要指定name，被替换<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--指定了name=&quot;left&quot;，替换默认值为button--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">slot</span>=<span class="string">&quot;left&quot;</span>&gt;</span>button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!--没有指定slot=&quot;name&quot;的都替换--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><ul><li>使用<code>v-slot</code>绑定name</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--template模板，header和footer指定了name属性--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--使用模板--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--通过template标签 用v-slot绑定特定插槽，能添加很多新标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base-layout</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Here might be a page title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>A paragraph for the main content.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>And another one.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Here&#x27;s some contact info<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">base-layout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://cn.vuejs.org/v2/guide/components-slots.html">官方示例</a></p></li><li><h5 id="编译作用域"><a href="#编译作用域" class="headerlink" title="编译作用域"></a>编译作用域</h5><blockquote><p>父级模板里的所有内容都是在父级作用域中编译的；子模板里的所有内容都是在子作用域中编译的。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--使用模板时,模板cpn相当div，使用的数据都是vue实例的，而不是模板组件数据--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">v-show:</span>&quot;<span class="attr">isShow</span>&quot;&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h5 id="作用域插槽"><a href="#作用域插槽" class="headerlink" title="作用域插槽"></a>作用域插槽</h5><ul><li>使用<code>slot</code>作用域插槽</li></ul><blockquote><p>父组件替换插槽的标签，但是内容由子组件提供</p><ul><li>因此我们需要从子组件获取到数据</li><li>但是因为作用域拿到的数据是vue实例data，因此我们需要子组件传过去</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;slot&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">&quot;item in slot.aanguage&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">:aanguage</span>=<span class="string">&quot;pLanguage&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in pLanguage&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">message</span>:<span class="string">&#x27;你好啊&#x27;</span></span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">cpn</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">template</span>:<span class="string">&#x27;#cpn&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">pLanguage</span>:[<span class="string">&#x27;Javascript&#x27;</span>,<span class="string">&#x27;C++&#x27;</span>,<span class="string">&#x27;C#&#x27;</span>,<span class="string">&#x27;Python&#x27;</span>,<span class="string">&#x27;Php&#x27;</span>]</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>PS：绑定子组件数据的名字不能使用大写，因为驼峰标识。无法识别</p><p><code>&lt;slot :aanguage=&quot;pLanguage&quot;&gt;</code></p><p><code>&lt;template slot-scope=&quot;slot&quot;&gt;</code></p><p><code>        &lt;span v-for=&quot;item in slot.aanguage&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/span&gt;</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue插槽Slot </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
