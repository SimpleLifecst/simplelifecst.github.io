<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CSS3</title>
      <link href="2021/07/07/CSS3/"/>
      <url>2021/07/07/CSS3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>CSS3 已完全向后兼容，所以你就不必改变现有的设计。</p><p>CSS3 被拆分为”模块”。旧规范已拆分成小块，还增加了新的。一些最重要 CSS3 模块如下：</p><ul><li>选择器</li><li>盒模型</li><li>背景和边框</li><li>文字特效</li><li>2D/3D转换</li><li>动画</li><li>多列布局</li><li>用户界面</li></ul><h2 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h2><p>用 CSS3，你可以创建圆角边框，添加阴影框，并作为边界的形象而不使用设计程序，如 Photoshop。</p><p>在本章中，您将了解以下的边框属性：</p><ul><li>border-radius</li><li>box-shadow</li><li>border-image</li></ul><h3 id="CSS3-圆角"><a href="#CSS3-圆角" class="headerlink" title="CSS3 圆角"></a>CSS3 圆角</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>:<span class="number">25px</span>;</span><br></pre></td></tr></table></figure><h3 id="CSS3-盒阴影"><a href="#CSS3-盒阴影" class="headerlink" title="CSS3 盒阴影"></a>CSS3 盒阴影</h3><p>CSS3 中的 box-shadow 属性被用来添加阴影:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">5px</span> <span class="number">#888888</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS3-边界图片"><a href="#CSS3-边界图片" class="headerlink" title="CSS3 边界图片"></a>CSS3 边界图片</h3><p>有了 CSS3 的 border-image 属性，你可以使用图像创建一个边框：</p><p>border-image 属性允许你指定一个图片作为边框！ 用于创建上文边框的原始图像：</p><p>在 div 中使用图片创建边框:</p><p><b class="blue">注意: </b> Internet Explorer 不支持 border-image 属性。</p><label> border-image 属性用于设置图片的边框。</label><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;round&quot;</span>&gt;</span>这里，图像平铺（重复）来填充该区域。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;stretch&quot;</span>&gt;</span>这里，图像被拉伸以填充该区域。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">15px</span> solid transparent;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#round</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">border-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://www.runoob.com/images/border.png&#x27;</span>) <span class="number">30</span> <span class="number">30</span> round;</span><br><span class="line">    <span class="comment">/* Safari 5 and older */</span></span><br><span class="line">    -o-<span class="attribute">border-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://www.runoob.com/images/border.png&#x27;</span>) <span class="number">30</span> <span class="number">30</span> round;</span><br><span class="line">    <span class="comment">/* Opera */</span></span><br><span class="line">    <span class="attribute">border-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://www.runoob.com/images/border.png&#x27;</span>) <span class="number">30</span> <span class="number">30</span> round;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#stretch</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">border-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://www.runoob.com/images/border.png&#x27;</span>) <span class="number">30</span> <span class="number">30</span> stretch;</span><br><span class="line">    <span class="comment">/* Safari 5 and older */</span></span><br><span class="line">    -o-<span class="attribute">border-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://www.runoob.com/images/border.png&#x27;</span>) <span class="number">30</span> <span class="number">30</span> stretch;</span><br><span class="line">    <span class="comment">/* Opera */</span></span><br><span class="line">    <span class="attribute">border-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://www.runoob.com/images/border.png&#x27;</span>) <span class="number">30</span> <span class="number">30</span> stretch;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><div class="sl_CSS3">        <div id="CSS3_round">这里，图像平铺（重复）来填充该区域。</div>        <div id="CSS3_stretch">这里，图像被拉伸以填充该区域。</div></div><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>CSS3 中包含几个新的背景属性，提供更大背景元素控制。</p><p>在本章您将了解以下背景属性：</p><ul><li>background-image</li><li>background-size</li><li>background-origin</li><li>background-clip</li></ul><h3 id="CSS3-background-image属性"><a href="#CSS3-background-image属性" class="headerlink" title="CSS3 background-image属性"></a>CSS3 background-image属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#example1</span> &#123; </span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">img_flwr.gif</span>), <span class="built_in">url</span>(<span class="string">paper.gif</span>); </span><br><span class="line">    <span class="attribute">background-position</span>: right bottom, left top; </span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat, repeat; </span><br><span class="line">  <span class="comment">/*控制两张图片背景，一对一对应*/</span></span><br><span class="line">  <span class="comment">/*repeat是重复叠加*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS3-background-size-属性"><a href="#CSS3-background-size-属性" class="headerlink" title="CSS3 background-size 属性"></a>CSS3 background-size 属性</h3><p>background-size指定背景图像的大小。CSS3以前，背景图像大小由图像的实际大小决定。</p><p>CSS3中可以指定背景图片，让我们重新在不同的环境中指定背景图片的大小。您可以指定像素或百分比大小。</p><p>你指定的大小是相对于父元素的宽度和高度的百分比的大小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">img_flwr.gif</span>);</span><br><span class="line">    <span class="attribute">background-size</span>:<span class="number">80px</span> <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">background-repeat</span>:no-repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS3-的-background-origin-属性"><a href="#CSS3-的-background-origin-属性" class="headerlink" title="CSS3 的 background-origin 属性"></a>CSS3 的 background-origin 属性</h3><p>background-origin 属性指定了背景图像的位置区域。</p><p>content-box, padding-box,和 border-box区域内可以放置背景图像。</p><p><img src="https://www.runoob.com/images/background-origin.gif"></p><h3 id="CSS3-多个背景图像"><a href="#CSS3-多个背景图像" class="headerlink" title="CSS3 多个背景图像"></a>CSS3 多个背景图像</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">img_flwr.gif</span>),<span class="built_in">url</span>(<span class="string">img_tree.gif</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS3-background-clip属性"><a href="#CSS3-background-clip属性" class="headerlink" title="CSS3 background-clip属性"></a>CSS3 background-clip属性</h3><p>CSS3中background-clip背景剪裁属性是从指定位置开始绘制。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#example1</span> &#123; </span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> dotted black; </span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">35px</span>; </span><br><span class="line">    <span class="attribute">background</span>: yellow; </span><br><span class="line">    <span class="attribute">background-clip</span>: content-box; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h2><p>CSS3 渐变（gradients）可以让你在两个或多个指定的颜色之间显示平稳的过渡。</p><p>以前，你必须使用图像来实现这些效果。但是，通过使用 CSS3 渐变（gradients），你可以减少下载的时间和宽带的使用。此外，渐变效果的元素在放大时看起来效果更好，因为渐变（gradient）是由浏览器生成的。</p><p>CSS3 定义了两种类型的渐变（gradients）：</p><ul><li><strong>线性渐变（Linear Gradients）- 向下/向上/向左/向右/对角方向</strong></li><li><strong>径向渐变（Radial Gradients）- 由它们的中心定义</strong></li></ul><p>线性渐变相关属性：<a href="https://www.runoob.com/cssref/pr-background-image.html">background-image</a>。</p><h3 id="CSS3-线性渐变"><a href="#CSS3-线性渐变" class="headerlink" title="CSS3 线性渐变"></a>CSS3 线性渐变</h3><p>为了创建一个线性渐变，你必须至少定义两种颜色节点。颜色节点即你想要呈现平稳过渡的颜色。同时，你也可以设置一个起点和一个方向（或一个角度）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(direction, color-stop1, color-stop2, ...);</span><br></pre></td></tr></table></figure><p><strong>线性渐变 - 从上到下（默认情况下）</strong></p><p><strong>线性渐变 - 从左到右</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#grad</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right, red , yellow);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>线性渐变 - 对角</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#grad</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to bottom right, red, yellow);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>线性渐变 - 使用角度</strong></p><p>如果你想要在渐变的方向上做更多的控制，你可以定义一个角度，而不用预定义方向（to bottom、to top、to right、to left、to bottom right，等等）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(angle, color-stop1, color-stop2);</span><br></pre></td></tr></table></figure><p>角度是指水平线和渐变线之间的角度，逆时针方向计算。换句话说，0deg 将创建一个从下到上的渐变，90deg 将创建一个从左到右的渐变。</p><img src="https://www.runoob.com/wp-content/uploads/2014/07/7B0CC41A-86DC-4E1B-8A69-A410E6764B91.jpg" style="zoom:50%;" /><blockquote><p>但是，请注意很多浏览器（Chrome、Safari、firefox等）的使用了旧的标准，即 0deg 将创建一个从左到右的渐变，90deg 将创建一个从下到上的渐变。换算公式 90 - x = y 其中 x 为标准角度，y为非标准角度。</p></blockquote><h3 id="CSS3-径向渐变"><a href="#CSS3-径向渐变" class="headerlink" title="CSS3 径向渐变"></a>CSS3 径向渐变</h3><p>径向渐变由它的中心定义。</p><p>为了创建一个径向渐变，你也必须至少定义两种颜色节点。颜色节点即你想要呈现平稳过渡的颜色。同时，你也可以指定渐变的中心、形状（圆形或椭圆形）、大小。默认情况下，渐变的中心是 center（表示在中心点），渐变的形状是 ellipse（表示椭圆形），渐变的大小是 farthest-corner（表示到最远的角落）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(shape size at position, start-color, ..., last-color);</span><br></pre></td></tr></table></figure><h2 id="文本效果"><a href="#文本效果" class="headerlink" title="文本效果"></a>文本效果</h2><p>CSS3中包含几个新的文本特征。</p><p>在本章中您将了解以下文本属性：</p><ul><li>text-shadow</li><li>box-shadow</li><li>text-overflow</li><li>word-wrap</li><li>word-break</li></ul><h3 id="CSS3-的文本阴影"><a href="#CSS3-的文本阴影" class="headerlink" title="CSS3 的文本阴影"></a>CSS3 的文本阴影</h3><p>CSS3 中，text-shadow属性适用于文本阴影。<br><text id="CSS_shadow">Text shadow effect</text></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="number">#FF0000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS3-box-shadow属性"><a href="#CSS3-box-shadow属性" class="headerlink" title="CSS3 box-shadow属性"></a>CSS3 box-shadow属性</h3><p>CSS3 中 CSS3 box-shadow 属性适用于盒子阴影</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">5px</span> <span class="number">#888888</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2D-转换"><a href="#2D-转换" class="headerlink" title="2D 转换"></a>2D 转换</h2><p>CSS3 转换可以对元素进行移动、缩放、转动、拉长或拉伸。</p><p>在本章您将了解2D变换方法：</p><ul><li>translate()</li><li>rotate()</li><li>scale()</li><li>skew()</li><li>matrix()</li></ul><h3 id="translate-方法"><a href="#translate-方法" class="headerlink" title="translate() 方法"></a>translate() 方法</h3>  <img src="https://www.runoob.com/images/transform_translate.gif"><p>translate()方法，根据左(X轴)和顶部(Y轴)位置给定的参数，从当前元素位置移动。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">50px</span>,<span class="number">100px</span>);</span><br><span class="line">-ms-<span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">50px</span>,<span class="number">100px</span>); <span class="comment">/* IE 9 */</span></span><br><span class="line">-webkit-<span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">50px</span>,<span class="number">100px</span>); <span class="comment">/* Safari and Chrome */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*translate值（50px，100px）是从左边元素移动50个像素，并从顶部移动100像素。*/</span></span><br></pre></td></tr></table></figure><h3 id="rotate-方法"><a href="#rotate-方法" class="headerlink" title="rotate() 方法"></a>rotate() 方法</h3><p>rotate()方法，在一个给定度数顺时针旋转的元素。负值是允许的，这样是元素逆时针旋转。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">30deg</span>);</span><br><span class="line">-ms-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">30deg</span>); <span class="comment">/* IE 9 */</span></span><br><span class="line">-webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">30deg</span>); <span class="comment">/* Safari and Chrome */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="scale-方法"><a href="#scale-方法" class="headerlink" title="scale() 方法"></a>scale() 方法</h3><p>scale()方法，该元素增加或减少的大小，取决于宽度（X轴）和高度（Y轴）的参数：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-ms-<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">2</span>,<span class="number">3</span>); <span class="comment">/* IE 9 */</span></span><br><span class="line">-webkit-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2</span>,<span class="number">3</span>); <span class="comment">/* Safari */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2</span>,<span class="number">3</span>); <span class="comment">/* 标准语法 */</span></span><br></pre></td></tr></table></figure><p>scale（2,3）转变宽度为原来的大小的2倍，和其原始大小3倍的高度。</p><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><p>CSS3 可以创建动画，它可以取代许多网页动画图像、Flash 动画和 JavaScript 实现的效果。</p><div id="myfirst">SimpleLife</div><h3 id="CSS3-动画"><a href="#CSS3-动画" class="headerlink" title="CSS3 动画"></a>CSS3 动画</h3><p>当在 <strong>@keyframes</strong> 创建动画，把它绑定到一个选择器，否则动画不会有任何效果。</p><p>指定至少这两个CSS3的动画属性绑定向一个选择器：</p><ul><li>规定动画的名称</li><li>规定动画的时长</li></ul><p>把 “myfirst” 动画捆绑到 div 元素，时长：5 秒：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">animation</span>: myfirst <span class="number">5s</span>;</span><br><span class="line">    -webkit-<span class="attribute">animation</span>: myfirst <span class="number">5s</span>; <span class="comment">/* Safari 与 Chrome */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意:</strong> 您必须定义动画的名称和动画的持续时间。如果省略的持续时间，动画将无法运行，因为默认值是0。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> myfirst</span><br><span class="line">&#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;<span class="attribute">background</span>: red;&#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;<span class="attribute">background</span>: yellow;&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> myfirst /* Safari 与 Chrome */</span><br><span class="line">&#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;<span class="attribute">background</span>: red;&#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;<span class="attribute">background</span>: yellow;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS3动画是什么？"><a href="#CSS3动画是什么？" class="headerlink" title="CSS3动画是什么？"></a>CSS3动画是什么？</h3><p>动画是使元素从一种样式逐渐变化为另一种样式的效果。</p><p>您可以改变任意多的样式任意多的次数。</p><p>请用百分比来规定变化发生的时间，或用关键词 “from” 和 “to”，等同于 0% 和 100%。</p><p>0% 是动画的开始，100% 是动画的完成。</p><p>为了得到最佳的浏览器支持，您应该始终定义 0% 和 100% 选择器。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> myfirst</span><br><span class="line">&#123;</span><br><span class="line">    <span class="number">0%</span>   &#123;<span class="attribute">background</span>: red;&#125;</span><br><span class="line">    <span class="number">25%</span>  &#123;<span class="attribute">background</span>: yellow;&#125;</span><br><span class="line">    <span class="number">50%</span>  &#123;<span class="attribute">background</span>: blue;&#125;</span><br><span class="line">    <span class="number">100%</span> &#123;<span class="attribute">background</span>: green;&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> myfirst /* Safari 与 Chrome */</span><br><span class="line">&#123;</span><br><span class="line">    <span class="number">0%</span>   &#123;<span class="attribute">background</span>: red;&#125;</span><br><span class="line">    <span class="number">25%</span>  &#123;<span class="attribute">background</span>: yellow;&#125;</span><br><span class="line">    <span class="number">50%</span>  &#123;<span class="attribute">background</span>: blue;&#125;</span><br><span class="line">    <span class="number">100%</span> &#123;<span class="attribute">background</span>: green;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多列"><a href="#多列" class="headerlink" title="多列"></a>多列</h2><p>我们将学习以下几个 CSS3 的多列属性:</p><ul><li><code>column-count</code></li><li><code>column-gap</code></li><li><code>column-rule-style</code></li><li><code>column-rule-width</code></li><li><code>column-rule-color</code></li><li><code>column-rule</code></li><li><code>column-span</code></li><li><code>column-width</code></li></ul><h3 id="CSS3-创建多列"><a href="#CSS3-创建多列" class="headerlink" title="CSS3 创建多列"></a>CSS3 创建多列</h3><p><code>column-count</code> 属性指定了需要分割的列数。</p><p>以下实例将 <div> 元素中的文本分为 3 列：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">column-count</span>: <span class="number">3</span>; <span class="comment">/* Chrome, Safari, Opera */</span></span><br><span class="line">    -moz-<span class="attribute">column-count</span>: <span class="number">3</span>; <span class="comment">/* Firefox */</span></span><br><span class="line">    <span class="attribute">column-count</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS3-多列中列与列间的间隙"><a href="#CSS3-多列中列与列间的间隙" class="headerlink" title="CSS3 多列中列与列间的间隙"></a>CSS3 多列中列与列间的间隙</h3><p><code>column-gap</code> 属性指定了列与列间的间隙。</p><p>以下实例指定了列与列间的间隙为 40 像素：</p><h2 id="用户界面"><a href="#用户界面" class="headerlink" title="用户界面"></a>用户界面</h2><h3 id="CSS3-用户界面"><a href="#CSS3-用户界面" class="headerlink" title="CSS3 用户界面"></a>CSS3 用户界面</h3><p>在 CSS3 中, 增加了一些新的用户界面特性来调整元素尺寸，框尺寸和外边框。</p><p>在本章中，您将了解以下的用户界面属性：</p><ul><li>resize</li><li>box-sizing</li><li>outline-offset</li></ul><h3 id="CSS3-调整尺寸-Resizing"><a href="#CSS3-调整尺寸-Resizing" class="headerlink" title="CSS3 调整尺寸(Resizing)"></a>CSS3 调整尺寸(Resizing)</h3><p>由用户指定一个div元素尺寸大小：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">resize</span>:both;</span><br><span class="line">    <span class="attribute">overflow</span>:auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><h3 id="缩略图"><a href="#缩略图" class="headerlink" title="缩略图"></a>缩略图</h3><p>我们使用 <code>border</code> 属性来创建缩略图。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">img &#123;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">    border-radius: 4px;</span><br><span class="line">    padding: 5px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;paris.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Paris&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="响应式图片"><a href="#响应式图片" class="headerlink" title="响应式图片"></a>响应式图片</h3><p>响应式图片会自动适配各种尺寸的屏幕。</p><p>实例中，你可以通过重置浏览器大小查看效果:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="弹性盒子"><a href="#弹性盒子" class="headerlink" title="弹性盒子"></a>弹性盒子</h2><p>弹性盒子是 CSS3 的一种新的布局模式。</p><p>CSS3 弹性盒（ Flexible Box 或 flexbox），是一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式。</p><p>引入弹性盒布局模型的目的是提供一种更加有效的方式来对一个容器中的子元素进行排列、对齐和分配空白空间</p><h3 id="CSS3-弹性盒子内容"><a href="#CSS3-弹性盒子内容" class="headerlink" title="CSS3 弹性盒子内容"></a>CSS3 弹性盒子内容</h3><p>弹性盒子由弹性容器(Flex container)和弹性子元素(Flex item)组成。<br>弹性容器通过设置 display 属性的值为 flex 或 inline-flex将其定义为弹性容器。<br>弹性容器内包含了一个或多个弹性子元素。</p><p><strong>注意：</strong> 弹性容器外及弹性子元素内是正常渲染的。弹性盒子只定义了弹性子元素如何在弹性容器内布局。</p><p>弹性子元素通常在弹性盒子内一行显示。默认情况每个容器只有一行。<br>以下元素展示了弹性子元素在一行内显示，从左到右:</p><h3 id="flex-direction"><a href="#flex-direction" class="headerlink" title="flex-direction"></a>flex-direction</h3><p><code>flex-direction</code> 属性指定了弹性子元素在父容器中的位置。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-direction</span>: row | row-reverse | column | column-reverse</span><br></pre></td></tr></table></figure><p><code>flex-direction</code>的值有:</p><ul><li>row：横向从左到右排列（左对齐），默认的排列方式。</li><li>row-reverse：反转横向排列（右对齐，从后往前排，最后一项排在最前面。</li><li>column：纵向排列。</li><li>column-reverse：反转纵向排列，从后往前排，最后一项排在最上面。</li></ul><h3 id="justify-content-属性"><a href="#justify-content-属性" class="headerlink" title="justify-content 属性"></a>justify-content 属性</h3><p>内容对齐（justify-content）属性应用在弹性容器上，把弹性项沿着弹性容器的主轴线（main axis）对齐。</p><p><strong>justify-content 语法如下：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">justify-content</span>: flex-start | flex-end | center | space-between | space-around</span><br></pre></td></tr></table></figure><p>各个值解析:</p><ul><li><p>flex-start：</p><p>弹性项目向行头紧挨着填充。这个是默认值。第一个弹性项的main-start外边距边线被放置在该行的main-start边线，而后续弹性项依次平齐摆放。</p></li><li><p>flex-end：</p><p>弹性项目向行尾紧挨着填充。第一个弹性项的main-end外边距边线被放置在该行的main-end边线，而后续弹性项依次平齐摆放。</p></li><li><p>center：</p><p>弹性项目居中紧挨着填充。（如果剩余的自由空间是负的，则弹性项目将在两个方向上同时溢出）。</p></li><li><p>space-between：</p><p>弹性项目平均分布在该行上。如果剩余空间为负或者只有一个弹性项，则该值等同于flex-start。否则，第1个弹性项的外边距和行的main-start边线对齐，而最后1个弹性项的外边距和行的main-end边线对齐，然后剩余的弹性项分布在该行上，相邻项目的间隔相等。</p></li><li><p>space-around：</p><p>弹性项目平均分布在该行上，两边留有一半的间隔空间。如果剩余空间为负或者只有一个弹性项，则该值等同于center。否则，弹性项目沿该行分布，且彼此间隔相等（比如是20px），同时首尾两边和弹性容器之间留有一半的间隔（1/2*20px=10px）。</p></li></ul><h3 id="align-items-属性"><a href="#align-items-属性" class="headerlink" title="align-items 属性"></a>align-items 属性</h3><p><code>align-items</code> 设置或检索弹性盒子元素在侧轴（纵轴）方向上的对齐方式。</p><p><strong>语法：</strong>**</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">align-items</span>: flex-start | flex-end | center | baseline | stretch</span><br></pre></td></tr></table></figure><p>各个值解析: 控制item上下</p><ul><li>flex-start：弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴起始边界。</li><li>flex-end：弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴结束边界。</li><li>center：弹性盒子元素在该行的侧轴（纵轴）上居中放置。（如果该行的尺寸小于弹性盒子元素的尺寸，则会向两个方向溢出相同的长度）。</li><li>baseline：如弹性盒子元素的行内轴与侧轴为同一条，则该值与’flex-start’等效。其它情况下，该值将参与基线对齐。</li><li>stretch：如果指定侧轴大小的属性值为’auto’，则其值会使项目的边距盒的尺寸尽可能接近所在行的尺寸，但同时会遵照’min/max-width/height’属性的限制。<cst>填充容器</cst></li></ul><h3 id="flex-wrap-属性"><a href="#flex-wrap-属性" class="headerlink" title="flex-wrap 属性"></a>flex-wrap 属性</h3><p><strong>flex-wrap</strong> 属性用于指定弹性盒子的子元素换行方式。</p><p><strong>语法:</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-wrap</span>: nowrap|wrap|wrap-reverse|initial|inherit;</span><br></pre></td></tr></table></figure><p>各个值解析:</p><ul><li><strong>nowrap</strong> - 默认， 弹性容器为单行。该情况下弹性子项可能会溢出容器。</li><li><strong>wrap</strong> - 弹性容器为多行。该情况下弹性子项溢出的部分会被放置到新行，子项内部会发生断行</li><li><strong>wrap-reverse</strong> -反转 wrap 排列。</li></ul><h3 id="align-content-属性"><a href="#align-content-属性" class="headerlink" title="align-content 属性"></a>align-content 属性</h3><p><code>align-content</code> 属性用于修改 <code>flex-wrap</code> 属性的行为。类似于 <code>align-items</code>, 但它不是设置弹性子元素的对齐，而是设置各个行的对齐。</p><p><strong>语法:</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch</span><br></pre></td></tr></table></figure><p>各个值解析:</p><ul><li><code>stretch</code> - 默认。各行将会伸展以占用剩余的空间。</li><li><code>flex-start</code> - 各行向弹性盒容器的起始位置堆叠。</li><li><code>flex-end</code> - 各行向弹性盒容器的结束位置堆叠。</li><li><code>center</code> -各行向弹性盒容器的中间位置堆叠。</li><li><code>space-between</code> -各行在弹性盒容器中平均分布。</li><li><code>space-around</code> - 各行在弹性盒容器中平均分布，两端保留子元素与子元素之间间距大小的一半。</li></ul><h2 id="多媒体查询"><a href="#多媒体查询" class="headerlink" title="多媒体查询"></a>多媒体查询</h2><h3 id="CSS3-多媒体查"><a href="#CSS3-多媒体查" class="headerlink" title="CSS3 多媒体查"></a>CSS3 多媒体查</h3><p>CSS3 的多媒体查询继承了 CSS2 多媒体类型的所有思想： 取代了查找设备的类型，CSS3 根据设置自适应显示。</p><p>媒体查询可用于检测很多事情，例如：</p><ul><li>viewport(视窗) 的宽度与高度</li><li>设备的宽度与高度</li><li>朝向 (智能手机横屏，竖屏) 。</li><li>分辨率</li></ul><p>目前很多针对苹果手机，Android 手机，平板等设备都会使用到多媒体查询。</p><h3 id="多媒体查询语法"><a href="#多媒体查询语法" class="headerlink" title="多媒体查询语法"></a>多媒体查询语法</h3><p>多媒体查询由多种媒体组成，可以包含一个或多个表达式，表达式根据条件是否成立返回 true 或 false。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> <span class="keyword">not</span>|<span class="keyword">only</span> mediatype <span class="keyword">and</span> (expressions) &#123;</span><br><span class="line">    CSS 代码...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5</title>
      <link href="2021/07/06/HTML5/"/>
      <url>2021/07/06/HTML5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="HTML5-lt-DOCTYPE-gt"><a href="#HTML5-lt-DOCTYPE-gt" class="headerlink" title="HTML5 &lt;!DOCTYPE&gt;"></a>HTML5 &lt;!DOCTYPE&gt;</h2><p><code>&lt;!doctype&gt;</code>声明必须位于 HTML5 文档中的第一行,使用非常简单:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="将-HTML5-元素定义为块元素"><a href="#将-HTML5-元素定义为块元素" class="headerlink" title="将 HTML5 元素定义为块元素"></a>将 HTML5 元素定义为块元素</h2><p>HTML5 定了 8 个新的 HTML <strong>语义（semantic）</strong> 元素。所有这些元素都是 <strong>块级</strong> 元素。</p><p>为了能让旧版本的浏览器正确显示这些元素，你可以设置 CSS 的 <strong>display</strong> 属性值为 <strong>block</strong>:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">header</span>, <span class="selector-tag">section</span>, <span class="selector-tag">footer</span>, <span class="selector-tag">aside</span>, <span class="selector-tag">nav</span>, <span class="selector-tag">main</span>, <span class="selector-tag">article</span>, <span class="selector-tag">figure</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="语义元素"><a href="#语义元素" class="headerlink" title="语义元素"></a>语义元素</h2><table><thead><tr><th align="left">标签</th><th>描述</th></tr></thead><tbody><tr><td align="left"><code>&lt;article&gt; </code></td><td>定义页面独立的内容区域。</td></tr><tr><td align="left"><code>&lt;aside&gt; </code></td><td>定义页面的侧边栏内容。</td></tr><tr><td align="left"><code> &lt;command&gt;</code></td><td>定义命令按钮，比如单选按钮、复选框或按钮</td></tr><tr><td align="left"><code>&lt;footer&gt;</code></td><td>定义 section 或 document 的页脚。</td></tr><tr><td align="left"><code>&lt;header&gt;</code></td><td>定义了文档的头部区域</td></tr><tr><td align="left"><code>&lt;nav&gt;   </code></td><td>定义导航链接的部分。</td></tr><tr><td align="left"><code> &lt;section&gt;</code></td><td>定义文档中的节（section、区段）。</td></tr><tr><td align="left"><code>&lt;main&gt;  </code></td><td>定义页面主体部分</td></tr></tbody></table><p><img src="https://www.runoob.com/wp-content/uploads/2013/07/html5-layout.jpg"></p><h2 id="Internet-Explorer-浏览器问题"><a href="#Internet-Explorer-浏览器问题" class="headerlink" title="Internet Explorer 浏览器问题"></a>Internet Explorer 浏览器问题</h2><p>你可以使用以上的方法来为 IE 浏览器添加 HTML5 元素，但是： Internet Explorer 8 及更早 IE 版本的浏览器不支持以上的方式。</p><p>我们可以使用 Sjoerd Visscher 创建的 “HTML5 Enabling JavaScript”, “ <strong>shiv</strong>“ 来解决该问题:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">  &lt;script src=&quot;http://html5shiv.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure><p>以上代码是一个注释，作用是在 IE 浏览器的版本小于 IE9 时将读取 html5.js 文件，并解析它。</p><p><strong>注意：</strong>国内用户请使用本站静态资源库（Google 资源库在国内不稳定）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">  &lt;script src=&quot;http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure><p>针对IE浏览器html5shiv 是比较好的解决方案。html5shiv主要解决HTML5提出的新的元素不被IE6-8识别，这些新元素不能作为父节点包裹子元素，并且不能应用CSS样式。</p><h2 id="HTML5-拖放（Drag-和-Drop）"><a href="#HTML5-拖放（Drag-和-Drop）" class="headerlink" title="HTML5 拖放（Drag 和 Drop）"></a>HTML5 拖放（Drag 和 Drop）</h2><p>拖放（Drag 和 drop）是 HTML5 标准的组成部分。</p><h2 id="HTML5-Video-视频"><a href="#HTML5-Video-视频" class="headerlink" title="HTML5 Video(视频)"></a>HTML5 Video(视频)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">width</span>=<span class="string">&quot;320&quot;</span> <span class="attr">height</span>=<span class="string">&quot;240&quot;</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;movie.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;movie.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/ogg&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--您的浏览器不支持Video标签。--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML-事件属性"><a href="#HTML-事件属性" class="headerlink" title="HTML 事件属性"></a>HTML 事件属性</h2><h3 id="全局事件属性"><a href="#全局事件属性" class="headerlink" title="全局事件属性"></a><a href="https://www.runoob.com/tags/ref-eventattributes.html">全局事件属性</a></h3><p>HTML 4 的新特性之一是可以使 HTML 事件触发浏览器中的行为，比方说当用户点击某个 HTML 元素时启动一段 JavaScript。</p><p>如果你想学习更多关于事件属性，请访问 <a href="https://www.runoob.com/tags/js-tutorial.html">JavaScript 教程</a></p><p>下面的表格提供了标准的事件属性，可以把它们插入 HTML/XHTML 元素中，以定义事件行为。</p><p><strong>New</strong> : HTML5新增属性事件。</p><ul><li><cst>窗口事件属性</cst></li><li><cst>表单事件</cst></li><li><cst>键盘事件</cst></li><li><cst>鼠标事件</cst></li><li><cst>多媒体事件</cst></li></ul><h2 id="HTML-颜色混搭"><a href="#HTML-颜色混搭" class="headerlink" title="HTML 颜色混搭"></a><a href="https://www.runoob.com/tags/colors-mixer.html">HTML 颜色混搭</a></h2>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS3 @media 查询</title>
      <link href="2021/07/03/CSS_@media/"/>
      <url>2021/07/03/CSS_@media/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>如果文档宽度小于 300 像素则修改背景颜色(background-color):</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">300px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">body</span> &#123;</span><br><span class="line">        <span class="attribute">background-color</span>:lightblue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义和使用"><a href="#定义和使用" class="headerlink" title="定义和使用"></a>定义和使用</h2><p>使用 @media 查询，你可以针对不同的媒体类型定义不同的样式。</p><p>@media 可以针对不同的屏幕尺寸设置不同的样式，特别是如果你需要设置设计响应式的页面，@media 是非常有用的。</p><p>当你重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面。</p><h2 id="CSS-语法"><a href="#CSS-语法" class="headerlink" title="CSS 语法"></a>CSS 语法</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> mediatype <span class="keyword">and</span>|<span class="keyword">not</span>|<span class="keyword">only</span> (media feature) &#123;</span><br><span class="line">    CSS-<span class="selector-tag">Code</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你也可以针对不同的媒体使用不同 <em>stylesheets</em> :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">media</span>=<span class="string">&quot;mediatype and|not|only (media feature)&quot;</span> <span class="attr">href</span>=<span class="string">&quot;mystylesheet.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="媒体类型"><a href="#媒体类型" class="headerlink" title="媒体类型"></a>媒体类型</h2><p><img src="https://gitee.com/lovehuating/image/raw/master/20210703224554.png"></p><h2 id="媒体功能"><a href="#媒体功能" class="headerlink" title="媒体功能"></a>媒体功能</h2><p><img src="https://gitee.com/lovehuating/image/raw/master/20210703224650.png"></p><p><img src="https://gitee.com/lovehuating/image/raw/master/20210703224805.png"></p><h2 id="更多实例"><a href="#更多实例" class="headerlink" title="更多实例"></a>更多实例</h2><p>使用 @media 查询来制作响应式设计：兼容PC端，平板端，手机端</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--首先要在HTML的头中写上以下几行代码--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/media.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--[if lt IE 9]--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://oss.maxcdn.com/lib/html5shiv/3.7.0/html5shiv.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  不完整…………</span><br><span class="line"><span class="comment">&lt;!--![endif]--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 屏幕大于1200px (大屏幕电脑) */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">1200px</span>)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 屏幕在1024px-1199之间 (中屏幕电脑) */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">1024px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">1199px</span>)&#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 屏幕在768px-1023px之间 (小屏幕) */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">768px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">1023px</span>)&#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 屏幕在480px-768px之间 (主要是手机屏幕样式) */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">480px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>)&#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>)&#123;</span><br><span class="line">  <span class="comment">/* 在屏幕768px以下 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> media </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组件</title>
      <link href="2021/06/29/Bootstrap_Components/"/>
      <url>2021/06/29/Bootstrap_Components/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> Bootstrap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap 实例</title>
      <link href="2021/06/29/Bootstrap_Example/"/>
      <url>2021/06/29/Bootstrap_Example/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="导航条"><a href="#导航条" class="headerlink" title="导航条"></a>导航条</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-inverse navbar-fixed-top&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggle collapsed&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;collapse&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">data-target</span>=<span class="string">&quot;#navbar&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;navbar&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">               <span class="comment">&lt;!-- &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; --&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Bootstrap theme<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;navbar&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-collapse collapse&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>About<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>Dropdown </span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-header&quot;</span>&gt;</span>Nav header<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>One more separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这是bootstrap主题导航条，是响应式布局。当在手机上展现如下图所示</p></blockquote><p><img src="https://gitee.com/lovehuating/image/raw/master/20210629211332.png"></p><p>这是一个可点击的小按钮，组成元素如下。在使用Bootstrap组件需要添加<code>bootstrap.js &amp;&amp; Jquery.js</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggle collapsed&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;collapse&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">data-target</span>=<span class="string">&quot;#navbar&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;navbar&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="comment">&lt;!--图标是一条横线--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>data-target=&quot;#navbar&quot;</code> 指向需要展出的导航</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--添加id=&quot;navbar&quot;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;navbar&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-collapse collapse&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav&quot;</span>&gt;</span>…………</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Bootstrap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全局CSS样式</title>
      <link href="2021/06/28/Global_CSS_Styles/"/>
      <url>2021/06/28/Global_CSS_Styles/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="概括"><a href="#概括" class="headerlink" title="概括"></a>概括</h2><p>深入了解 Bootstrap 底层结构的关键部分，包括我们让 web 开发变得更好、更快、更强壮的最佳实践。</p><h3 id="HTML5-文档类型"><a href="#HTML5-文档类型" class="headerlink" title="HTML5 文档类型"></a>HTML5 文档类型</h3><p>Bootstrap 使用到的某些 HTML 元素和 CSS 属性需要将页面设置为 HTML5 文档类型。在你项目中的每个页面都要参照下面的格式进行设置。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="移动设备优先"><a href="#移动设备优先" class="headerlink" title="移动设备优先"></a>移动设备优先</h3><p>在 Bootstrap 2 中，我们对框架中的某些关键部分增加了对移动设备友好的样式。而在 Bootstrap 3 中，我们重写了整个框架，使其一开始就是对移动设备友好的。这次不是简单的增加一些可选的针对移动设备的样式，而是直接融合进了框架的内核中。也就是说，<strong>Bootstrap 是移动设备优先的</strong>。针对移动设备的样式融合进了框架的每个角落，而不是增加一个额外的文件。</p><p>为了确保适当的绘制和触屏缩放，需要在 <code>&lt;head&gt;</code> 之中<strong>添加 viewport 元数据标签</strong>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在移动设备浏览器上，通过为视口（viewport）设置 meta 属性为 <code>user-scalable=no</code> 可以禁用其缩放（zooming）功能。这样禁用缩放功能后，用户只能滚动屏幕，就能让你的网站看上去更像原生应用的感觉。注意，这种方式我们并不推荐所有网站使用，还是要看你自己的情况而定！</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="排版与链接"><a href="#排版与链接" class="headerlink" title="排版与链接"></a>排版与链接</h3><p>Bootstrap 排版、链接样式设置了基本的全局样式。分别是：</p><ul><li>为 <code>body</code> 元素设置 <code>background-color: #fff;</code></li><li>使用 <code>@font-family-base</code>、<code>@font-size-base</code> 和 <code>@line-height-base</code> 变量作为排版的基本参数</li><li>为所有链接设置了基本颜色 <code>@link-color</code> ，并且当链接处于 <code>:hover</code> 状态时才添加下划线</li></ul><p>这些样式都能在 <code>scaffolding.less</code> 文件中找到对应的源码。</p><h3 id="Normalize-css"><a href="#Normalize-css" class="headerlink" title="Normalize.css"></a>Normalize.css</h3><p>为了增强跨浏览器渲染的一致性，我们使用了 <a href="https://necolas.github.io/normalize.css/">Normalize.css</a>，这是由 <a href="https://twitter.com/necolas">Nicolas Gallagher</a> 和 <a href="https://twitter.com/jon_neal">Jonathan Neal</a> 维护的一个CSS 重置样式库。</p><h3 id="布局容器"><a href="#布局容器" class="headerlink" title="布局容器"></a>布局容器</h3><p>Bootstrap 需要为页面内容和栅格系统包裹一个 <code>.container</code> 容器。我们提供了两个作此用处的类。注意，由于 <code>padding</code> 等属性的原因，这两种 容器类不能互相嵌套。</p><p><code>.container</code> 类用于固定宽度并支持响应式布局的容器。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>.container-fluid</code> 类用于 100% 宽度，占据全部视口（viewport）的容器。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="栅格系统"><a href="#栅格系统" class="headerlink" title="栅格系统"></a>栅格系统</h2><p>Bootstrap 提供了一套响应式、移动设备优先的流式栅格系统，随着屏幕或视口（viewport）尺寸的增加，系统会自动分为最多12列。它包含了易于使用的<a href="https://v3.bootcss.com/css/#grid-example-basic">预定义类</a>，还有强大的<a href="https://v3.bootcss.com/css/#grid-less">mixin 用于生成更具语义的布局</a>。</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>栅格系统用于通过一系列的行（row）与列（column）的组合来创建页面布局，你的内容就可以放入这些创建好的布局中。下面就介绍一下 Bootstrap 栅格系统的工作原理：</p><ul><li><p>“行（row）”必须包含在 <code>.container</code>‘ （固定宽度）或 <code>.container-fluid </code>（100% 宽度）中，以便为其赋予合适的排列（aligment）和内补（padding）。</p></li><li><p>通过“行（row）”在水平方向创建一组“列（column）”。</p></li><li><p>你的内容应当放置于“列（column）”内，并且，只有“列（column）”可以作为行（row）”的直接子元素。</p></li><li><p>类似 <code>.row </code>和 <code>.col-xs-4</code> 这种预定义的类，可以用来快速创建栅格布局。Bootstrap 源码中定义的 mixin 也可以用来创建语义化的布局。</p></li><li><p>通过为“列（column）”设置 <code>padding</code> 属性，从而创建列与列之间的间隔（gutter）。通过为 <code>.row</code> 元素设置负值 margin 从而抵消掉为 <code>.container </code>元素设置的 <code>padding</code>，也就间接为“行（row）”所包含的“列（column）”抵消掉了<code>padding</code>。</p></li><li><p>负值的 margin就是下面的示例为什么是向外突出的原因。在栅格列中的内容排成一行。</p></li><li><p>栅格系统中的列是通过指定1到12的值来表示其跨越的范围。例如，三个等宽的列可以使用三个 <code>.col-xs-4</code> 来创建。</p></li><li><p>如果一“行（row）”中包含了的“列（column）”大于 12，多余的“列（column）”所在的元素将被作为一个整体另起一行排列。</p></li><li><p>栅格类适用于与屏幕宽度大于或等于分界点大小的设备 ， 并且针对小屏幕设备覆盖栅格类。 因此，在元素上应用任何 <code>.col-md-*</code> 栅格类适用于与屏幕宽度大于或等于分界点大小的设备 ， 并且针对小屏幕设备覆盖栅格类。 因此，在元素上应用任何<code> .col-lg-*</code> 不存在， 也影响大屏幕设备。6</p></li></ul><p>通过研究后面的实例，可以将这些原理应用到你的代码中。</p><h3 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a>媒体查询</h3><p>在栅格系统中，我们在 Less 文件中使用以下媒体查询（media query）来创建关键的分界点阈值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/* 超小屏幕（手机，小于 768px） */</span><br><span class="line">/* 没有任何媒体查询相关的代码，因为这在 Bootstrap 中是默认的（还记得 Bootstrap 是移动设备优先的吗？） */</span><br><span class="line"></span><br><span class="line">/* 小屏幕（平板，大于等于 768px） */</span><br><span class="line">@media (min-width: @screen-sm-min) &#123; ... &#125;</span><br><span class="line"></span><br><span class="line">/* 中等屏幕（桌面显示器，大于等于 992px） */</span><br><span class="line">@media (min-width: @screen-md-min) &#123; ... &#125;</span><br><span class="line"></span><br><span class="line">/* 大屏幕（大桌面显示器，大于等于 1200px） */</span><br><span class="line">@media (min-width: @screen-lg-min) &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>我们偶尔也会在媒体查询代码中包含 <code>max-width</code> 从而将 CSS 的影响限制在更小范围的屏幕大小之内。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@media (max-width: @screen-xs-max) &#123; ... &#125;</span><br><span class="line">@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) &#123; ... &#125;</span><br><span class="line">@media (min-width: @screen-md-min) and (max-width: @screen-md-max) &#123; ... &#125;</span><br><span class="line">@media (min-width: @screen-lg-min) &#123; ... &#125;</span><br></pre></td></tr></table></figure><h3 id="栅格参数"><a href="#栅格参数" class="headerlink" title="栅格参数"></a>栅格参数</h3><p>通过下表可以详细查看 Bootstrap 的栅格系统是如何在多种屏幕设备上工作的</p><table><thead><tr><th align="left"></th><th align="left">超小屏幕 手机 (&lt;768px)</th><th align="left">小屏幕 平板 (≥768px)</th><th align="left">中等屏幕 桌面显示器 (≥992px)</th><th align="left">大屏幕 大桌面显示器 (≥1200px)</th></tr></thead><tbody><tr><td align="left">栅格系统行为</td><td align="left">总是水平排列</td><td align="left">开始是堆叠在一起的，当大于这些阈值时将变为水平排列C</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><code>.container</code> 最大宽度</td><td align="left">None （自动）</td><td align="left">750px</td><td align="left">970px</td><td align="left">1170px</td></tr><tr><td align="left">类前缀</td><td align="left"><code>.col-xs-</code></td><td align="left"><code>.col-sm-</code></td><td align="left"><code>.col-md-</code></td><td align="left"><code>.col-lg-</code></td></tr><tr><td align="left">列（column）数</td><td align="left">12</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">最大列（column）宽</td><td align="left">自动</td><td align="left">~62px</td><td align="left">~81px</td><td align="left">~97px</td></tr><tr><td align="left">槽（gutter）宽</td><td align="left">30px （每列左右均有 15px）</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">可嵌套</td><td align="left">是</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">偏移（Offsets）</td><td align="left">是</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">列排序</td><td align="left">是</td><td align="left"></td><td align="left"></td><td align="left"></td></tr></tbody></table><h3 id="嵌套列"><a href="#嵌套列" class="headerlink" title="嵌套列"></a>嵌套列</h3><p>为了使用内置的栅格系统将内容再次嵌套，可以通过添加一个新的 <code>.row</code> 元素和一系列 <code>.col-sm-*</code> 元素到已经存在的 <code>.col-sm-*</code> 元素内。被嵌套的行（row）所包含的列（column）的个数不能超过12（其实，没有要求你必须占满12列）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-9&quot;</span>&gt;</span></span><br><span class="line">    Level 1: .col-sm-9</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-8 col-sm-6&quot;</span>&gt;</span></span><br><span class="line">        Level 2: .col-xs-8 .col-sm-6</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-4 col-sm-6&quot;</span>&gt;</span></span><br><span class="line">        Level 2: .col-xs-4 .col-sm-6</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="列排序"><a href="#列排序" class="headerlink" title="列排序"></a>列排序</h3><p>通过使用 <code>.col-md-push-*</code> 和 <code>.col-md-pull-*</code> 类就可以很容易的改变列（column）的顺序。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--push表示向右移动，pull表示向左移动--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-9 col-md-push-3&quot;</span>&gt;</span>.col-md-9 .col-md-push-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3 col-md-pull-9&quot;</span>&gt;</span>.col-md-3 .col-md-pull-9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="排版"><a href="#排版" class="headerlink" title="排版"></a>排版</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>HTML 中的所有标题标签，<code>&lt;h1&gt;</code> 到 <code>&lt;h6&gt;</code> 均可使用。另外，还提供了 <code>.h1</code> 到 <code>.h6</code> 类，为的是给内联（inline）属性的文本赋予标题的样式</p><p>在标题内还可以包含 <code>&lt;small&gt;</code> 标签或赋予 <code>.small</code> 类的元素，可以用来标记副标题。</p><h3 id="页面主体"><a href="#页面主体" class="headerlink" title="页面主体"></a>页面主体</h3><p>Bootstrap 将全局 <code>font-size</code> 设置为 <strong>14px</strong>，<code>line-height</code> 设置为 <strong>1.428</strong>。这些属性直接赋予 <code>&lt;body&gt;</code> 元素和所有段落元素。另外，<code>&lt;p&gt;</code> （段落）元素还被设置了等于 1/2 行高（即 10px）的底部外边距（margin）。</p><h3 id="被删除的文本"><a href="#被删除的文本" class="headerlink" title="被删除的文本"></a>被删除的文本</h3><p>对于被删除的文本使用 <code>&lt;del&gt;</code> 标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>This line of text is meant to be treated as deleted text.<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="插入文本"><a href="#插入文本" class="headerlink" title="插入文本"></a>插入文本</h3><p>额外插入的文本使用 <code>&lt;ins&gt;</code> 标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>This line of text is meant to be treated as an addition to the document.<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><p>通过文本对齐类，可以简单方便的将文字重新对齐。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-left&quot;</span>&gt;</span>Left aligned text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>Center aligned text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-right&quot;</span>&gt;</span>Right aligned text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-justify&quot;</span>&gt;</span>Justified text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-nowrap&quot;</span>&gt;</span>No wrap text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="改变大小写"><a href="#改变大小写" class="headerlink" title="改变大小写"></a>改变大小写</h3><p>通过这几个类可以改变文本的大小写。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-lowercase&quot;</span>&gt;</span>Lowercased text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span> // 全部小写</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-uppercase&quot;</span>&gt;</span>Uppercased text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span> // 全部大写</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-capitalize&quot;</span>&gt;</span>Capitalized text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span> // 首字母大写，其它不变</span><br></pre></td></tr></table></figure><h3 id="缩略语"><a href="#缩略语" class="headerlink" title="缩略语"></a>缩略语</h3><p>当鼠标悬停在缩写和缩写词上时就会显示完整内容，Bootstrap 实现了对 HTML 的 <code>&lt;abbr&gt;</code> 元素的增强样式。缩略语元素带有 <code>title</code> 属性，外观表现为带有较浅的虚线框，鼠标移至上面时会变成带有“问号”的指针。如想看完整的内容可把鼠标悬停在缩略语上（对使用辅助技术的用户也可见）, 但需要包含 title 属性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;HyperText Markup Language&quot;</span> <span class="attr">class</span>=<span class="string">&quot;initialism&quot;</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure><p><abbr title="HyperText Markup Language" class="initialism">HTML</abbr></p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>...<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>...<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="无样式列表"><a href="#无样式列表" class="headerlink" title="无样式列表"></a>无样式列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;list-unstyled&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>...<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="内联列表"><a href="#内联列表" class="headerlink" title="内联列表"></a>内联列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;list-inline&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>...<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="用户输入"><a href="#用户输入" class="headerlink" title="用户输入"></a>用户输入</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>Hello World</code></p><p><kbd>Hello World</kbd></p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>通过 <code>&lt;var&gt;</code> 标签标记变量。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">var</span>&gt;</span>y<span class="tag">&lt;/<span class="name">var</span>&gt;</span> = <span class="tag">&lt;<span class="name">var</span>&gt;</span>m<span class="tag">&lt;/<span class="name">var</span>&gt;</span><span class="tag">&lt;<span class="name">var</span>&gt;</span>x<span class="tag">&lt;/<span class="name">var</span>&gt;</span> + <span class="tag">&lt;<span class="name">var</span>&gt;</span>b<span class="tag">&lt;/<span class="name">var</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="程序输出"><a href="#程序输出" class="headerlink" title="程序输出"></a>程序输出</h3><p>通过 <code>&lt;samp&gt;</code> 标签来标记程序输出的内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">samp</span>&gt;</span>This text is meant to be treated as sample output from a computer program.<span class="tag">&lt;/<span class="name">samp</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>User Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;row&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mark<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Otto<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>@mdo<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;row&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jacob<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Thornton<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>@fat<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;row&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Larry<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>the Bird<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>@twitter<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="条纹状表格"><a href="#条纹状表格" class="headerlink" title="条纹状表格"></a>条纹状表格</h3><p>通过 <code>.table-striped</code> 类可以给 <code>&lt;tbody&gt;</code> 之内的每一行增加斑马条纹样式。</p><h3 id="带边框的表格"><a href="#带边框的表格" class="headerlink" title="带边框的表格"></a>带边框的表格</h3><p>添加 <code>.table-bordered</code> 类为表格和其中的每个单元格增加边框。</p><h3 id="鼠标悬停"><a href="#鼠标悬停" class="headerlink" title="鼠标悬停"></a>鼠标悬停</h3><p>通过添加 <code>.table-hover</code> 类可以让 <code>&lt;tbody&gt;</code> 中的每一行对鼠标悬停状态作出响应。</p><h3 id="紧缩表格"><a href="#紧缩表格" class="headerlink" title="紧缩表格"></a>紧缩表格</h3><p>通过添加 <code>.table-condensed</code> 类可以让表格更加紧凑，单元格中的内补（padding）均会减半。</p><h3 id="状态类"><a href="#状态类" class="headerlink" title="状态类"></a>状态类</h3><p>通过这些状态类可以为行或单元格设置颜色。</p><table><thead><tr><th align="left">Class</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>.active</code></td><td align="left">鼠标悬停在行或单元格上时所设置的颜色</td></tr><tr><td align="left"><code>.success</code></td><td align="left">标识成功或积极的动作</td></tr><tr><td align="left"><code>.info</code></td><td align="left">标识普通的提示信息或动作</td></tr><tr><td align="left"><code>.warning</code></td><td align="left">标识警告或需要用户注意</td></tr><tr><td align="left"><code>.danger</code></td><td align="left">标识危险或潜在的带来负面影响的动作</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- On rows --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;success&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- On cells (`td` or `th`) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;success&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><h3 id="基本实例"><a href="#基本实例" class="headerlink" title="基本实例"></a>基本实例</h3><p>单独的表单控件会被自动赋予一些全局样式。所有设置了 <code>.form-control</code> 类的 <code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code> 和 <code>&lt;select&gt;</code> 元素都将被默认设置宽度属性为 <code>width: 100%;</code>。 将 <code>label</code> 元素和前面提到的控件包裹在 <code>.form-group</code> 中可以获得最好的排列。</p><p><img src="https://gitee.com/lovehuating/image/raw/master/20210629135339.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;exampleInputEmail1&quot;</span>&gt;</span>Email address<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;exampleInputEmail1&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Email&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;exampleInputPassword1&quot;</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;exampleInputPassword1&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Password&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;exampleInputFile&quot;</span>&gt;</span>File input<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;exampleInputFile&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;help-block&quot;</span>&gt;</span>Example block-level help text here.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> Check me out</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--将label和input放进form-group组，即使不需要label组件，也要添加，可以使用类.sr-only隐藏--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--label中for属性是指向input的id，当点击label同样激活输入框--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;exampleInputEmail1&quot;</span>&gt;</span>Email address<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;exampleInputEmail1&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Email&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="内联表单"><a href="#内联表单" class="headerlink" title="内联表单"></a>内联表单</h3><p>为 <code>&lt;form&gt;</code> 元素添加 <code>.form-inline</code> 类可使其内容左对齐并且表现为 <code>inline-block</code> 级别的控件。<strong>只适用于视口（viewport）至少在 768px 宽度时（视口宽度再小的话就会使表单折叠）。</strong></p><h3 id="水平排列的表单"><a href="#水平排列的表单" class="headerlink" title="水平排列的表单"></a>水平排列的表单</h3><p>通过为表单添加 <code>.form-horizontal</code> 类，并联合使用 Bootstrap 预置的栅格类，可以将 <code>label</code> 标签和控件组水平并排布局。这样做将改变 <code>.form-group</code> 的行为，使其表现为栅格系统中的行（row），因此就无需再额外添加 <code>.row</code> 了。</p><p><img src="https://gitee.com/lovehuating/image/raw/master/20210629140028.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-horizontal&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;inputEmail3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-10&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;inputEmail3&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Email&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;inputPassword3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-10&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;inputPassword3&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Password&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-offset-2 col-sm-10&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> Remember me</span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-offset-2 col-sm-10&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>Sign in<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h2><p>虽然按钮类可以应用到 <code>&lt;a&gt;</code> 和 <code>&lt;button&gt;</code> 元素上，但是，导航和导航条组件只支持 <code>&lt;button&gt;</code> 元素。</p><p>如果 <code>&lt;a&gt;</code> 元素被作为按钮使用 – 并用于在当前页面触发某些功能 – 而不是用于链接其他页面或链接当前页面中的其他部分，那么，务必为其设置 <code>role=&quot;button&quot;</code> 属性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Standard button --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>（默认样式）Default<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Provides extra visual weight and identifies the primary action in a set of buttons --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>（首选项）Primary<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates a successful or positive action --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success&quot;</span>&gt;</span>（成功）Success<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Contextual button for informational alert messages --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span>&gt;</span>（一般信息）Info<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates caution should be taken with this action --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-warning&quot;</span>&gt;</span>（警告）Warning<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates a dangerous or potentially negative action --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span>&gt;</span>（危险）Danger<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Deemphasize a button by making it look like a link while maintaining button behavior --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-link&quot;</span>&gt;</span>（链接）Link<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="尺寸"><a href="#尺寸" class="headerlink" title="尺寸"></a>尺寸</h3><p>需要让按钮具有不同尺寸吗？使用 <code>.btn-lg</code>、<code>.btn-sm</code> 或 <code>.btn-xs</code> 就可以获得不同尺寸的按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-lg&quot;</span>&gt;</span>（大按钮）Large button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn-lg&quot;</span>&gt;</span>（大按钮）Large button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>（默认尺寸）Default button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>（默认尺寸）Default button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-sm&quot;</span>&gt;</span>（小按钮）Small button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn-sm&quot;</span>&gt;</span>（小按钮）Small button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-xs&quot;</span>&gt;</span>（超小尺寸）Extra small button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn-xs&quot;</span>&gt;</span>（超小尺寸）Extra small button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><h3 id="响应式图片"><a href="#响应式图片" class="headerlink" title="响应式图片"></a>响应式图片</h3><p>在 Bootstrap 版本 3 中，通过为图片添加 <code>.img-responsive</code> 类可以让图片支持响应式布局。其实质是为图片设置了 <code>max-width: 100%;</code>、 <code>height: auto;</code> 和 <code>display: block;</code> 属性，从而让图片在其父元素中更好的缩放。</p><p>如果需要让使用了 <code>.img-responsive</code> 类的图片水平居中，请使用 <code>.center-block</code> 类，不要用 <code>.text-center</code>。</p><h3 id="图片形状"><a href="#图片形状" class="headerlink" title="图片形状"></a>图片形状</h3><p>通过为 <code>&lt;img&gt;</code> 元素添加以下相应的类，可以让图片呈现不同的形状。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;...&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-rounded&quot;</span>&gt;</span> //正方形</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;...&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-circle&quot;</span>&gt;</span> //圆形</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;...&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-thumbnail&quot;</span>&gt;</span> // 正方形带边框</span><br></pre></td></tr></table></figure><h2 id="辅助类"><a href="#辅助类" class="headerlink" title="辅助类"></a>辅助类</h2><h3 id="情境文本颜色"><a href="#情境文本颜色" class="headerlink" title="情境文本颜色"></a>情境文本颜色</h3><p>通过颜色来展示意图，Bootstrap 提供了一组工具类。这些类可以应用于链接，并且在鼠标经过时颜色可以还可以加深，就像默认的链接一样。</p><p><img src="C:\Users\cst20\AppData\Roaming\Typora\typora-user-images\image-20210629141319346.png" alt="image-20210629141319346"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-muted&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-primary&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-success&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-info&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-warning&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-danger&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="情境背景色"><a href="#情境背景色" class="headerlink" title="情境背景色"></a>情境背景色</h3><p>和情境文本颜色类一样，使用任意情境背景色类就可以设置元素的背景。链接组件在鼠标经过时颜色会加深，就像上面所讲的情境文本颜色类一样。</p><p><img src="https://gitee.com/lovehuating/image/raw/master/20210629141353.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bg-primary&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bg-success&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bg-info&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bg-warning&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bg-danger&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="关闭按钮"><a href="#关闭按钮" class="headerlink" title="关闭按钮"></a>关闭按钮</h3><p>通过使用一个象征关闭的图标，可以让模态框和警告框消失。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;close&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Close&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="三角符号"><a href="#三角符号" class="headerlink" title="三角符号"></a>三角符号</h3><p>通过使用三角符号可以指示某个元素具有下拉菜单的功能。注意，<a href="https://v3.bootcss.com/components/#btn-dropdowns-dropup">向上弹出式菜单</a>中的三角符号是反方向的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用-Less"><a href="#使用-Less" class="headerlink" title="使用 Less"></a>使用 Less</h2><p>Bootstrap 的 CSS 文件是通过 Less 源码编译而来的。Less 是一门预处理语言，支持变量、mixin、函数等额外功能。对于希望使用 Less 源码而非编译而来的 CSS 文件的用户，Bootstrap 框架中包含的大量变量、mixin 将非常有价值</p><h3 id="编译-Bootstrap"><a href="#编译-Bootstrap" class="headerlink" title="编译 Bootstrap"></a>编译 Bootstrap</h3><p>可以通过两种方式使用 Bootstrap ：使用编译后的 CSS 文件或者使用 Less 源码文件。若要编译 Less 文件，<a href="https://v3.bootcss.com/getting-started/#grunt">请参考“入门”章节的内容</a>以了解如何设置开发环境并运行必须的编译指令。</p><h3 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h3><p>Bootstrap 使用了两种颜色模式：灰度颜色和语义颜色。灰度颜色用于快速获取常用的黑色色调；语义颜色包含了各种赋予语义的颜色值</p><p><img src="https://gitee.com/lovehuating/image/raw/master/20210629142149.png"></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@gray-darker</span>:  lighten(<span class="number">#000</span>, <span class="number">13.5%</span>); <span class="comment">// #222</span></span><br><span class="line"><span class="keyword">@gray-dark</span>:    lighten(<span class="number">#000</span>, <span class="number">20%</span>);   <span class="comment">// #333</span></span><br><span class="line"><span class="keyword">@gray</span>:         lighten(<span class="number">#000</span>, <span class="number">33.5%</span>); <span class="comment">// #555</span></span><br><span class="line"><span class="keyword">@gray-light</span>:   lighten(<span class="number">#000</span>, <span class="number">46.7%</span>); <span class="comment">// #777</span></span><br><span class="line"><span class="keyword">@gray-lighter</span>: lighten(<span class="number">#000</span>, <span class="number">93.5%</span>); <span class="comment">// #eee</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/lovehuating/image/raw/master/20210629142210.png"></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@brand-primary</span>: darken(<span class="number">#428bca</span>, <span class="number">6.5%</span>); <span class="comment">// #337ab7</span></span><br><span class="line"><span class="keyword">@brand-success</span>: <span class="number">#5cb85c</span>;</span><br><span class="line"><span class="keyword">@brand-info</span>:    <span class="number">#5bc0de</span>;</span><br><span class="line"><span class="keyword">@brand-warning</span>: <span class="number">#f0ad4e</span>;</span><br><span class="line"><span class="keyword">@brand-danger</span>:  <span class="number">#d9534f</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Bootstrap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML与CSS的哪些事</title>
      <link href="2021/06/21/websomething/"/>
      <url>2021/06/21/websomething/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="HTML行内元素、块状元素、行内块状元素的区别"><a href="#HTML行内元素、块状元素、行内块状元素的区别" class="headerlink" title="HTML行内元素、块状元素、行内块状元素的区别"></a>HTML行内元素、块状元素、行内块状元素的区别</h2><ol><li>行内元素  <code>display:inline;</code></li><li>块级元素 <code>display:block;</code></li><li>行内块级元素 <code>display:inline-block</code></li></ol><p><cst>行内元素</cst>：与其它行内元素并排，不能设置宽高，默认的宽度就是文字的宽度</p><p><cst>块级元素</cst>：单独占一行，能设置宽高，默认宽度承载父级100%</p><p><cst>行内块级元素</cst>：结合了行内元素和块级元素，可以设置宽高，且不单独霸占一行</p><h2 id="CSS3选择器-属性匹配选择器"><a href="#CSS3选择器-属性匹配选择器" class="headerlink" title="CSS3选择器 || 属性匹配选择器"></a>CSS3选择器 || 属性匹配选择器</h2><h3 id="全匹配"><a href="#全匹配" class="headerlink" title="全匹配"></a>全匹配</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&#x27;text&#x27;</span>]</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span> <span class="comment">&lt;!--只会选中type=&quot;text&quot;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="开头匹配"><a href="#开头匹配" class="headerlink" title="开头匹配"></a>开头匹配</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-attr">[class=<span class="string">&quot;he&quot;</span>]</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hello&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="结尾匹配"><a href="#结尾匹配" class="headerlink" title="结尾匹配"></a>结尾匹配</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-attr">[class $=<span class="string">&quot;lo&quot;</span>]</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hello&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="包含匹配"><a href="#包含匹配" class="headerlink" title="包含匹配"></a>包含匹配</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-attr">[class *=<span class="string">&quot;h&quot;</span>]</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hello&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS3选择器-child"><a href="#CSS3选择器-child" class="headerlink" title="CSS3选择器 || child"></a>CSS3选择器 || child</h2><h3 id="first-child"><a href="#first-child" class="headerlink" title="first-child"></a>first-child</h3><p>表示选择列表中的第一个li标签</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child&#123;<span class="attribute">background</span>:<span class="number">#090</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="last-child"><a href="#last-child" class="headerlink" title="last-child"></a>last-child</h3><p>表示选择列表中的最后一个li标签</p><h3 id="nth-child-3"><a href="#nth-child-3" class="headerlink" title="nth-child(3)"></a>nth-child(3)</h3><p>表示选择列表中的第3个标签</p><h3 id="nth-child-2n"><a href="#nth-child-2n" class="headerlink" title="nth-child(2n)"></a>nth-child(2n)</h3><p>这个表示选择列表中的偶数标签，即选择 第2、第4、第6…… 标签。</p><h3 id="nth-child-2n-1"><a href="#nth-child-2n-1" class="headerlink" title="nth-child(2n-1)"></a>nth-child(2n-1)</h3><p>这个表示选择列表中的奇数标签，即选择 第1、第3、第5、第7……标签。</p><h3 id="nth-child-n-3"><a href="#nth-child-n-3" class="headerlink" title="nth-child(n+3)"></a>nth-child(n+3)</h3><p>这个表示选择列表中的标签从第3个开始到最后。</p><h3 id="nth-child-n-3-1"><a href="#nth-child-n-3-1" class="headerlink" title="nth-child(-n+3)"></a>nth-child(-n+3)</h3><p>这个表示选择列表中的标签从0到3，即小于3的标签。</p><h3 id="nth-last-child-3"><a href="#nth-last-child-3" class="headerlink" title="nth-last-child(3)"></a>nth-last-child(3)</h3><p>这个表示选择列表中的倒数第3个标签。</p><h2 id="DIV点击跳转"><a href="#DIV点击跳转" class="headerlink" title="DIV点击跳转"></a>DIV点击跳转</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">onclick</span>=<span class="string">&quot;window.open(&#x27;https://www.baidu.com/&#x27;)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;cursor: pointer;&quot;</span>&gt;</span></span><br><span class="line">  点击我跳转百度</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div onclick="window.open('https://www.baidu.com/')" style="cursor: pointer;" class="text-center">  点击我跳转百度&nbsp;<span class="far fa-hand-point-right"></span></div><h2 id="单行省略"><a href="#单行省略" class="headerlink" title="单行省略"></a>单行省略</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">white-space</span>:nowrap;</span><br><span class="line"><span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br></pre></td></tr></table></figure><h2 id="多行省略"><a href="#多行省略" class="headerlink" title="多行省略"></a>多行省略</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-wrap</span>: nowrap;</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis; <span class="comment">/* 省略号*/</span></span><br><span class="line"><span class="attribute">display</span>: -webkit-box; <span class="comment">/** 将对象作为伸缩盒子模型显示 **/</span></span><br><span class="line">-webkit-box-orient: vertical; <span class="comment">/** 设置或检索伸缩盒对象的子元素的排列方式 **/</span></span><br><span class="line">-webkit-line-clamp: <span class="number">2</span>; <span class="comment">/** 显示的行数 **/</span></span><br><span class="line"><span class="attribute">overflow</span>: hidden; <span class="comment">/** 隐藏超出的内容 **/</span></span><br></pre></td></tr></table></figure><h2 id="v-show-显示隐藏过渡效果"><a href="#v-show-显示隐藏过渡效果" class="headerlink" title="v-show 显示隐藏过渡效果"></a>v-show 显示隐藏过渡效果</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">&quot;slide-fade&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;sl_top&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;isTop&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 因为利用滚动条回到顶部，不需要设置herf=&#x27;#&#x27;  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span> <span class="attr">title</span>=<span class="string">&quot;回到顶部&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleTop()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-plane&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.slide-fade-enter-active</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.2s</span> ease;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.slide-fade-leave-active</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.2s</span> <span class="built_in">cubic-bezier</span>(<span class="number">1</span>, <span class="number">0.5</span>, <span class="number">0.8</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.slide-fade-enter</span>,</span><br><span class="line"><span class="selector-class">.slide-fade-leave-to</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">5px</span>);</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vue-监听滚动条事件"><a href="#vue-监听滚动条事件" class="headerlink" title="vue 监听滚动条事件"></a>vue 监听滚动条事件</h2><blockquote><p>使用vue监听滚动条事件，来让右下角回顶部按钮显示隐藏。当点击回到顶部，将利用延时器缓缓达到顶部，形成视觉效果。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">isTop</span>: <span class="literal">false</span>, <span class="comment">// 点击回到顶部的显隐</span></span><br><span class="line">      <span class="attr">scroll</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>, <span class="built_in">this</span>.menu)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>:&#123;</span><br><span class="line">    <span class="function"><span class="title">menu</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.scroll = <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop;</span><br><span class="line">      <span class="comment">// 当距离顶部大于等于300，显示回到顶部按钮，否则隐藏</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">this</span>.scroll &gt;= <span class="number">300</span>) &#123;</span><br><span class="line">          <span class="built_in">this</span>.isTop = <span class="literal">true</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="built_in">this</span>.isTop = <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">&#125;,</span><br><span class="line">    <span class="comment">// 点击回到顶部按钮事件</span></span><br><span class="line">     <span class="function"><span class="title">handleTop</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">         <span class="keyword">let</span> top = <span class="built_in">this</span>.scroll</span><br><span class="line">         <span class="keyword">const</span> timeTop = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">             <span class="built_in">document</span>.body.scrollTop = <span class="built_in">document</span>.documentElement.scrollTop = top -= <span class="number">50</span></span><br><span class="line">             <span class="keyword">if</span> (top &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                 <span class="built_in">clearInterval</span>(timeTop)</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;, <span class="number">10</span>)</span><br><span class="line">     &#125;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决终端系统禁用脚本</title>
      <link href="2021/06/20/Question1/"/>
      <url>2021/06/20/Question1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="解决终端禁止运行脚本"><a href="#解决终端禁止运行脚本" class="headerlink" title="解决终端禁止运行脚本"></a>解决终端禁止运行脚本</h2><p>出现这个问题的原因可能是：PowerShell执行策略的问题</p><h2 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h2><p><img src="https://gitee.com/lovehuating/image/raw/master/20210620132553.png"></p><ol><li>管理员打开运行VSCode</li><li>在终端执行<code>get-ExecutionPolicy</code>，显示Restricted，表示状态是禁止的</li><li>执行<code>set-ExecutionPolicy RemoteSigned</code>，如果有以下报错</li></ol><p><img src="https://gitee.com/lovehuating/image/raw/master/20210620132653.png"></p><ol start="4"><li>执行<code>Set-ExecutionPolicy -Scope CurrentUser</code>，输入参数<code>RemoteSigned</code></li></ol><p><img src="https://gitee.com/lovehuating/image/raw/master/20210620132841.png"></p><ol start="5"><li>此时再执行<code>get-ExecutionPolicy</code>，显示RemoteSigned，则表示状态解禁，可以运行</li></ol><h2 id="HBuilderX"><a href="#HBuilderX" class="headerlink" title="HBuilderX"></a>HBuilderX</h2>]]></content>
      
      
      <categories>
          
          <category> Question </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Question </tag>
            
            <tag> VSCode </tag>
            
            <tag> HBuilder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue路由的使用</title>
      <link href="2021/06/20/routerlazy/"/>
      <url>2021/06/20/routerlazy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-动态路由的使用"><a href="#1-动态路由的使用" class="headerlink" title="1. 动态路由的使用"></a>1. 动态路由的使用</h2><h3 id="动态路由是什么"><a href="#动态路由是什么" class="headerlink" title="动态路由是什么?"></a>动态路由是什么?</h3><p>一般我们使用vue-router配置路由时，都是直接配置固定的路径<br>而动态路由是我们可以在 vue-router 的路由路径中使用“动态路径参数”<br>让路径不再是固定的。</p><h3 id="动态路由的使用场景是什么？"><a href="#动态路由的使用场景是什么？" class="headerlink" title="动态路由的使用场景是什么？"></a>动态路由的使用场景是什么？</h3><p>比如在写一个商品详情页面的时候，我们的页面结构都一样，只是渲染的数据不同而已，这时候就可以根据商品的不同id去设置动态路由，只需要写一个组件，就可以把每个商品的商品详情映射到同一个组件上去。</p><h3 id="路由切换页面"><a href="#路由切换页面" class="headerlink" title="路由切换页面"></a>路由切换页面</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/home&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/about&quot;</span>&gt;</span>About<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-view</span>/&gt;</span> </span><br></pre></td></tr></table></figure><ol><li><code>&lt;router-link</code> 默认是<code>&lt;a&gt;</code>标签，添加<code> tag=&quot;button&quot;</code>属性就变成了按钮组件</li><li><code>to=&quot;/home&quot;</code> 规范路径写法</li><li><code>&lt;router-view/&gt; </code> 渲染路由页面</li></ol><br><p><code>router&gt;index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">&#x27;../views/Home.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> About <span class="keyword">from</span> <span class="string">&#x27;../views/About.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Hello <span class="keyword">from</span> <span class="string">&#x27;../components/HelloWorld.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> News <span class="keyword">from</span> <span class="string">&#x27;../components/News.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="comment">// 默认显示的路由页面about，path写法可以 path:&#x27;&#x27;,或者 path:&#x27;/&#x27;</span></span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">redirect</span>: <span class="string">&#x27;/about&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: About</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  <span class="comment">// 路由的模式，这样有历史记录可以返回，replace就是替换不能返回</span></span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">    <span class="attr">base</span>: process.env.BASE_URL,</span><br><span class="line">    routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h3 id="体验使用参数"><a href="#体验使用参数" class="headerlink" title="体验使用参数"></a>体验使用参数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;home&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">&quot;Vue logo&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../assets/logo.png&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">v-bind:to</span>=<span class="string">&quot;&#x27;/home/news/&#x27;+userId&quot;</span>&gt;</span>user<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/home/hello&quot;</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;$route.params.userId&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">router-view</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code> v-bind:to=&quot;&#39;/home/news/&#39;+userId&quot;</code> 拼接userId参数，注意单引号<code>&#39;/home/news/&#39;</code></p><p><code>&#123;&#123;$route.params.userId&#125;&#125;</code> 通过<code>$route</code>可以拿到当前渲染的路由页面的userID参数，来渲染不同用户的数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//绑定方法，进行路由切换</span></span><br><span class="line"><span class="function"><span class="title">routerWeb</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.$router.push(<span class="string">&quot;/home/&quot;</span>+e.id+<span class="string">&quot;&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-打包文件的解析"><a href="#2-打包文件的解析" class="headerlink" title="2. 打包文件的解析"></a>2. 打包文件的解析</h2><p>在没有使用路由的懒加载时，打包文件通常分为三个</p><ol><li><code>app </code>当前应用程序开发的所有业务代码</li><li><code>mainfest </code>为了打包的代码做底层支撑</li><li><code>vendor </code>提供商文件第三方(vue/vue-router…)</li></ol><h2 id="3-路由的懒加载"><a href="#3-路由的懒加载" class="headerlink" title="3. 路由的懒加载"></a>3. 路由的懒加载</h2><p>​    </p><blockquote><p>当打包构建应用时，js包会变得非常大，影响页面加载。如果我们将不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应组件，这样就更高效了。</p><p>如果所有组件的打包成一个js文件，当用户请求js文件时，会出现短暂空白，极其不友好</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用这种方式导入，当需要用到才导入加载，因此叫懒加载</span></span><br><span class="line"><span class="keyword">const</span> Home = <span class="function">() =&gt;</span><span class="keyword">import</span> (<span class="string">&#x27;../views/Home.vue&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> About = <span class="function">() =&gt;</span><span class="keyword">import</span> (<span class="string">&#x27;../views/About.vue&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> Hello = <span class="function">() =&gt;</span><span class="keyword">import</span> (<span class="string">&#x27;../components/HelloWorld.vue&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> News = <span class="function">() =&gt;</span><span class="keyword">import</span> (<span class="string">&#x27;../components/News.vue&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/lovehuating/image/raw/master/20210621131822.png"></p><p>打包的js文件，变得更多了。每一个组件对应一个js文件。页面加载更加高效</p><h2 id="4-路由的嵌套使用"><a href="#4-路由的嵌套使用" class="headerlink" title="4. 路由的嵌套使用"></a>4. 路由的嵌套使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 省略开头结尾</span></span><br><span class="line">&#123;</span><br><span class="line">     <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">     <span class="attr">component</span>: Home,</span><br><span class="line">     <span class="attr">children</span>: [&#123; <span class="comment">//子路由页面，统一也是组件。在使用子组件的时候，需要在父组件注册</span></span><br><span class="line">       <span class="comment">// 子路由页面路径path写法不一样，没有/</span></span><br><span class="line">             <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">             <span class="attr">redirect</span>: <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">         &#125;, &#123;</span><br><span class="line">             <span class="attr">path</span>: <span class="string">&#x27;hello&#x27;</span>,</span><br><span class="line">             <span class="attr">component</span>: Hello</span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="attr">path</span>: <span class="string">&#x27;news/:userId&#x27;</span>,</span><br><span class="line">             <span class="attr">component</span>: News</span><br><span class="line">         &#125;</span><br><span class="line">     ]</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 在html页面中写入子路由，路径需要规范书写，写完整</span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#x27;/home/news/&#x27;+userId&quot;</span>&gt;</span>user<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/home/hello&quot;</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="comment">// @ 等同于..</span></span><br><span class="line"><span class="comment">// 导入两个子组件</span></span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">&#x27;@/components/HelloWorld.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> News <span class="keyword">from</span> <span class="string">&#x27;@/components/News.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Home&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">userId</span>: <span class="string">&#x27;Lisi&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>:&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">    HelloWorld,</span><br><span class="line">    News</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue-Router </tag>
            
            <tag> 路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>番茄时钟</title>
      <link href="2021/06/19/Tomato_clock1/"/>
      <url>2021/06/19/Tomato_clock1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-起步"><a href="#1-起步" class="headerlink" title="1. 起步"></a>1. 起步</h2><blockquote><p>搭建一个界面首先需要考虑由几部分组成。我分为三部分，一：头部滑块，二：中部内容，三：下部按钮</p><p>番茄时钟主要内容：滑块组件、Canvas绘制圆形、本地缓存数据</p><p><a href="http://note.youdao.com/noteshare?id=6cdfbe6bf7f7b705a03a844f2aa582be&sub=915F0DCFC50E42268852F05E4F57FF68">垃圾到死的源码奉上</a> 密码: RHDA</p></blockquote><h3 id="组件滑块slider"><a href="#组件滑块slider" class="headerlink" title="组件滑块slider"></a>组件滑块<a href="https://developers.weixin.qq.com/miniprogram/dev/component/slider.html">slider</a></h3><p>基本属性，最小值<code>min</code>，最大值<code>max</code>，完成一次拖动触发事件<code>bindchange</code></p><h3 id="图标引用"><a href="#图标引用" class="headerlink" title="图标引用"></a>图标引用</h3><p>我推荐阿里图标库，里面有很多图标，使用也方便</p><p>这是我的图标库素材链接，另外一种颜色的图标是多此一举，可以用color来更改图标颜色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon-eyes</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line">  <span class="comment">/*即更改为红色*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://at.alicdn.com/t/font_2609951_mdh6mecbn8f.css?spm=a313x.7781069.1998910419.40&amp;file=font_2609951_mdh6mecbn8f.css">https://at.alicdn.com/t/font_2609951_mdh6mecbn8f.css?spm=a313x.7781069.1998910419.40&amp;file=font_2609951_mdh6mecbn8f.css</a></p><p><img src="https://gitee.com/lovehuating/image/raw/master/20210619212907.png"></p><h2 id="2-滑块"><a href="#2-滑块" class="headerlink" title="2. 滑块"></a>2. 滑块</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 时间滑块 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;index_slider&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slider</span> <span class="attr">min</span>=<span class="string">&quot;1&quot;</span> <span class="attr">max</span>=<span class="string">&quot;60&quot;</span> <span class="attr">show-value</span>=<span class="string">&quot;&#123;&#123;true&#125;&#125;&quot;</span> <span class="attr">bindchanging</span>=<span class="string">&quot;handleSliderChange&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">value</span>=<span class="string">&quot;&#123;&#123;time&#125;&#125;&quot;</span> <span class="attr">active-color</span>=<span class="string">&quot;#f36d4c&quot;</span> <span class="attr">background-color</span>=<span class="string">&quot;#000000&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>show-value=&quot;&#123;&#123;true&#125;&#125;&quot;</code> 右侧显示滑块值</p><p><code>bindchanging=&quot;handleSliderChange&quot;</code> 绑定滑块事件，拖动即可触发事件</p><p><code>bindchange</code> 拖动完成一次，触发一次。更节约性能</p><h2 id="3-中间内容"><a href="#3-中间内容" class="headerlink" title="3. 中间内容"></a>3. 中间内容</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">       <span class="attr">currentIndex</span>:<span class="number">0</span>,</span><br><span class="line">       <span class="attr">taskApp</span>: [&#123;</span><br><span class="line">               <span class="attr">id</span>: <span class="number">0</span>,</span><br><span class="line">               <span class="attr">icon</span>: <span class="string">&#x27;icon-gongzuotai&#x27;</span>,</span><br><span class="line">               <span class="attr">name</span>: <span class="string">&#x27;工作&#x27;</span></span><br><span class="line">           &#125;,</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">               <span class="attr">icon</span>: <span class="string">&#x27;icon-xuexi&#x27;</span>,</span><br><span class="line">               <span class="attr">name</span>: <span class="string">&#x27;学习&#x27;</span></span><br><span class="line">           &#125;,</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="attr">id</span>: <span class="number">2</span>,</span><br><span class="line">               <span class="attr">icon</span>: <span class="string">&#x27;icon-bulb-full&#x27;</span>,</span><br><span class="line">               <span class="attr">name</span>: <span class="string">&#x27;思考&#x27;</span></span><br><span class="line">           &#125;,</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="attr">id</span>: <span class="number">3</span>,</span><br><span class="line">               <span class="attr">icon</span>: <span class="string">&#x27;icon-xiezuozhuanxiangke&#x27;</span>,</span><br><span class="line">               <span class="attr">name</span>: <span class="string">&#x27;写作&#x27;</span></span><br><span class="line">           &#125;,</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="attr">id</span>: <span class="number">4</span>,</span><br><span class="line">               <span class="attr">icon</span>: <span class="string">&#x27;icon-yundong&#x27;</span>,</span><br><span class="line">               <span class="attr">name</span>: <span class="string">&#x27;运动&#x27;</span></span><br><span class="line">           &#125;,</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="attr">id</span>: <span class="number">5</span>,</span><br><span class="line">               <span class="attr">icon</span>: <span class="string">&#x27;icon-linedesign-14&#x27;</span>,</span><br><span class="line">               <span class="attr">name</span>: <span class="string">&#x27;阅读&#x27;</span></span><br><span class="line">           &#125;</span><br><span class="line">       ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;index_content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content_title&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span>选择一个任务<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content_desc&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span>在接下来的&#123;&#123;time&#125;&#125;分钟内，您将专注完成这个任务<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content_app&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;&#123;&#123;currentIndex===index?&#x27;active&#x27;:&#x27;&#x27;&#125;&#125;&quot;</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;taskApp&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;item.id&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">bindtap</span>=<span class="string">&quot;handleSelectActive&quot;</span> <span class="attr">data-index</span>=<span class="string">&quot;&#123;&#123;index&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;iconfont &#123;&#123;item.icon&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--根据是否选中，改变图标选中状态--&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--其实阿里图标直接改color就可以更改颜色--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>class=&quot;&#123;&#123;currentIndex===index?'active':''&#125;&#125;&quot;</code> 绑定active激活css，更改为选中状态时。点击选中改变<code>currentIndex</code> 为你的id值，因此默认第一个会是选中状态</p><p><code>wx:for=&quot;&#123;&#123;taskApp&#125;&#125;&quot;</code> 循环data中taskApp数组</p><p><code>wx:key=&quot;item.id&quot;</code> 绑定key，如果<code>li</code>标签少，可以<code>wx:key=&quot;this&quot;</code></p><p><code>data-index=&quot;&#123;&#123;index&#125;&#125;&quot;</code> 传输数据index到方法<code>handleSelectActive</code>里面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">handleSelectActive</span>(<span class="params">e</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;index&#125; = e.currentTarget.dataset</span><br><span class="line">    <span class="comment">// 上面写法 === const index = e.currentTarget.dataset.index</span></span><br><span class="line">    <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">         <span class="attr">currentIndex</span>: index,</span><br><span class="line">      <span class="comment">//改变currentIndex值，并渲染到Dom，通过获取当前点击的index值，来改变currentIndex值</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-按钮"><a href="#4-按钮" class="headerlink" title="4. 按钮"></a>4. 按钮</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;index_button&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;handleChangeHidden&quot;</span>&gt;</span>开始专注<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-Canvas绘制圆形"><a href="#5-Canvas绘制圆形" class="headerlink" title="5. Canvas绘制圆形"></a>5. Canvas绘制圆形</h2><p>利用canvas绘制圆形，结合另一篇文章绘制静态圆</p><a class="btn-beautify button--animated block blue larger right" href="/2021/06/19/wechat_canvas/"   title="Canvas绘制"><i class="far fa-hand-point-right"></i><span>Canvas绘制</span></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _this = <span class="built_in">this</span>;</span><br><span class="line"><span class="keyword">let</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 省略一部分</span></span><br><span class="line">    <span class="keyword">if</span> (currentTime % <span class="number">1000</span> == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 该操作，每经过一秒钟进行setData，改变界面新数据</span></span><br><span class="line">        <span class="keyword">let</span> timeStr1 = currentTime / <span class="number">1000</span> <span class="comment">// 整秒数</span></span><br><span class="line">        <span class="keyword">let</span> timeMin = <span class="built_in">parseInt</span>(timeStr1 / <span class="number">60</span>) <span class="comment">//m</span></span><br><span class="line">        <span class="keyword">let</span> timeSec = timeStr1 % <span class="number">60</span> <span class="comment">//s</span></span><br><span class="line">        _this.setData(&#123;</span><br><span class="line">            <span class="attr">timeStr</span>: (timeMin &gt;= <span class="number">10</span> ? timeMin : <span class="string">&#x27;0&#x27;</span> + timeMin) + <span class="string">&#x27;:&#x27;</span> + </span><br><span class="line">          (timeSec &gt;= <span class="number">10</span> ? timeSec : <span class="string">&#x27;0&#x27;</span> +  timeSec)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (angle &lt; <span class="number">3.5</span>) &#123;</span><br><span class="line">      <span class="comment">// 封装好的绘制圆方法</span></span><br><span class="line">     <span class="built_in">this</span>.drawYuan(<span class="built_in">this</span>.data.lineWidth,<span class="string">&#x27;clock_active&#x27;</span>,<span class="string">&#x27;#fff&#x27;</span>,<span class="number">400</span>,<span class="number">1.5</span>*<span class="built_in">Math</span>.PI,angle*<span class="built_in">Math</span>.PI)</span><br><span class="line">              </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 在下面续写</span></span><br><span class="line"></span><br><span class="line">&#125;, <span class="number">100</span>)</span><br><span class="line"><span class="comment">//将timer方法存储在data中</span></span><br><span class="line"><span class="comment">//当点击暂停按钮时，如下</span></span><br><span class="line"><span class="built_in">this</span>.setData(&#123;</span><br><span class="line">    timer</span><br><span class="line">  <span class="comment">// 等同于 timer:timer</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">handleStopChange</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">   <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">       <span class="attr">isBtn</span>: !<span class="built_in">this</span>.data.isBtn,</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="keyword">if</span> (<span class="built_in">this</span>.data.isBtn) &#123;</span><br><span class="line">     <span class="comment">//如果出去暂停状态，那么timer绘制方法也处于暂停状态</span></span><br><span class="line">       <span class="built_in">clearInterval</span>(<span class="built_in">this</span>.data.timer);</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.drawAc();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-本地缓存数据"><a href="#6-本地缓存数据" class="headerlink" title="6. 本地缓存数据"></a>6. 本地缓存数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">clearInterval</span>(timer) <span class="comment">//停止timer方法</span></span><br><span class="line"><span class="keyword">let</span> apps = wx.getStorageSync(<span class="string">&#x27;apps&#x27;</span>) <span class="comment">//命名一个app本地存储数据</span></span><br><span class="line">apps.unshift(&#123;</span><br><span class="line">    <span class="attr">date</span>: util.formatTime(<span class="keyword">new</span> <span class="built_in">Date</span>), <span class="comment">// 时间</span></span><br><span class="line">    <span class="attr">currentTask</span>: _this.data.currentTask, <span class="comment">//任务app</span></span><br><span class="line">    <span class="attr">time</span>: _this.data.time <span class="comment">//专注时间</span></span><br><span class="line">&#125;)<span class="comment">//向apps数组前面插入数据</span></span><br><span class="line">wx.setStorageSync(<span class="string">&#x27;apps&#x27;</span>, apps) <span class="comment">//存储</span></span><br><span class="line"></span><br><span class="line">_this.setData(&#123;</span><br><span class="line">    <span class="attr">timeStr</span>: <span class="string">&#x27;00:00&#x27;</span>,</span><br><span class="line">    <span class="attr">okShow</span>: <span class="literal">false</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>统计获取本地缓存</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> apps = wx.getStorageSync(<span class="string">&#x27;apps&#x27;</span>) || [] <span class="comment">//获取apps本地缓存</span></span><br><span class="line"><span class="keyword">let</span> daynum = <span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> dayTime = <span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> totalnum = <span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> totalTime = <span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> sumTotal = []</span><br><span class="line"><span class="keyword">if</span> (apps.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; apps.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (apps[i].currentTask) &#123;</span><br><span class="line">          <span class="comment">//因为的缓存有一些问题，我作了一些筛选</span></span><br><span class="line">            sumTotal[sumTotal.length] = apps[i]</span><br><span class="line">            <span class="keyword">if</span> (apps[i].date.substr(<span class="number">0</span>, <span class="number">10</span>) == util.formatTime(<span class="keyword">new</span> <span class="built_in">Date</span>).substr(<span class="number">0</span>, <span class="number">10</span>)) &#123;</span><br><span class="line">                <span class="comment">// 筛选出今天的</span></span><br><span class="line">                daynum++;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 今天专注时间</span></span><br><span class="line">                dayTime += apps[i].time;</span><br><span class="line">            &#125;</span><br><span class="line">            totalnum++;</span><br><span class="line">            totalTime += apps[i].time;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-底部导航栏"><a href="#7-底部导航栏" class="headerlink" title="7. 底部导航栏"></a>7. 底部导航栏</h2><p>在全局的<code>app.json</code>文件添加</p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/extended/weui/tabbar.html">tabBar 官方文档</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;tabBar&quot;</span>: &#123;</span><br><span class="line">       <span class="attr">&quot;selectedColor&quot;</span>: <span class="string">&quot;#f36d4c&quot;</span>, </span><br><span class="line">      <span class="attr">&quot;list&quot;</span>: [&#123;</span><br><span class="line">        <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/index/index&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;计时&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;iconPath&quot;</span>: <span class="string">&quot;./Icon/clock.png&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;selectedIconPath&quot;</span>: <span class="string">&quot;./Icon/clockA.png&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/statistics/statistics&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;统计&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;iconPath&quot;</span>: <span class="string">&quot;./Icon/statistics.png&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;selectedIconPath&quot;</span>: <span class="string">&quot;./Icon/statisticsA.png&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mina </category>
          
          <category> 番茄时钟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Demo </tag>
            
            <tag> Canvas </tag>
            
            <tag> Mina </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Canvas动态画圆</title>
      <link href="2021/06/19/wechat_canvas/"/>
      <url>2021/06/19/wechat_canvas/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="静态画圆"><a href="#静态画圆" class="headerlink" title="静态画圆"></a>静态画圆</h2><p>canvas 唯一标识canvas-id</p><p><img src="https://gitee.com/lovehuating/image/raw/master/20210619092800.png" alt="画圆效果图"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">canvas-id</span>=<span class="string">&quot;clock_bg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;clock_bg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">canvas-id</span>=<span class="string">&quot;clock_active&quot;</span> <span class="attr">class</span>=<span class="string">&quot;clock_active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> lineWidth = <span class="number">10</span> / <span class="built_in">this</span>.data.rate<span class="comment">//需要转换为像素单位，但不能直接使用像素单位</span></span><br><span class="line"><span class="keyword">let</span> ctx = wx.createCanvasContext(<span class="string">&#x27;clock_bg&#x27;</span>)</span><br><span class="line">ctx.setLineWidth(lineWidth);</span><br><span class="line">ctx.setStrokeStyle(<span class="string">&#x27;#000000&#x27;</span>);</span><br><span class="line">ctx.setLineCap(<span class="string">&#x27;round&#x27;</span>);<span class="comment">//填充边界的头形状</span></span><br><span class="line">ctx.beginPath();</span><br><span class="line"></span><br><span class="line">ctx.arc(<span class="number">400</span> / <span class="built_in">this</span>.data.rate / <span class="number">2</span>, <span class="number">400</span> / <span class="built_in">this</span>.data.rate / <span class="number">2</span>,</span><br><span class="line"> <span class="number">400</span> / <span class="built_in">this</span>.data.rate / <span class="number">2</span> - <span class="number">2</span> * lineWidth, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">ctx.stroke();<span class="comment">//填充路径</span></span><br><span class="line">ctx.draw();</span><br></pre></td></tr></table></figure><blockquote><p>解释一下<code>this.data.rate</code>是rpx/px的一种比例，如果使用rpx就可以不用去转换比例，可以根据不同的手机来改变相应的宽度。但是这里需要px像素单位，不能自适应，因此需要通过这种<code>this.data.rate</code>来改变，且像素单位</p></blockquote><ol><li><p><code>createCanvasContext</code> canvas 组件的绘图上下文。CanvasContext 是旧版的接口， 新版 Canvas 2D 接口与 Web 一致。</p></li><li><p><code>setLineWidth</code> 线条的宽度，单位px</p></li><li><p><code>setStrokeStyle</code> 描边的颜色，默认颜色为 black。</p></li><li><p><code>setLineCap0</code> 设置线条的端点样式</p><table><thead><tr><th align="center">值</th><th>说明</th></tr></thead><tbody><tr><td align="center">butt</td><td>向线条的每一个末端添加平直的边缘</td></tr><tr><td align="center">round</td><td>添加圆形线帽</td></tr><tr><td align="center">square</td><td>正方形线帽</td></tr></tbody></table></li><li><p><code>beginPath</code> 开始创建一个路径。需要调用 <code>fill</code> 或者 <code>stroke</code> 才会使用路径进行填充或描边</p></li><li><p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/canvas/CanvasContext.arc.html">arc</a> 创建一条弧线。</p><ul><li><p>创建一个圆可以指定起始弧度为 0，终止弧度为 2 * Math.PI。</p></li><li><p>用 <code>stroke</code> 或者 <code>fill</code> 方法来在 <code>canvas</code> 中画弧线。</p></li></ul></li><li><p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/canvas/CanvasContext.draw.html">draw</a> 将之前在绘图上下文中的描述（路径、变形、样式）画到 canvas 中。</p></li></ol><h2 id="动态画圆"><a href="#动态画圆" class="headerlink" title="动态画圆"></a>动态画圆</h2><blockquote><p>其实原理和静态圆一样，只是动态圆需要设置一个延时器，一小段一小段的画。根据当前的时间，进行绘制</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置延时器，100毫秒绘制一次，时间越短，绘制越精细</span></span><br><span class="line"><span class="keyword">let</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;&#125;,<span class="number">100</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> _this = <span class="built_in">this</span></span><br><span class="line"><span class="keyword">let</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 当前使用的箭头函数，没有作用域，因此我们获取的是外面函数的this</span></span><br><span class="line">&#125;,<span class="number">100</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一部分数据</span></span><br><span class="line"><span class="attr">data</span>:&#123;</span><br><span class="line"><span class="attr">time</span>: <span class="number">5</span>,</span><br><span class="line">  <span class="attr">mTime</span>: <span class="number">300000</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><cst>圆：右边是初始点，四分之一圆是 0.5 * Math.IP，上边是1.5 * Math.IP</cst></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// angle 根据时间的变化，改变成相应的大小</span></span><br><span class="line"><span class="keyword">let</span> angle = <span class="number">1.5</span> + <span class="number">2</span> * (_this.data.time * <span class="number">60</span> * <span class="number">1000</span> - _this.data.mTime) / </span><br><span class="line">    (_this.data.time * <span class="number">60</span> * <span class="number">1000</span>)</span><br><span class="line">  <span class="comment">// 100++ / mtime 假设当前绘制圆时间是10s，然后和总时间比例10s/mTime = rate,</span></span><br><span class="line">  <span class="comment">//用rate*2，得出接下需要绘制多少弧度的圆。其实每次绘制都是从顶部零开始</span></span><br><span class="line">  <span class="comment">// mTime会随着绘制的圆次数，而减少时间</span></span><br><span class="line">  <span class="keyword">let</span> currentTime = _this.data.mTime - <span class="number">100</span></span><br><span class="line">  _this.setData(&#123;</span><br><span class="line">       <span class="attr">mTime</span>: currentTime</span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(angle &lt; <span class="number">3.5</span>)&#123;</span><br><span class="line">  <span class="comment">// 在这个范围内可以绘制，否则停止绘制</span></span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// 停止绘制</span></span><br><span class="line">    <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,<span class="number">100</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// if(angle &lt; 3.5) 内，绘制一个圆内</span></span><br><span class="line"><span class="keyword">let</span> lineWidth = <span class="number">10</span> / <span class="built_in">this</span>.data.rate<span class="comment">//需要转换为像素单位，但不能直接使用像素单位</span></span><br><span class="line"><span class="keyword">let</span> ctx = wx.createCanvasContext(<span class="string">&#x27;clock_active&#x27;</span>)</span><br><span class="line">ctx.setLineWidth(lineWidth);</span><br><span class="line">ctx.setStrokeStyle(<span class="string">&#x27;#fff&#x27;</span>);</span><br><span class="line">ctx.setLineCap(<span class="string">&#x27;round&#x27;</span>);<span class="comment">//填充边界的头形状</span></span><br><span class="line">ctx.beginPath();</span><br><span class="line"></span><br><span class="line">ctx.arc(<span class="number">400</span> / <span class="built_in">this</span>.data.rate / <span class="number">2</span>, <span class="number">400</span> / <span class="built_in">this</span>.data.rate / <span class="number">2</span>,</span><br><span class="line"><span class="number">400</span> / <span class="built_in">this</span>.data.rate / <span class="number">2</span> - <span class="number">2</span> * lineWidth, <span class="number">1.5</span> * <span class="built_in">Math</span>.PI, angle * <span class="built_in">Math</span>.PI, <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">ctx.stroke();<span class="comment">//填充路径</span></span><br><span class="line">ctx.draw();</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">……<span class="number">400</span> / <span class="built_in">this</span>.data.rate / <span class="number">2</span> - <span class="number">2</span> * lineWidth, <span class="number">1.5</span> * <span class="built_in">Math</span>.PI, angle * <span class="built_in">Math</span>.PI, <span class="literal">false</span>)</span><br></pre></td></tr></table></figure><h2 id="画圆方法封装"><a href="#画圆方法封装" class="headerlink" title="画圆方法封装"></a>画圆方法封装</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="title">drawYuan</span>(<span class="params">lineWidth,canvas_id,canvas_color,width,start,end</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 创建canvas路径</span></span><br><span class="line">        <span class="keyword">let</span> ctx = wx.createCanvasContext(canvas_id)</span><br><span class="line">        ctx.setLineWidth(lineWidth/<span class="built_in">this</span>.data.rate)</span><br><span class="line">        ctx.setStrokeStyle(canvas_color)</span><br><span class="line">        ctx.setLineCap(<span class="string">&#x27;round&#x27;</span>)</span><br><span class="line">        ctx.beginPath()</span><br><span class="line">        ctx.arc(width/<span class="built_in">this</span>.data.rate/<span class="number">2</span>,width/<span class="built_in">this</span>.data.rate/<span class="number">2</span>,</span><br><span class="line">            width/<span class="built_in">this</span>.data.rate/<span class="number">2</span>-<span class="number">6</span>,start,end,<span class="literal">false</span>)</span><br><span class="line">        ctx.stroke();<span class="comment">//填充路径</span></span><br><span class="line">        ctx.draw();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ol><li><code>lineWidth</code> 存放在data里面的数据，方法里面会自动转换比例</li><li><code>canvas_id</code> canvas的唯一标识canvas-id，而不是id</li><li><code>canvas_color</code>  路径填充颜色</li><li><code>width</code> 圆形的宽度，和长度</li><li><code>start</code> 花园的起始点，1.5 * Math.PI</li><li><code>end</code> 结束点</li></ol><blockquote><p>动态画圆其实一直是从起始点开始画，而不是接上之前的。</p></blockquote><h2 id="像素单位自适应"><a href="#像素单位自适应" class="headerlink" title="像素单位自适应"></a>像素单位自适应</h2><p><code>lineWidth</code> 是像素px单位，因此微信小程序中无法使用px，但是使用rpx这种画圆方法不支持。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> res = wx.getSystemInfoSync();</span><br><span class="line"><span class="built_in">console</span>.log(res);<span class="comment">//获取手机信息宽度啥的</span></span><br><span class="line"><span class="keyword">const</span> rate = <span class="number">750</span> / res.windowWidth</span><br><span class="line"><span class="built_in">console</span>.log(rate);<span class="comment">// 获取比例 小程序是宽度为750rpx</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/lovehuating/image/raw/master/20210619160000.png"></p><blockquote><p>根据不同的手机信息，来获取不同的宽度比例，将<code>lineWidth</code> 转换为像素单位，且达到自适应效果</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Mina </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Canvas </tag>
            
            <tag> Mina </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Gitee图床</title>
      <link href="2021/06/10/giteeimage/"/>
      <url>2021/06/10/giteeimage/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="创建Gitee仓库"><a href="#创建Gitee仓库" class="headerlink" title="创建Gitee仓库"></a>创建Gitee仓库</h2><p><img src="https://gitee.com/lovehuating/image/raw/master/Snipaste_2021-06-10_17-26-13.png"><img src="https://gitee.com/lovehuating/image/raw/master/Snipaste_2021-06-10_17-27-54.png"></p><p>我的仓库是master分支，仓库名SimpleImage</p><h2 id="获取Token"><a href="#获取Token" class="headerlink" title="获取Token"></a>获取Token</h2><p><img src="https://gitee.com/lovehuating/image/raw/master/Snipaste_2021-06-10_17-30-29.png"></p><p><img src="https://gitee.com/lovehuating/image/raw/master/Snipaste_2021-06-10_17-31-58.png"></p><p><img src="https://gitee.com/lovehuating/image/raw/master/Snipaste_2021-06-10_17-32-41.png"></p><p>点击生成新令牌，然后全选即可，令牌只会出现一次，需要复制到其它地方</p><h2 id="使用PicGo上传工具"><a href="#使用PicGo上传工具" class="headerlink" title="使用PicGo上传工具"></a>使用PicGo上传工具</h2><p><img src="https://gitee.com/lovehuating/image/raw/master/Snipaste_2021-06-10_17-35-01.png"></p><p>搜索Gtee插件，安装<code>gitee 2.0.3</code> 即可</p><p><img src="https://gitee.com/lovehuating/image/raw/master/Snipaste_2021-06-10_17-37-06.png"></p><p><img src="https://gitee.com/lovehuating/image/raw/master/Snipaste_2021-06-10_17-42-01.png"></p>]]></content>
      
      
      <categories>
          
          <category> Repository </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> Tooltip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环境准备</title>
      <link href="2021/06/04/Environmental_preparation/"/>
      <url>2021/06/04/Environmental_preparation/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-注册账号"><a href="#1-注册账号" class="headerlink" title="1. 注册账号"></a>1. 注册账号</h2><blockquote><p>建议使用全新的邮箱，没有注册过其他小程序或者公众号的。</p><p>访问<a href="https://mp.weixin.qq.com/wxopen/waregister?action=step1">注册页面</a>，耐⼼完成注册即可。</p></blockquote><h2 id="2-获取APPID"><a href="#2-获取APPID" class="headerlink" title="2. 获取APPID"></a>2. 获取APPID</h2><p>由于后期调⽤微信⼩程序的接⼝等功能，需要索取开发者的⼩程序中的 APPID ，所以在注册成功后， 可登录，然后获取APPID。</p><p><a href="https://mp.weixin.qq.com/">登录</a>，成功后可看到如下界⾯O(∩_∩)O</p><p>然后复制你的APPID,悄悄的保存起来，不要给别⼈看到😄。</p><p><img src="https://note.youdao.com/yws/api/personal/file/A65EDF248EB14BF6A3EAA4891B44834D?method=download&shareKey=96342b3a96dd72c4a49096a0ce72712e"></p><p><img src="https://note.youdao.com/yws/api/personal/file/80680DB8B2F94BF880F002CE8E6833CE?method=download&shareKey=729faed0e32469801f831892e2b28f14"></p><h2 id="3-开发者工具"><a href="#3-开发者工具" class="headerlink" title="3. 开发者工具"></a>3. 开发者工具</h2><a class="btn-beautify button--animated outline blue larger" href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html"   title="下载地址"><span>下载地址</span></a><p><img src="https://note.youdao.com/yws/api/personal/file/8BAF969F77954A96B3FFD89C24BFA587?method=download&shareKey=7646c16b529eda40714d08e14a5a339a"></p><p>微信⼩程序⾃带开发者⼯具，集 开发 预览 调试 发布 于⼀⾝的 完整环境。 </p><p>但是由于编码的体验不算好，因此 <cst>建议使⽤ vs code + 微信小程序</cst>编辑工具 来实现编码 vs code 负责敲代码， 微信编辑工具 负责预览</p>]]></content>
      
      
      <categories>
          
          <category> Mina </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序介绍</title>
      <link href="2021/06/04/Introduction_to_wechat_applet/"/>
      <url>2021/06/04/Introduction_to_wechat_applet/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-为什么是微信⼩程序"><a href="#1-为什么是微信⼩程序" class="headerlink" title="1. 为什么是微信⼩程序"></a>1. 为什么是微信⼩程序</h2><ol><li>微信有海量⽤⼾，⽽且粘性很⾼，在微信⾥开发产品更容易触达⽤⼾； </li><li>推⼴app 或公众号的成本太⾼。</li><li>开发适配成本低。</li><li>容易⼩规模试错，然后快速迭代。 </li><li>跨平台。</li></ol><h2 id="2-微信⼩程序历史"><a href="#2-微信⼩程序历史" class="headerlink" title="2. 微信⼩程序历史"></a>2. 微信⼩程序历史</h2><ul><li><cst>2016年1⽉11⽇</cst>，<cst class="red">微信之⽗张⼩⻰</cst>时隔多年的公开亮相，解读了微信的四⼤价值观。张⼩⻰指出， 越来越多产品通过公众号来做，因为这⾥开发、获取⽤⼾和传播成本更低。拆分出来的服务号并没 有提供更好的服务，所以微信内部正在研究新的形态，叫「微信⼩程序」 需要注意的是，之前是叫 做 <cst>应⽤号</cst></li><li><cst>2016年9⽉21⽇</cst>，微信⼩程序正式开启内测。在微信⽣态下，<cst>触⼿可及、⽤完即⾛</cst>的微信⼩程序引 起⼴泛关注。腾讯云正式上线微信⼩程序解决⽅案，提供⼩程序在云端服务器的技术⽅案。</li><li><cst>2017年1⽉9⽇</cst>，微信推出的“⼩程序”正式上线。“⼩程序”是⼀种<cst>⽆需安装，即可使⽤的⼿ 机“应⽤”</cst>。不需要像往常⼀样下载App，⽤⼾在微信中“⽤完即⾛”。</li></ul><h2 id="3-疯狂的微信⼩程序"><a href="#3-疯狂的微信⼩程序" class="headerlink" title="3. 疯狂的微信⼩程序"></a>3. 疯狂的微信⼩程序</h2><ol><li>微信⽉活已经达到10.82亿。其中55岁以上的⽤⼾也达到6300万</li><li>信息传达数达到450亿，较去年增⻓18%;视频通话4.1亿次,增⻓100% </li><li>⼩程序覆盖超过200+⾏业，交易额增⻓超过6倍，服务1000亿+⼈次,创造出了5000亿+的商业价值</li></ol><h2 id="4-还有其他的⼩程序-不容忽视"><a href="#4-还有其他的⼩程序-不容忽视" class="headerlink" title="4. 还有其他的⼩程序 不容忽视"></a>4. 还有其他的⼩程序 不容忽视</h2><ol><li>⽀付宝⼩程序 </li><li>百度⼩程序 </li><li>QQ⼩程序 </li><li>今⽇头条 + 抖⾳⼩程序</li></ol><h2 id="5-官⽅微信⼩程序体验"><a href="#5-官⽅微信⼩程序体验" class="headerlink" title="5. 官⽅微信⼩程序体验"></a>5. 官⽅微信⼩程序体验</h2><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210604153344.png"></p>]]></content>
      
      
      <categories>
          
          <category> Mina </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>路由的基本使用</title>
      <link href="2021/06/02/Basic-use-of-routing/"/>
      <url>2021/06/02/Basic-use-of-routing/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header"><h2>前端路由阶段</h2><p>核心：改变URL，但是页面不进行整体的刷新</p></div>### URL的hash<p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210602104329.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//在浏览器终端输入</span><br><span class="line">location.hash = &#x27;/foo&#x27;</span><br><span class="line"></span><br><span class="line">location.href</span><br><span class="line"></span><br><span class="line">//改变URL是不会刷新页面的</span><br></pre></td></tr></table></figure><h3 id="HTML的history模式：pushState"><a href="#HTML的history模式：pushState" class="headerlink" title="HTML的history模式：pushState"></a>HTML的history模式：pushState</h3><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210602104606.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">history.pushState(&#123;data&#125;,&#x27;title&#x27;,&#x27;url&#x27;)</span><br><span class="line"></span><br><span class="line">//通过HTML5这种pushState的方式，是栈结构。</span><br><span class="line">//可以通过 history.back()出栈，history.forward() 入栈</span><br><span class="line">//使用 history.go(-1) 出栈一个，history.go(1) 进栈一个</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210602105915.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210602105950.png"></p><hr><h2 id="安装vue-router"><a href="#安装vue-router" class="headerlink" title="安装vue-router"></a>安装vue-router</h2><ol><li>通过npm安装vue脚手架项目的时候安装路由</li><li>安装vue-router：<code>npm install vue-router --save</code></li><li>在模块化工程中使用它（因为是一个插件，所以可以通过<code>Vue.use()</code>来安装路由功能）<ul><li>导入路由对象，并调用 <code>Vue.use(VueRouter)</code></li><li>创建路由实例，并且传入路由映射配置</li><li>在Vue实例中挂载创建的路由实例</li></ul></li></ol><h2 id="使用vue-router的步骤"><a href="#使用vue-router的步骤" class="headerlink" title="使用vue-router的步骤"></a>使用vue-router的步骤</h2><ul><li>第一步：创建路由组件</li><li>第二步：配置路由映射关系，组件和路径的映射关系</li><li>第三步：使用路径，通过<code>&lt;router-link&gt; 和 &lt;router-view&gt;</code></li></ul><br><h3 id="创建路由组件"><a href="#创建路由组件" class="headerlink" title="创建路由组件"></a>创建路由组件</h3><p><code>/src/components </code>放vue组件</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210602134243.png"></p><br><h3 id="配置路由映射关系，组件和路径的映射关系"><a href="#配置路由映射关系，组件和路径的映射关系" class="headerlink" title="配置路由映射关系，组件和路径的映射关系"></a>配置路由映射关系，组件和路径的映射关系</h3><p><code>/src/router/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入vue和router</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span> </span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//导入home.js about.js</span></span><br><span class="line"><span class="keyword">import</span> home <span class="keyword">from</span> <span class="string">&#x27;../components/home.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> about <span class="keyword">from</span> <span class="string">&#x27;../components/about.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: about</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="使用路径，通过-lt-router-link-gt-和-lt-router-view-gt"><a href="#使用路径，通过-lt-router-link-gt-和-lt-router-view-gt" class="headerlink" title="使用路径，通过&lt;router-link&gt; 和 &lt;router-view&gt;"></a>使用路径，通过<code>&lt;router-link&gt; 和 &lt;router-view&gt;</code></h3><p><code>/src/App.vue</code> main.js渲染的就是这个vue模板，因此我们在里面写全局组件<code>&lt;router-link&gt; 和 &lt;router-view&gt;</code></p><p><b>App.vue</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;router-link to=&quot;/home&quot;&gt;home&lt;/router-link&gt;</span><br><span class="line">    &lt;router-link to=&quot;/about&quot;&gt;about&lt;/router-link&gt;</span><br><span class="line">&lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><br><h3 id="内置组件"><a href="#内置组件" class="headerlink" title="内置组件"></a>内置组件</h3><p><code>&lt;router-link&gt;</code>该标签是一个vue-router中已经内置的组件,它会被渲染成一个<code>&lt;a&gt;</code>标签.</p><p><code>&lt;router-view&gt;</code>该标签会根据当前的路径,动态渲染出不同的组件</p><p>网页的其他内容,比如顶部的标题/导航,或者底部的一些版权信息等会和<code>&lt;router-view&gt;</code>处于同一个等级.</p><p>在路由切换时,切换的是<code>&lt;router-view&gt;</code>挂载的组件,其他内容不会发生改变.</p><h3 id="lt-router-link-gt-默认渲染-lt-a-gt-标签"><a href="#lt-router-link-gt-默认渲染-lt-a-gt-标签" class="headerlink" title="&lt;router-link&gt;默认渲染&lt;a&gt;标签"></a><code>&lt;router-link&gt;</code>默认渲染<code>&lt;a&gt;</code>标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--添加tag=&quot;button&quot;属性，现在渲染的就是按钮--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&#x27;/home&#x27;</span> <span class="attr">tag</span>=<span class="string">&quot;button&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>默认页面路径使用的是pushState栈结构，可以使用返回向前操作，如果不允许这样使用，可以在<code>router-link</code> 添加属性replace</p></blockquote><ul><li><cst>tag</cst>：tag可以指定渲染组件</li><li><cst>replace</cst>：不会留下history记录，因此不能使用后退健返回上一个页面</li><li>active-class：默认的class类叫<code>router-link-class</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&#x27;/home&#x27;</span> <span class="attr">tag</span>=<span class="string">&quot;button&quot;</span> <span class="attr">active-class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><p><cst>更改后，就是active类了，但是尽量使用默认的名字，不修改</cst></p><p>在路由配置里面，修改默认值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes,</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;history&#x27;</span> ,<span class="comment">//修改模式</span></span><br><span class="line">  <span class="attr">linkActiveClass</span>: <span class="string">&#x27;cst-active&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="路由默认路径，显示首页"><a href="#路由默认路径，显示首页" class="headerlink" title="路由默认路径，显示首页"></a>路由默认路径，显示首页</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">  <span class="attr">redirect</span>: <span class="string">&#x27;/home&#x27;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><code>router/index.js</code></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210602142008.png"></p><br><h2 id="配置router参数"><a href="#配置router参数" class="headerlink" title="配置router参数"></a>配置router参数</h2><h3 id="默认模式hash"><a href="#默认模式hash" class="headerlink" title="默认模式hash"></a>默认模式hash</h3><p>默认模式路径带#号，对路径不美观，我们可以修改模式为HTML5的history模式</p><p><code>/router/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽离了一下 routes</span></span><br><span class="line"><span class="keyword">const</span> routes  = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&#x27;/home&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: About</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/content&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: Content</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes, <span class="comment">//增强写法</span></span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;history&#x27;</span> <span class="comment">//修改模式</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用methods方法来跳转网页"><a href="#使用methods方法来跳转网页" class="headerlink" title="使用methods方法来跳转网页"></a>使用methods方法来跳转网页</h2><p><b>App.vue</b></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;home&quot;</span>&gt;</span>home<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;about&quot;</span>&gt;</span>about/button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span><br><span class="line">  <span class="attr">methods</span>:&#123;</span><br><span class="line">    <span class="function"><span class="title">home</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="comment">// this.$router.push(&#x27;/home&#x27;)</span></span><br><span class="line">      <span class="built_in">this</span>.$router.replace(<span class="string">&#x27;/home&#x27;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">about</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="comment">// this.$router.push(&#x27;/about&#x27;)</span></span><br><span class="line">      <span class="built_in">this</span>.$router.replace(<span class="string">&#x27;/about&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Vue-Router </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue-Router </tag>
            
            <tag> 基础使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-Router路由的目录</title>
      <link href="2021/06/01/Vue-Router%20Content/"/>
      <url>2021/06/01/Vue-Router%20Content/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header"><h2 class="huise">认识路由</h2><p>首先了解后端渲染、前端渲染和SPA单页面富应用，掌握理解路由映射表<a class="btn-beautify button--animated block outline right larger" href="/./2021/06/01/router1/"   title="认识路由"><i class="far fa-hand-point-right"></i><span>认识路由</span></a></p></div><div class="page-header"><h2 class="blue">路由基本使用</h2><p>学习安装和使用vue路由，了解其原理  <a class="btn-beautify button--animated block outline right blue larger" href="/./2021/06/02/Basic-use-of-routing/"   title="路由基本使用"><i class="far fa-hand-point-right"></i><span>路由基本使用</span></a>  </p></div><div class="page-header"><h2 class="blue">路由的进阶使用</h2><p>路由的进阶使用，了解动态路由、懒加载、路由嵌套。掌握路由传参，动态更改用户页面  <a class="btn-beautify button--animated block outline right blue larger" href="/./2021/06/20/routerlazy/"   title="路由的进阶使用"><i class="far fa-hand-point-right"></i><span>路由的进阶使用</span></a>  </p></div><div class="page-header"><h2 class="pink">参数传递</h2><p></p></div><div class="page-header"><h2 class="red">导航守卫</h2><p></p></div><div class="page-header"><h2 class="purple">keep-alive</h2><p></p></div>]]></content>
      
      
      <categories>
          
          <category> 目录 </category>
          
          <category> Vue-Router </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue-Router </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识路由</title>
      <link href="2021/06/01/router1/"/>
      <url>2021/06/01/router1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>明确三个概念：<cst>「后端渲染」</cst>指传统的 ASP、Java 或 PHP 的渲染机制；<cst>「前端渲染」</cst>指使用 JS 来渲染页面大部分内容，代表是现在流行的 SPA 单页面富应用；<cst>「同构渲染」</cst>指前后端共用 JS，首次渲染时使用 Node.js 来直出 HTML。一般来说同构渲染是介于前后端中的共有部分。</p></blockquote><h2 id="后端渲染"><a href="#后端渲染" class="headerlink" title="后端渲染"></a>后端渲染</h2><p>早期的 Web 项目一般是在服务器端进行渲染，服务器进程从数据库获取数据后，利用后端模板引擎，甚至于直接在 HTML 模板中嵌入后端语言（例如 JSP），将数据加载进来生成 HTML，然后通过网络传输到用户的浏览器中，然后被浏览器解析成可见的页面。</p><p>后端渲染的优点：</p><ul><li>对搜索引擎友好。</li><li>首页加载时间短，后端渲染加载完成后就直接显示 HTML，但前端渲染在加载完成 后还需要有段 js 渲染的时间。</li><li>有利于SEO的优化</li><li>服务端渲染不用关心浏览器兼容性问题（随意浏览器发展，这个优点逐渐消失）</li></ul><p>后端渲染的缺点：</p><ul><li>前后端开发交叉，不利于维护</li><li>做不到app化，体验较差</li><li>占用了大量的计算资源和带宽放在了与业务无关的渲染上</li></ul><h2 id="前端渲染"><a href="#前端渲染" class="headerlink" title="前端渲染"></a>前端渲染</h2><p>前端渲染 则是在浏览器里利用 JS 把数据和 HTML 模板进行组合。两种方式各有自己的优缺点，需要更 具自己的业务场景来选择技术方案。</p><p>前端渲染的优点在于：</p><ul><li>UI体验更好，在当下这越来越重要，用户除了看重功能之外，也越来越注重体验，通过使用vue.js、react等前端框架，可以搭建优秀的单页面web app，比传统的网页拥有更好的体验。</li><li>业务分离，后端只需要提供数据接口，前端在开发时也不需要部署对应的后端环境， 通过一些代理服务器工具就能远程获取后端数据进行开发，能够提升开发效率。</li><li>计算量转移，原本需要后端渲染的任务转移给了前端，减轻了服务器的压力。</li><li>通过使用前端框架，可以实现快速开发、迭代开发</li></ul><p>前端渲染主要面临的问题有两个 <strong>SEO、首屏性能</strong>。</p><p>SEO 很好理解。由于传统的搜索引擎只会从 HTML 中抓取数据，导致前端渲染的页面无法被抓取。前端渲染常使用的 SPA 会把所有 JS 整体打包，无法忽视的问题就是文件太大，导致渲染前等待很长时间。特别是网速差的时候，让用户等待白屏结束并非一个很好的体验。</p><h2 id="同构的优点"><a href="#同构的优点" class="headerlink" title="同构的优点"></a>同构的优点</h2><p>同构恰恰就是为了解决前端渲染遇到的问题才产生的，至 2014 年底伴随着 React 的崛起而被认为是前端框架应具备的一大杀器，以至于当时很多人为了用此特性而 <a href="https://link.zhihu.com/?target=https://blog.risingstack.com/from-angularjs-to-react-the-isomorphic-way/">放弃 Angular 1 而转向 React</a>。然而近3年过去了，很多产品逐渐从全栈同构的理想化逐渐转到首屏或部分同构。让我们再一次思考同构的优点真是优点吗？</p><h2 id="认识Vue-Router"><a href="#认识Vue-Router" class="headerlink" title="认识Vue-Router"></a>认识Vue-Router</h2><p><b>目前前端流行的三大框架，都有自己的路由实现：</b></p><ul><li>Angular的ngRouter</li><li>React的ReactRouter</li><li>Vue的vue-router</li></ul><p><b>我们重点学习Vue-Router</b></p><ul><li><p>vue-router 是 Vue.js官方的路由插件，它和vue.js是深度集成的，适合用于构建单页面应用</p></li><li><p>我们可以访问其官方网站进行学习：</p><a class="btn-beautify button--animated block right blue larger" href="https://router.vuejs.org/zh/"   title="官方网站"><i class="far fa-hand-point-right"></i><span>官方网站</span></a></li></ul><p><b>vue-router 是基于路由和组件的</b></p><ul><li>路由用于设定访问路径，将路径和组件映射起来</li><li>在vue-router的单页面应用中，页面的路径的改变就是组件的切换</li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue-Router </tag>
            
            <tag> 前端渲染 </tag>
            
            <tag> 后端渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>鼠标右键菜单管理</title>
      <link href="2021/05/31/Right%20click%20menu%20management/"/>
      <url>2021/05/31/Right%20click%20menu%20management/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><p>按住window健+R，输入<code>regedit</code>，进入注册表编辑</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210601082114.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210601081609.png"></p><h2 id="桌面右键菜单管理"><a href="#桌面右键菜单管理" class="headerlink" title="桌面右键菜单管理"></a>桌面右键菜单管理</h2><p>路径：<code>计算机\HKEY_CLASSES_ROOT\Directory\Background\shell</code></p><p>选中shell右键，添加新建项，命名你的右键菜单名字。</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210531213137.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210531213333.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210531213421.png"></p><p>在空白处，右键新建 –&gt; 字符串值，命名<code>Icon</code>。这是放图标的。</p><p>双击修改值，将你的文件.exe后缀路径填入</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210531213629.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210601082013.png"></p><h2 id="文件夹右键菜单管理"><a href="#文件夹右键菜单管理" class="headerlink" title="文件夹右键菜单管理"></a>文件夹右键菜单管理</h2><p>路径：<code>计算机\HKEY_CLASSES_ROOT\Directory\shell</code></p><p><cst>步骤同上</cst></p><h2 id="文件右键菜单管理"><a href="#文件右键菜单管理" class="headerlink" title="文件右键菜单管理"></a>文件右键菜单管理</h2><p>路径：<code>计算机\HKEY_CLASSES_ROOT\*\shell</code></p><p><cst>步骤同上</cst></p>]]></content>
      
      
      <categories>
          
          <category> Repository </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鼠标右键菜单管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Runtime-Compiler和Runtime-only的区别</title>
      <link href="2021/05/31/compiler-only/"/>
      <url>2021/05/31/compiler-only/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="区别在于main-js"><a href="#区别在于main-js" class="headerlink" title="区别在于main.js"></a>区别在于main.js</h2><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210531161629.png" alt="a"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210531163953.png"></p><p>对比区别在于Vue实例中，<code>render</code>使用了一个箭头函数，原型是createElement()，用于替换<code>&lt;div class=&quot;id&quot;&gt;</code></p><p>内部函数<code>createElement()</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--真实开发不会这么写，但是需要了解原理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">createElement(<span class="string">&#x27;标签&#x27;</span>,&#123;标签属性&#125;,[标签内容])</span></span><br><span class="line"><span class="javascript">createElement(<span class="string">&#x27;h2&#x27;</span>,&#123;<span class="attr">class</span>: <span class="string">&#x27;box&#x27;</span>&#125;,[<span class="string">&#x27;hello world&#x27;</span>])</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 写子标签</span></span></span><br><span class="line"><span class="javascript">  createElement(<span class="string">&#x27;h2&#x27;</span>,&#123;<span class="attr">class</span>: <span class="string">&#x27;box&#x27;</span>&#125;,[<span class="string">&#x27;hello world&#x27;</span>,createElement(<span class="string">&#x27;button&#x27;</span>,[<span class="string">&#x27;按钮&#x27;</span>])])</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">||</span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  hello world</span><br><span class="line"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Vue的编译渲染过程"><a href="#Vue的编译渲染过程" class="headerlink" title="Vue的编译渲染过程"></a>Vue的编译渲染过程</h2><p><code>template</code> –&gt; <code>ast</code>(abstract syntax tree 抽象语法树) –&gt; <code>render函数</code> –&gt; <code>VDOM</code> –&gt; <code>DOM</code></p><ul><li>先将template解析(parse)成抽象语法树(ast)</li><li>将ast编译(compiler)成render函数</li><li>将render函数渲染(render)成虚拟DOM</li><li>最后将<cst>虚拟DOM</cst>渲染成<cst>真实DOM</cst></li></ul><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//vuerender.png"></p><h3 id="runtime-compiler的步骤"><a href="#runtime-compiler的步骤" class="headerlink" title="runtime-compiler的步骤"></a>runtime-compiler的步骤</h3><p><code>template</code> –&gt; <code>ast</code> –&gt; <code>render函数</code> –&gt; <code>VDOM</code> –&gt; <code>DOM</code></p><h3 id="runtime-only的步骤"><a href="#runtime-only的步骤" class="headerlink" title="runtime-only的步骤"></a>runtime-only的步骤</h3><p><code>render函数</code> –&gt; <code>VDOM</code> –&gt; <code>DOM</code></p><h2 id="对比两者的区别"><a href="#对比两者的区别" class="headerlink" title="对比两者的区别"></a>对比两者的区别</h2><p>(1) 首先从代码的完整性来看，runtime-only版本比runtime-compiler版本少了一个API – <code>Vue.compile</code>，这个API是执行前两步，将一个模板字符串编译成 render 函数。因此，runtime-only是无法使用<code>template</code>选项的。</p><p>(2) 由于runtime-only少了相应的功能，使得该版本的体积更小。</p><table><thead><tr><th align="center"><strong>runtime-compiler</strong></th><th align="center"><strong>runtime-only</strong></th></tr></thead><tbody><tr><td align="center">体积大</td><td align="center">体积小</td></tr><tr><td align="center">有<code>Vue.compile</code> API</td><td align="center">无<code>Vue.compile</code> API</td></tr><tr><td align="center">可以使用<code>template模板</code>、<code>render函数</code>渲染</td><td align="center">只可使用<code>render</code>函数渲染</td></tr></tbody></table><h2 id="开发项目选择哪种呢"><a href="#开发项目选择哪种呢" class="headerlink" title="开发项目选择哪种呢"></a>开发项目选择哪种呢</h2><p>在实际开发项目中，我们偏向使用<code>runtime-only</code>，渲染性能更高，体积小。我们不需要担心template组件无法渲染，因为在开发项目时，我们安装过<code>vue-template-compiler</code>，可以利用它去渲染。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Vue-CLI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>箭头函数的使用和this指向</title>
      <link href="2021/05/31/jiantouhansu/"/>
      <url>2021/05/31/jiantouhansu/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions">MDN Web Docs</a></p><blockquote><p><strong>箭头函数表达式</strong>的语法比<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/function">函数表达式</a>更简洁，并且没有自己的<code>this</code>，<code>arguments</code>，<code>super</code>或<code>new.target</code>。箭头函数表达式更适用于那些本来需要匿名函数的地方，并且它不能用作构造函数。</p></blockquote><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(param1, param2, …, paramN) =&gt; &#123; statements &#125;</span><br><span class="line">(param1, param2, …, paramN) =&gt; expression</span><br><span class="line"><span class="comment">//相当于：(param1, param2, …, paramN) =&gt;&#123; return expression; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 当只有一个参数时，圆括号是可选的：</span></span><br><span class="line">(singleParam) =&gt; &#123; statements &#125;</span><br><span class="line">singleParam =&gt; &#123; statements &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有参数的函数应该写成一对圆括号。</span></span><br><span class="line">() =&gt; &#123; statements &#125;</span><br></pre></td></tr></table></figure><h2 id="高级语法"><a href="#高级语法" class="headerlink" title="高级语法"></a>高级语法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加括号的函数体返回对象字面量表达式：</span></span><br><span class="line">params =&gt; (&#123;<span class="attr">foo</span>: bar&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//支持剩余参数和默认参数</span></span><br><span class="line">(param1, param2, ...rest) =&gt; &#123; statements &#125;</span><br><span class="line">(param1 = defaultValue1, param2, …, paramN = defaultValueN) =&gt; &#123;</span><br><span class="line">statements &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//同样支持参数列表解构</span></span><br><span class="line"><span class="keyword">let</span> f = <span class="function">(<span class="params">[a, b] = [<span class="number">1</span>, <span class="number">2</span>], &#123;x: c&#125; = &#123;x: a + b&#125;</span>) =&gt;</span> a + b + c;</span><br><span class="line">f();  <span class="comment">// 6</span></span><br></pre></td></tr></table></figure><h2 id="没有单独的this"><a href="#没有单独的this" class="headerlink" title="没有单独的this"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions#%E6%B2%A1%E6%9C%89%E5%8D%95%E7%8B%AC%E7%9A%84this">没有单独的<code>this</code></a></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 在函数test里面使用普通函数和箭头函数的区别</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">this</span>) <span class="comment">//logs window</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">this</span>) <span class="comment">//logs window</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="built_in">console</span>.log(<span class="built_in">this</span>) ) <span class="comment">//logs window</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 在对象中使用箭头函数</span></span><br><span class="line"><span class="keyword">const</span> add = &#123;</span><br><span class="line"><span class="function"><span class="title">adde</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;<span class="built_in">console</span>.log(<span class="built_in">this</span>)&#125; ) <span class="comment">//logs adde</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params"></span>)</span>&#123;<span class="built_in">console</span>.log(<span class="built_in">this</span>)&#125; ) <span class="comment">//logs window</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">this</span>) <span class="comment">//logs adde</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">test();</span><br><span class="line">add.adde()</span><br></pre></td></tr></table></figure><blockquote><p>问题：箭头函数的this是如何指向的</p><p>答案：箭头函数this的向外层一层一层查找，直到找到this为止</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 箭头函数 </tag>
            
            <tag> this </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-CLI 进阶</title>
      <link href="2021/05/31/vueclicontent/"/>
      <url>2021/05/31/vueclicontent/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header">  <h2 class="huise">Runtime-Compiler和Runtime-only的区别</h2><p>  它们的区别在于渲染步骤,compiler可以渲染template组件，only是不需要渲染的  <div class="text-right">    <a class="btn-beautify button--animated outline huise larger" href="/./2021/05/31/compiler-only/"   title="Runtime-Compiler和Runtime-only的区别"><i class="far fa-hand-point-right"></i><span>Runtime-Compiler和Runtime-only的区别</span></a>  </div></p></div><div class="page-header">  <h2 class="blue">箭头函数的使用和this指向</h2><p>  了解ES6的增强写法，箭头函数，理解this指向  <div class="text-right">    <a class="btn-beautify button--animated outline blue larger" href="/./2021/05/31/jiantouhansu/"   title="箭头函数的使用和this指向"><i class="far fa-hand-point-right"></i><span>箭头函数的使用和this指向</span></a>  </div></p></div>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Vue-CLI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚手架进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue父组件和子组件</title>
      <link href="2021/05/28/childcomponent/"/>
      <url>2021/05/28/childcomponent/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.创建组件构造器对象2</span></span><br><span class="line"><span class="keyword">const</span> cpnConstruct2 = Vue.extend(&#123;</span><br><span class="line"><span class="attr">template</span>:<span class="string">`</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;我是标题&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;我的内容，我是内容&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/!--引用子组件--&gt;</span></span><br><span class="line"><span class="string">&lt;cpn1&gt;&lt;/cpn1&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span>,</span><br><span class="line"><span class="attr">components</span>:&#123;</span><br><span class="line"><span class="comment">//构造器里面也有components,在该注册的组件，称为子组件</span></span><br><span class="line"><span class="attr">cpn1</span>:cpnConstruct1</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line"><span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line"><span class="attr">message</span>: <span class="string">&#x27;你好啊&#x27;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">components</span>: &#123;</span><br><span class="line"><span class="attr">cpn2</span>:cpnConstruct2</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//clipboard.png" alt="Vue官方示例图"></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue组件的基本使用</title>
      <link href="2021/05/28/vue-baseuse/"/>
      <url>2021/05/28/vue-baseuse/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="全局组件"><a href="#全局组件" class="headerlink" title="全局组件"></a>全局组件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.创建组件构造器对象</span></span><br><span class="line"><span class="keyword">const</span> cpnConstruct = Vue.extend(&#123;</span><br><span class="line">    <span class="attr">template</span>:<span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div&gt;</span></span><br><span class="line"><span class="string">            &lt;h2&gt;标题&lt;/h2&gt;</span></span><br><span class="line"><span class="string">            &lt;p&gt;内容&lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt; </span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">&#125;)<span class="comment">//使用的tab健的引号，ES6语法，作用跟双引号单引号一样，但是可以换行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.注册组件</span></span><br><span class="line">Vue.component(<span class="string">&#x27;my-cpn&#x27;</span>,cpnConstruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.使用组件(在Vue的实例范围内使用组件)</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">my-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cpn</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">my-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cpn</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="局部组件"><a href="#局部组件" class="headerlink" title="局部组件"></a>局部组件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注册组件不使用这种方式</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line"><span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line"><span class="attr">data</span>:&#123;</span><br><span class="line"><span class="attr">message</span>:<span class="string">&#x27;你好啊&#x27;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>:&#123;</span><br><span class="line"><span class="function"><span class="title">add</span>(<span class="params">name,event</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;打印&#x27;</span>,name,event);</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">  <span class="attr">components</span>:&#123;</span><br><span class="line">      mycpn(组件名称): cpnConstruct(组件构造器) </span><br><span class="line">  &#125; </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue注册组件语法写法</title>
      <link href="2021/05/28/vue-component(1)/"/>
      <url>2021/05/28/vue-component(1)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="基本注册组件的方法"><a href="#基本注册组件的方法" class="headerlink" title="基本注册组件的方法"></a>基本注册组件的方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 创建全局组件方法 --&gt;</span><br><span class="line"><span class="keyword">const</span> cpnConstruct = Vue.extend(&#123;</span><br><span class="line"><span class="attr">template</span>:<span class="string">`</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;this is a title&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt; this is a content&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line">&#125;)</span><br><span class="line">Vue.component(<span class="string">&#x27;cpn&#x27;</span>,cpnConstruct);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 创建局部组件方法 --&gt;</span><br><span class="line"><span class="keyword">const</span> cpnConstruct = Vue.extend(&#123;</span><br><span class="line"><span class="attr">template</span>:<span class="string">`</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;this is a title&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt; this is a content&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line"><span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line"><span class="attr">message</span>: <span class="string">&#x27;你好啊&#x27;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">components</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;cpn&#x27;</span>:cpnConstruct</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="语法糖注册全局组件"><a href="#语法糖注册全局组件" class="headerlink" title="语法糖注册全局组件"></a>语法糖注册全局组件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;cpn&#x27;</span>,&#123;</span><br><span class="line"><span class="attr">template</span>:<span class="string">`</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;this is a title&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt; this is a content&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="语法糖注册局部组件"><a href="#语法糖注册局部组件" class="headerlink" title="语法糖注册局部组件"></a>语法糖注册局部组件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line"><span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line"><span class="attr">message</span>: <span class="string">&#x27;你好啊&#x27;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">components</span>: &#123;</span><br><span class="line">       <span class="string">&#x27;cpn&#x27;</span>:&#123;</span><br><span class="line"><span class="attr">template</span>:<span class="string">`</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;this is a title&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt; this is a content&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Components </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 注册组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组件模板分离的写法</title>
      <link href="2021/05/28/vue-component(2)/"/>
      <url>2021/05/28/vue-component(2)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="使用-lt-script-gt-标签，且type类型text-x-template"><a href="#使用-lt-script-gt-标签，且type类型text-x-template" class="headerlink" title="使用&lt;script&gt;标签，且type类型text/x-template"></a>使用<code>&lt;script&gt;</code>标签，且type类型text/x-template</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/x-template&quot;</span> id=<span class="string">&quot;cpn&quot;</span>&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>this is a title<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>this is a content<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">Vue.component(<span class="string">&#x27;cpn&#x27;</span>,&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">template</span>:<span class="string">&#x27;#cpn&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="使用-lt-template-gt-标签"><a href="#使用-lt-template-gt-标签" class="headerlink" title="使用&lt;template&gt;标签"></a>使用<code>&lt;template&gt;</code>标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>this is a title<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>this is a content<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;cpn&#x27;</span>,&#123;</span><br><span class="line"><span class="attr">template</span>:<span class="string">&#x27;#cpn&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Components </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue注册组件数据data</title>
      <link href="2021/05/28/vue-component(3)/"/>
      <url>2021/05/28/vue-component(3)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="props基本用法"><a href="#props基本用法" class="headerlink" title="props基本用法"></a>props基本用法</h2><blockquote><p>在组件中，使用选项props来声明需要从父级接收到的数据</p><p>props的值有两种方式：</p><ul><li>方法一：字符串数组，数组中的字符串就是传递时的名称</li><li>方式二：对象，对象可以设置传递时的类型，也可以设置默认值</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 用v-bind绑定vue id=&quot;app&quot;实例的数据data值，存入子组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cpnn</span> <span class="attr">:cpnmovies</span>=<span class="string">&quot;movies&quot;</span> <span class="attr">:cpnmessage</span>=<span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">cpnn</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;cpnmovies&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;cpnmessage&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 父子通信演示</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// 以Vue实例为父组件，该注册为子组件</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// 父组件传数据给子组件用props获取</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> cpnn = &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">template</span>:<span class="string">&#x27;#cpn&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">props</span>:[<span class="string">&#x27;cpnmovies&#x27;</span>,<span class="string">&#x27;cpnmessage&#x27;</span>],</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">message</span>:<span class="string">&#x27;你好啊&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">movies</span>:[<span class="string">&#x27;海贼王&#x27;</span>,<span class="string">&#x27;西游记&#x27;</span>,<span class="string">&#x27;爱情公寓&#x27;</span>]</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript">    <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="javascript">cpnn</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>PS：一开始使用模板的无法获取到message数据，不能展现在hmtl中，然后<code>template</code>标签内添加一个容器div，现在可以完全获取数据展现<code>hmtl</code>中</p><h2 id="props数据验证"><a href="#props数据验证" class="headerlink" title="props数据验证"></a>props数据验证</h2><ol><li><code>String</code></li><li><code>Number</code></li><li><code>Boolean</code></li><li><code>Array</code></li><li><code>Object</code></li><li><code>Data</code></li><li><code>Function</code></li><li><code>Sysmbol</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//继续上面代码</span></span><br><span class="line"><span class="keyword">const</span> cpnn = &#123;</span><br><span class="line"><span class="attr">template</span>:<span class="string">&#x27;#cpn&#x27;</span>,</span><br><span class="line"><span class="attr">props</span>:[<span class="string">&#x27;cpnmovies&#x27;</span>,<span class="string">&#x27;cpnmessage&#x27;</span>],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过props数据验证的方式写</span></span><br><span class="line"><span class="keyword">const</span> cpnn1 = &#123;</span><br><span class="line">    <span class="attr">template</span>:<span class="string">&#x27;#cpn&#x27;</span>,</span><br><span class="line">    <span class="attr">props</span>:&#123;</span><br><span class="line">        <span class="attr">cpnmovies</span>:<span class="built_in">Array</span>,</span><br><span class="line">        <span class="attr">cpnmessage</span>:<span class="built_in">String</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加默认值</span></span><br><span class="line"><span class="attr">cpnmessage</span>:&#123;</span><br><span class="line"><span class="attr">type</span>:<span class="built_in">String</span>,</span><br><span class="line"><span class="attr">default</span>:<span class="string">&#x27;hello world&#x27;</span>,</span><br><span class="line"><span class="attr">required</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PS：添加<code>required:true</code>表示必须传入这个数据，不然报错</p><h2 id="数据类型不同默认值写法不同"><a href="#数据类型不同默认值写法不同" class="headerlink" title="数据类型不同默认值写法不同"></a>数据类型不同默认值写法不同</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果数据类型是Object或Array</span></span><br><span class="line"><span class="comment">//default默认值通过函数返回</span></span><br><span class="line"><span class="attr">props</span>:&#123;</span><br><span class="line">    <span class="attr">cpnmovies</span>:<span class="built_in">Array</span>,</span><br><span class="line">    <span class="function"><span class="title">defaul</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Components </category>
          
      </categories>
      
      
        <tags>
            
            <tag> props </tag>
            
            <tag> data </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue注册组件数据data</title>
      <link href="2021/05/28/vue-component(4)/"/>
      <url>2021/05/28/vue-component(4)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="组件可以访问Vue实例数据吗？"><a href="#组件可以访问Vue实例数据吗？" class="headerlink" title="组件可以访问Vue实例数据吗？"></a>组件可以访问<code>Vue</code>实例数据吗？</h2><blockquote><p>组件是一个单独功能模块的封装，这个模块有属于自己的模板的HTML，也有自己的数据data</p><p>如果将所有的数据都放Vue实例中，Vue实例就会变得非常臃肿，及时可以这样做，也不要做</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;myCpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        消息：&#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">Vue.component(<span class="string">&#x27;cpn&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">template</span>:<span class="string">&#x27;#cpn&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">message</span>:<span class="string">&#x27;hello world&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>PS：将数据放在注册组件模板的里面，且data是一个函数</code></p><p><code>hello world</code></p><h2 id="为什么组件data必须是函数"><a href="#为什么组件data必须是函数" class="headerlink" title="为什么组件data必须是函数"></a>为什么组件<code>data</code>必须是函数</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">//举例说明一下data是函数</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">abc</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>: <span class="string">&#x27;why&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">age</span>:<span class="number">18</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> obj1 = abc()</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> obj2 = abc()</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> obj3 = abc()</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    obj1.name = <span class="string">&#x27;kobe&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(obj2);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(obj3);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//logs结果均为因为obj1的改变而改变，这就是为什么data是函数的原因</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//让多次使用模板组件，但data数据不会被其他模板改变</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Components </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>父子组件通讯实例</title>
      <link href="2021/05/28/vue-component(5)/"/>
      <url>2021/05/28/vue-component(5)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 父传子通过props获取数据，子传父同过事件传递 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">child</span> <span class="attr">:childmessage</span>=<span class="string">&quot;message&quot;</span> <span class="attr">:childmovies</span>=<span class="string">&quot;movies&quot;</span> @<span class="attr">itemclick</span>=<span class="string">&quot;fatherbtnclick&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 子组件模板 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;child&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 模板数据从父组件拿到子组件使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;childmessage&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-for</span>=<span class="string">&quot;item in childmovies&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 模板数据子组件事件发送到父组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in categories&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;childbtnevent(item)&quot;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">//组成子组件</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> child = &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">template</span>:<span class="string">&#x27;#child&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">message</span>:<span class="string">&#x27;hello 我是子组件child&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">categories</span>:[</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;aaa&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;斗罗大陆&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;bbb&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;斗破苍穹&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;ccc&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;夜天子&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;ddd&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;大圣娶亲&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">]</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">childbtnevent</span>(<span class="params">item</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 发送事件方法$event</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//将方法itemclick发送到父组件</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//等待父组件接收</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.$emit(<span class="string">&#x27;itemclick&#x27;</span>,item);</span></span><br><span class="line"><span class="javascript"><span class="comment">// console.log(item);</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">props</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 获取父组件数据</span></span></span><br><span class="line"><span class="javascript"><span class="attr">childmessage</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//三种属性defualt是默认值，当数据类型是Object或Array时，default是一个函数类型，return返回值</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// 当required:true时,改数据一定需要传过来，否则报错</span></span></span><br><span class="line"><span class="javascript"><span class="attr">type</span>:<span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">defualt</span>:<span class="string">&#x27;暂无&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">required</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">childmovies</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">type</span>:<span class="built_in">Array</span>,</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">default</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> []</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"><span class="comment">//将vue的实例为父组件</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> father = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">message</span>:<span class="string">&#x27;hello world 我是vue实例父组件&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">movies</span>:[<span class="string">&#x27;斗罗大陆&#x27;</span>,<span class="string">&#x27;斗破苍穹&#x27;</span>,<span class="string">&#x27;夜天子&#x27;</span>,<span class="string">&#x27;大圣娶亲&#x27;</span>,<span class="string">&#x27;我是父组件vue实例数据&#x27;</span>]</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">fatherbtnclick</span>(<span class="params">item</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;我是父组件&#x27;</span>,item)</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="javascript">child</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Components </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计数器实例</title>
      <link href="2021/05/28/vue-component(6)/"/>
      <url>2021/05/28/vue-component(6)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="计数器"><a href="#计数器" class="headerlink" title="计数器"></a>计数器</h1><blockquote><p>计数器实例：子组件从父组件获取counter数据，子组件有两个button按钮，通过点击事件<code>$emit()</code>向父级传递事件，在父级的emthods写方法，来改变counter值</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 子组件有+-按钮，父组件有counter数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">child</span> <span class="attr">:childcounter</span>=<span class="string">&quot;counter&quot;</span> @<span class="attr">subnumber</span>=<span class="string">&quot;fathersubnumber&quot;</span> @<span class="attr">addnumber</span>=<span class="string">&quot;fatheraddnumber&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;child&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前计数:&#123;&#123;childcounter&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;childsubnumber&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;childaddnumber&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> child = &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">template</span>:<span class="string">&#x27;#child&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">message</span>:<span class="string">&#x27;hello child&#x27;</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">childsubnumber</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.$emit(<span class="string">&#x27;subnumber&#x27;</span>);</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">childaddnumber</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.$emit(<span class="string">&#x27;addnumber&#x27;</span>);</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">props</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">childcounter</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">type</span>:<span class="built_in">Number</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">default</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">required</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">message</span>:<span class="string">&#x27;你好啊&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">counter</span>:<span class="number">0</span></span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">fathersubnumber</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.counter--;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">fatheraddnumber</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.counter++;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="javascript">child</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Components </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue父子组件访问</title>
      <link href="2021/05/28/vue-component(7)/"/>
      <url>2021/05/28/vue-component(7)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="父子组件访问"><a href="#父子组件访问" class="headerlink" title="父子组件访问"></a>父子组件访问</h1><ul><li><h5 id="父组件访问子组件"><a href="#父组件访问子组件" class="headerlink" title="父组件访问子组件"></a>父组件访问子组件</h5><ul><li><code>$children</code><ul><li><code>console.log(this.$children)</code> 打印的是一个子组件数组</li><li><code>for(let i of this.$children)</code>打印所有的子组件</li><li><code>this.$children[index].function()</code>使用某个子组件的方法</li></ul></li><li><code>$ref</code><ul><li><code>colsole.log(this.$refs)</code> 打印的是对象，默认为空</li></ul></li><li><code>$children &amp;&amp; $refs的使用</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用$children $refs访问子组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 4. 绑定ref值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span> <span class="attr">ref</span>=<span class="string">&quot;aaa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;printlog&quot;</span>&gt;</span>PrintLog<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是子组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">printlog</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 1. 打印this.$children是什么</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">this</span>.$children);</span></span><br><span class="line"><span class="javascript"><span class="comment">// 打印结果是三个子组件的数组</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 2. 打印子组件的方法</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// 遍历数组的子组件</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">of</span> <span class="built_in">this</span>.$children)&#123;</span></span><br><span class="line"><span class="javascript">i.cpnmessage();</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"><span class="comment">//打印了所有子组件的cpnmessage方法</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 3.打印this.$refs</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">this</span>.$refs)</span></span><br><span class="line"><span class="javascript"><span class="comment">//默认是一个空对象</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//给cpn子组件绑定ref值</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 5.打印绑定的ref值子组件</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">this</span>.$refs.aaa);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 6.绑定ref=&quot;aaa&quot;的子组件调用cpnmessage方法</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.$refs.aaa.cpnmessage()</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.$children[<span class="number">0</span>].cpnmessage()</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">cpn</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">template</span>: <span class="string">&#x27;#cpn&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">cpnmessage</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;hello this is a children component&#x27;</span>)</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h5 id="子组件访问父组件"><a href="#子组件访问父组件" class="headerlink" title="子组件访问父组件"></a>子组件访问父组件</h5><ul><li>通过<code>$parent</code>去获取父组件的data或methods</li><li>这种访问方式不常用，有很多缺点，真实开发很少使用<ul><li>子组件不够独立</li><li>子组件复用性差：当访问父组件data可能这个父组件用，复用的另一个没有</li><li>子组件和父组件的耦合度太高了</li></ul></li></ul></li><li><h5 id="访问根组件-root"><a href="#访问根组件-root" class="headerlink" title="访问根组件$root"></a>访问根组件<code>$root</code></h5><blockquote><p>子组件可以直接访问到vue实例，但是使用很少，实际上vue实例的数据很少</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Components </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue组件化开发</title>
      <link href="2021/05/28/vue-components/"/>
      <url>2021/05/28/vue-components/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div><h2 class="huise">Vue组件的基本使用</h2><p>    学习掌握全局组件和局部组件    <a class="btn-beautify button--animated block right larger" href="/2021/05/28/vue-baseuse/"   title="Vue组件的基本使用"><i class="far fa-hand-point-right"></i><span>Vue组件的基本使用</span></a></p></div><div><h2 class="blue">Vue父组件和子组件</h2><p>    学习父组件和子组件的案例    <a class="btn-beautify button--animated block right blue larger" href="/2021/05/28/childcomponent/"   title="Vue父组件和子组件"><i class="far fa-hand-point-right"></i><span>Vue父组件和子组件</span></a></p></div><div><h2 class="pink">vue组件语法写法</h2><p>    注册组件的各种语法    <a class="btn-beautify button--animated block right pink larger" href="/2021/05/28/vue-component(1)/"   title="vue组件语法写法"><i class="far fa-hand-point-right"></i><span>vue组件语法写法</span></a></p></div><div><h2 class="red">组件模板分离的写法</h2><p>    抽离组件模板，将模板放置在其它地方，我们将使用两种方法，来抽离    <a class="btn-beautify button--animated block right red larger" href="/2021/05/28/vue-component(2)/"   title="组件模板分离的写法"><i class="far fa-hand-point-right"></i><span>组件模板分离的写法</span></a></p></div><div><h2 class="purple">通信：父传子</h2><p>    props基本用法、props数据验证和Data中的数据类型    <a class="btn-beautify button--animated block right purple larger" href="/2021/05/28/vue-component(3)/"   title="通信：父传子"><i class="far fa-hand-point-right"></i><span>通信：父传子</span></a></p></div><div><h2 class="orange">Vue注册组件数据data</h2><p>解答两个问题：组件可以访问vue实例数据吗、为什么组件data是函数<a class="btn-beautify button--animated block right orange larger" href="/2021/05/28/vue-component(4)/"   title="Vue注册组件数据data"><i class="far fa-hand-point-right"></i><span>Vue注册组件数据data</span></a></p></div><div><h2 class="green">父子组件通讯实例</h2><p>学习父子组件通讯实例，掌握组件化开发方法<a class="btn-beautify button--animated block right green larger" href="/2021/05/28/vue-component(5)/"   title="父子组件通讯实例"><i class="far fa-hand-point-right"></i><span>父子组件通讯实例</span></a></p></div><div><h2 class="huise">计数器实例</h2><p>子组件从父组件获取counter数据，子组件有两个button按钮，通过点击事件$emit()向父级传递事件，在父级的emthods写方法，来改变counter值<a class="btn-beautify button--animated block right larger" href="/2021/05/28/vue-component(6)/"   title="计数器实例"><i class="far fa-hand-point-right"></i><span>计数器实例</span></a></p></div><div><h2 class="blue">Vue父子组件访问</h2><p>父组件访问子组件和子组件访问父组件，方式不同<a class="btn-beautify button--animated block right blue larger" href="/2021/05/28/vue-component(7)/"   title="Vue父子组件访问"><i class="far fa-hand-point-right"></i><span>Vue父子组件访问</span></a></p></div><div><h2 class="pink">插槽slot</h2><p>了解插槽Slot的基本使用、学习新概念具名，通过给slot添加值name，指定修改内容、理解插槽作用域：父级模板里的所有内容都是在父级作用域中编译的；子模板里的所有内容都是在子作用域中编译的<a class="btn-beautify button--animated block right pink larger" href="/2021/05/13/Vue_slot/"   title="插槽slot"><i class="far fa-hand-point-right"></i><span>插槽slot</span></a></p></div>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Components </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-CLI 脚手架</title>
      <link href="2021/05/27/vue-cli/"/>
      <url>2021/05/27/vue-cli/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header">  <h2>介绍</h2>  <p>右方是一个vue官方脚手架链接，写了更为详细的介绍    <a class="btn-beautify button--animated block outline blue right larger" href="/2021/06/01/router1/"   title="官方文档"><i class="far fa-hand-point-right"></i><span>官方文档</span></a></p></div><p><cst>CLI</cst>：全称Command-Line interface，翻译为命令行界面，但俗称脚手架</p><p>Vue CLI 是一个基于Vue.js 进行快速开发的完整系统，使用vue-cli 可以快速搭建Vue开发环境以及对应的webpack配置</p><p>Vue CLI 致力于将 Vue 生态中的<cst>工具基础标准化</cst>。它确保了各种构建工具能够基于智能的<cst>默认配置</cst>即可平稳衔接，这样你可以专注在撰写应用上，而不必花好几天去<cst>纠结配置的问题</cst>。与此同时，它也为每个工具提供了调整配置的<cst>灵活性</cst>，无需 eject。</p><h2 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h2><p>CLI (<code>@vue/cli</code>) 是一个全局安装的 npm 包，提供了终端里的 <code>vue</code> 命令。它可以通过 <code>vue create</code> 快速搭建一个新项目，或者直接通过 <code>vue serve</code> 构建新想法的原型。你也可以通过 <code>vue ui</code> 通过一套图形化界面管理你的所有项目。我们会在接下来的指南中逐章节深入介绍。</p><h2 id="CLI-服务"><a href="#CLI-服务" class="headerlink" title="CLI 服务"></a>CLI 服务</h2><p>CLI 服务 (<code>@vue/cli-service</code>) 是一个开发环境依赖。它是一个 npm 包，局部安装在每个 <code>@vue/cli</code> 创建的项目中。</p><p>CLI 服务是构建于 <a href="http://webpack.js.org/">webpack</a> 和 <a href="https://github.com/webpack/webpack-dev-server">webpack-dev-server</a> 之上的。它包含了：</p><ul><li>加载其它 CLI 插件的核心服务；</li><li>一个针对绝大部分应用优化过的内部的 webpack 配置；</li><li>项目内部的 <code>vue-cli-service</code> 命令，提供 <code>serve</code>、<code>build</code> 和 <code>inspect</code> 命令。</li></ul><hr><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="关于旧版本"><a href="#关于旧版本" class="headerlink" title="关于旧版本"></a>关于旧版本</h3><p>Vue CLI 的包名称由 <code>vue-cli</code> 改成了 <code>@vue/cli</code>。 如果你已经全局安装了旧版本的 <code>vue-cli</code> (1.x 或 2.x)，你需要先通过 <code>npm uninstall vue-cli -g</code> 或 <code>yarn global remove vue-cli</code> 卸载它。</p><h3 id="Node-版本要求"><a href="#Node-版本要求" class="headerlink" title="Node 版本要求"></a>Node 版本要求</h3><p>Vue CLI 4.x 需要 <a href="https://nodejs.org/">Node.js</a> v8.9 或更高版本 (推荐 v10 以上)。你可以使用 <a href="https://github.com/tj/n">n</a>，<a href="https://github.com/creationix/nvm">nvm</a> 或 <a href="https://github.com/coreybutler/nvm-windows">nvm-windows</a> 在同一台电脑中管理多个 Node 版本。</p><h3 id="使用npm-或-yarn-安装"><a href="#使用npm-或-yarn-安装" class="headerlink" title="使用npm 或 yarn 安装"></a>使用npm 或 yarn 安装</h3><p><cst>自动安装的是最新版3.0以上，如果需要使用2.0Vue-CLi，那么我们下面将会提到拉取CLI2.0模板</cst></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br><span class="line"><span class="comment"># OR</span></span><br><span class="line">yarn global add @vue/cli</span><br></pre></td></tr></table></figure><h3 id="检查版本"><a href="#检查版本" class="headerlink" title="检查版本"></a>检查版本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vue --version</span><br><span class="line"><span class="comment"># OR</span></span><br><span class="line">vue -V</span><br></pre></td></tr></table></figure><h3 id="拉取Vue2-x模板-旧版本"><a href="#拉取Vue2-x模板-旧版本" class="headerlink" title="拉取Vue2.x模板(旧版本)"></a>拉取Vue2.x模板(旧版本)</h3><p>Vue CLI &gt;= 3 和旧版使用了相同的 <code>vue</code> 命令，所以 Vue CLI 2 (<code>vue-cli</code>) 被覆盖了。如果你仍然需要使用旧版本的 <code>vue init</code> 功能，你可以全局安装一个桥接工具：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli-init</span><br><span class="line"><span class="comment"># `vue init` 的运行效果将会跟 `vue-cli@2.x` 相同</span></span><br><span class="line">vue init webpack my-project</span><br></pre></td></tr></table></figure><hr><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><h2 id="vue-create"><a href="#vue-create" class="headerlink" title="vue create"></a>vue create</h2><blockquote><p>在终端输入以下命令，我是在CMD运行创建脚手架的。我在IED终端，会报错显示系统禁止脚本，因此转移到命令行创建</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vue</span> create hello-vue <span class="comment">#创建3.0脚手架</span></span><br><span class="line"><span class="comment"># hello-vue 是项目名字</span></span><br><span class="line">vue init webpack hello-vue <span class="comment">#创建2.0脚手架</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210527213221.png"></p><blockquote><p> 使用vue create创建vuecli3项目，会弹出默认default和Manually select features(手动选择)</p></blockquote><h3 id="选择-Default"><a href="#选择-Default" class="headerlink" title="选择[Default]"></a>选择[Default]</h3><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210527213642.png" alt="安装中"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210527213849.png"></p><blockquote><p>输入命令后，直接安装好项目了，好像不是自定义设置一些配置。使用命名<code>cd vue-cli</code>进入我的项目，<code>npm run serve</code> 运行本地服务器，脚手架是自动配置了本地服务器。</p></blockquote><h3 id="选择Manually-select-features"><a href="#选择Manually-select-features" class="headerlink" title="选择Manually select features"></a>选择Manually select features</h3><p>自定义选择一些配置，如果你倾向于快速创建，选择默认。<cst>可以通过空格选中/取消，选中你需要的功能回车创建项目</cst></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210531155700.png"></p><h2 id="使用旧版本方式创建Vue2-x项目"><a href="#使用旧版本方式创建Vue2-x项目" class="headerlink" title="使用旧版本方式创建Vue2.x项目"></a>使用旧版本方式创建Vue2.x项目</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vue</span> init webpack project</span><br></pre></td></tr></table></figure><h3 id="Project-name-hello-vue-2-x"><a href="#Project-name-hello-vue-2-x" class="headerlink" title="? Project name (hello-vue-2.x)"></a>? Project name (hello-vue-2.x)</h3><p>确认项目名字，如果你需要修改，直接输入名字，不修改就回车</p><h3 id="Project-description-A-Vue-js-project"><a href="#Project-description-A-Vue-js-project" class="headerlink" title="? Project description (A Vue.js project)"></a>? Project description (A Vue.js project)</h3><p>项目描述说明，不更改回车</p><h3 id="Author-alovelyyou-lt-noti163-163-com"><a href="#Author-alovelyyou-lt-noti163-163-com" class="headerlink" title="? Author (alovelyyou&lt;noti163@163.com)"></a>? Author (alovelyyou&lt;noti163@163.com)</h3><p>默认是读取C盘Confjg配置文件的名字&amp;&amp;邮箱</p><h3 id="Runtime-Compiler-amp-amp-Runtime-only"><a href="#Runtime-Compiler-amp-amp-Runtime-only" class="headerlink" title="Runtime Compiler &amp;&amp; Runtime-only"></a>Runtime Compiler &amp;&amp; Runtime-only</h3><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210528082820.png"></p><p>前者能够解析<code>template</code>模板，因为有Compiler。后者无法解析，但是更小，在项目开发时，会使用这个，使用某种方法可以解决无法解析<code>template</code>。目前我们暂时选择前者</p><h3 id="Install-vue-router-Y-n"><a href="#Install-vue-router-Y-n" class="headerlink" title="? Install vue-router? (Y/n)"></a>? Install vue-router? (Y/n)</h3><p>是否下载Vue路由，这是暂时不使用vue路由，因此选择<code>n</code></p><h3 id="Use-ESLint-to-lint-your-code-Y-n"><a href="#Use-ESLint-to-lint-your-code-Y-n" class="headerlink" title="? Use ESLint to lint your code? (Y/n)"></a>? Use ESLint to lint your code? (Y/n)</h3><p>规范代码的，如果你写代码，经常随意空格，没有去规范书写，那么你可以选择<code>Y</code>。这里我选择<code>n</code></p><h3 id="Set-up-unit-tests-Y-n"><a href="#Set-up-unit-tests-Y-n" class="headerlink" title="? Set up unit tests (Y/n)"></a>? Set up unit tests (Y/n)</h3><p>是否设置单元测试，这里我选择<code>n</code></p><h3 id="Setup-e2e-tests-with-Nightwatch-Y-n"><a href="#Setup-e2e-tests-with-Nightwatch-Y-n" class="headerlink" title="? Setup e2e tests with Nightwatch? (Y/n)"></a>? Setup e2e tests with Nightwatch? (Y/n)</h3><p>e2e就是端到端测试，不需要设置n</p><h3 id="选择-NPM-或-Yarn-管理项目"><a href="#选择-NPM-或-Yarn-管理项目" class="headerlink" title="选择 NPM 或 Yarn 管理项目"></a>选择 NPM 或 Yarn 管理项目</h3><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210528083540.png"></p><p>我使用的<code>NPM</code>，因此选择<code>NPM</code></p><h2 id="认识脚手架vue3"><a href="#认识脚手架vue3" class="headerlink" title="认识脚手架vue3"></a>认识脚手架vue3</h2><h3 id="vue-cli-3-与-2-版本有很大的区别"><a href="#vue-cli-3-与-2-版本有很大的区别" class="headerlink" title="vue cli 3 与 2 版本有很大的区别"></a>vue cli 3 与 2 版本有很大的区别</h3><ol><li>vue-cli 3 是基于 webpack 4 打招，vue-cli 2 还是webpack 3</li><li>vue-cli 3 的设计原则 “0配置”，移除的配置文件根目录下的<code>build</code> 和 <code>config</code>等目录</li><li>vue-cli 3 提供了vue ui命令，提供了可视化配置，更加人性化</li><li>提出了static，新增了public文件夹，并且index.html移到了public中</li></ol><h3 id="内置vue-ui命名，修改配置文件"><a href="#内置vue-ui命名，修改配置文件" class="headerlink" title="内置vue ui命名，修改配置文件"></a>内置vue ui命名，修改配置文件</h3><p><code>vue ui </code> 进入ui界面，可以通过导入创建的vue-cli3 项目，然后修改配置文件</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Vue-CLI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚手架 </tag>
            
            <tag> Vue2.x </tag>
            
            <tag> Vue3.x </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建本地服务器</title>
      <link href="2021/05/26/buildserver/"/>
      <url>2021/05/26/buildserver/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header">  <h2>搭建本地服务器</h2>  <p>    webpack提供了一个可选的本地开发服务器，这个本地服务器基于node.js,内部使用<cst>express框架</cst>，可以实现我们想要的让浏览器<cst>自动刷新</cst>显示我们的打包结果  </p>  <p>    在开发项目时，经常需要打包项目，瞅一瞅啥样子。但是妮，通过npm打包项目，很费时间，因此我们需要<cst>搭建本地服务器</cst>，让内存缓存项目，通过<cst>localhost的方式</cst>，来打开网页。  </p></div><blockquote><p><cst>总结搭建心得</cst>：学习webpack时，需要安装各种依赖，如果安装的依赖不兼容就无法允许，因此我也遇到了这个问题。在webpack4.0以上，都需要安装webpack-cli，但是安装的webpack-cli可能与webpack-dev-server不兼容，因此我们无法运行本地服务器</p></blockquote><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> install --save-dev webpack-dev-server</span><br></pre></td></tr></table></figure><p><b>devserver 也是作为webpack中的一个选项，选项本身可以设置如下属性</b></p><ul><li><code>contentBase</code>：为哪一个文件夹提供本地服务器，默认是根文件夹，我们这里填写<code>./dist</code></li><li><code>port</code>：端口号</li><li><code>inline</code>：页面实时刷新</li><li><code>historyApiFallback</code>：在SPA页面，中依赖HTML5的history模式</li></ul><p><b>webpack.config.js</b></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">        <span class="attr">contentBase</span>: <span class="string">&#x27;./dist&#x27;</span>,</span><br><span class="line">        <span class="attr">inline</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210526102213.png"></p><p><b>package.json</b></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;build&quot;</span>: <span class="string">&quot;webpack&quot;</span>,</span><br><span class="line">        <span class="string">&quot;dev&quot;</span>: <span class="string">&quot;webpack-dev-server&quot;</span></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;dev&quot;</span>: <span class="string">&quot;webpack-dev-server&quot;</span> <span class="comment">//启动本地服务器</span></span><br><span class="line"><span class="string">&quot;dev&quot;</span>: <span class="string">&quot;webpack-dev-server --open&quot;</span> <span class="comment">//直接打开浏览器</span></span><br></pre></td></tr></table></figure><blockquote><p>如果我们没有去配置”scripts”，那么我们直接运行<code>webpack-dev-server</code>是运行全局的，但是我们并没有在全局安装</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210526102449.png"></p><p>在<code>node_modules</code>安装了我们的本地服务器，因此在脚本配置<code>webpack-dev-server</code>，通过<code>npm run dev</code>启动服务器。然后它会在本地找这个服务器，如果没有才去全局找</p><p><b class="red">Warning</b></p><p>这时你是无法启动本地服务器的，如果你的是4.0以上的webpack，那么肯定存在依赖不兼容的问题</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><p><cst>降级处理</cst>：将4.0以上版本的webpack，降级安装3.6.0。但是新版出来了不使用，还要使用旧版本。4.0以下的版本是不需要安装webpack-cli，因此不会和webpack-dev-server出现不兼容的情况</p><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><p><cst>兼容依赖</cst>：webpack-cli 和 webpack-dev-server 安装的版本是不兼容的，因此我们需要安装它们兼容的版本</p><h2 id="报错截图"><a href="#报错截图" class="headerlink" title="报错截图"></a>报错截图</h2><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//error.png"></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//原因是 less-loader安装的版本过高</span><br><span class="line">//解决方案：卸载之前的less-loader,安装less-loader@5.0.0</span><br><span class="line"><span class="attribute">npm</span> uninstall less-loader</span><br><span class="line">npm install less-loader@<span class="number">5</span>.<span class="number">0</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//code.jpg"></p><p><b>版本修改</b></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 在安装之前，我们需要进行卸载操作</span><br><span class="line"><span class="attribute">npm</span> i webpack@<span class="number">4</span> -D</span><br><span class="line">npm i webpack-cli@<span class="number">3</span> -D</span><br><span class="line">npm i webpack-dev-server@<span class="number">3</span> -D</span><br></pre></td></tr></table></figure><p>待安装好时，我们将<code>node_modules</code>文件夹和 <code>package.json</code>文件删掉，通过<code>npm install</code>重新安装以下这些文件夹，在配置好了的情况下，我们再<code>npm run dev</code> 运行以下本地服务器，没想到就ok了</p>]]></content>
      
      
      <categories>
          
          <category> Webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Webpack配置文件分离</title>
      <link href="2021/05/26/webpackconfig/"/>
      <url>2021/05/26/webpackconfig/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安装webpack-merge"><a href="#安装webpack-merge" class="headerlink" title="安装webpack-merge"></a>安装webpack-merge</h2><p>用于对文件进行合并，我们将开发版或产品版，让其与共用的<code>base.config.js</code> 进行合并</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> i webpack-merge</span><br></pre></td></tr></table></figure><div class="page-header">  <h2>webpack.config.js</h2>  <p>    对webpack配置文件进行分离，分为共用的<code>base.config.js</code>，开发版<code>dev.config.js</code>，产品版<code>prod.config.js</code>。看似一个文件分成三个文件，更复杂了些。当开发板和产品板相差很多的时候，我们就很有必要分离它们  </p></div>## base.config.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一个共用的配置文件</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//导入webpack自带插件</span></span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> VueLoaderPlugin = <span class="built_in">require</span>(<span class="string">&#x27;vue-loader/lib/plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;../dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;bundle.js&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [&#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">                use: [<span class="string">&#x27;style-loader&#x27;</span>, <span class="string">&#x27;css-loader&#x27;</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.less$/</span>,</span><br><span class="line">                use: [<span class="string">&#x27;style-loader&#x27;</span>, <span class="string">&#x27;css-loader&#x27;</span>, <span class="string">&#x27;less-loader&#x27;</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.(png|jpg|gif|jpeg)$/</span>,</span><br><span class="line">                use: [&#123;</span><br><span class="line">                    <span class="attr">loader</span>: <span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">                    <span class="attr">options</span>: &#123;</span><br><span class="line">                        <span class="attr">limit</span>: <span class="number">25</span> * <span class="number">1024</span>,</span><br><span class="line">                        <span class="attr">name</span>: <span class="string">&#x27;./img/[name].[hash:8].[ext]&#x27;</span>, <span class="comment">//[option] 用中括号，表示参数，hash:8 保留8位哈希值</span></span><br><span class="line">                    &#125;,</span><br><span class="line"></span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.m?js$/</span>,</span><br><span class="line">                exclude: <span class="regexp">/(node_modules|bower_components)/</span>,</span><br><span class="line">                use: &#123;</span><br><span class="line">                    <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">                    <span class="attr">options</span>: &#123;</span><br><span class="line">                        <span class="attr">presets</span>: [<span class="string">&#x27;es2015&#x27;</span>],</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.vue$/</span>,</span><br><span class="line">                use: &#123;</span><br><span class="line">                    <span class="attr">loader</span>: <span class="string">&#x27;vue-loader&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> VueLoaderPlugin(),</span><br><span class="line">        <span class="keyword">new</span> webpack.BannerPlugin(<span class="string">&#x27;最终版权归Simplelife所有&#x27;</span>),</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;index.html&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">resolve</span>: &#123;</span><br><span class="line">        <span class="attr">extensions</span>: [<span class="string">&#x27;.js&#x27;</span>, <span class="string">&#x27;.css&#x27;</span>, <span class="string">&#x27;.vue&#x27;</span>],</span><br><span class="line">        <span class="attr">alias</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;vue$&#x27;</span>: <span class="string">&#x27;vue/dist/vue.esm.js&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="prod-config-js"><a href="#prod-config-js" class="headerlink" title="prod.config.js"></a>prod.config.js</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//丑化压缩代码，开发时不需要</span></span><br><span class="line"><span class="keyword">const</span> UglifyJsPlugin = <span class="built_in">require</span>(<span class="string">&#x27;uglifyjs-webpack-plugin&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">&#x27;./base.config&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> webpackMerge = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = webpackMerge.merge(baseConfig, &#123;</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> UglifyJsPlugin()</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="dev-config-js"><a href="#dev-config-js" class="headerlink" title="dev.config.js"></a>dev.config.js</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> webpackMerge = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">&#x27;./base.config&#x27;</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = webpackMerge.merge(baseConfig, &#123;</span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">contentBase</span>: <span class="string">&#x27;./dist&#x27;</span>,</span><br><span class="line">        <span class="attr">inline</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;build&quot;</span>: <span class="string">&quot;webpack --config ./build/prod.config.js&quot;</span>,</span><br><span class="line">        <span class="string">&quot;dev&quot;</span>: <span class="string">&quot;webpack-dev-server --open --config ./build/dev.config.js&quot;</span></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>原先是使用<code>webpack.config.js</code>，现在我们打包使用<code>prod.config.js</code>，本地开发使用<code>dev.config.js</code>，</p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>打包文件会自动生成在<code>build/dist</code>文件夹下，因为<code>dist</code>文件是基于配置文件生成的</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210526152538.png"></p><p>我们自己创建的<code>index.html</code>文件是不需要绑定js文件的，当我们打包后，webpack会自动帮我们绑定打包的js文件</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210526152707.png"></p><p>自动生成的<code>index.html</code>如下</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210526152741.png"></p>]]></content>
      
      
      <categories>
          
          <category> Webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack.config.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识plugin</title>
      <link href="2021/05/24/plugin/"/>
      <url>2021/05/24/plugin/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><h3 id="plugin是什么？"><a href="#plugin是什么？" class="headerlink" title="plugin是什么？"></a>plugin是什么？</h3><p>plugin是插件的意思，通常是用于对某个现有的<cst>架构进行扩展</cst>。webpack中插件，就是对webpack现有功能的各种扩展，比如<cst>打包优化，文件压缩</cst>等</p><h3 id="loader-和-plugin区别"><a href="#loader-和-plugin区别" class="headerlink" title="loader 和 plugin区别"></a>loader 和 plugin区别</h3><ul><li>loader 主要用于转换某些类型的模块，它是一个<cst>转换器</cst></li><li>plugin 是插件，它是对webpack本身的扩展，是一个<cst>扩展器</cst></li></ul><h3 id="plugind-的使用过程"><a href="#plugind-的使用过程" class="headerlink" title="plugind 的使用过程"></a>plugind 的使用过程</h3><ul><li>步骤一：通过npm安装需要使用的plugins（某些webpack已经<cst>内置的插件</cst>不需要安装）</li><li>步骤二：在<code>webpack.config.js</code>中plugins中配置插件</li></ul><h2 id="添加版权的Plugin"><a href="#添加版权的Plugin" class="headerlink" title="添加版权的Plugin"></a>添加版权的Plugin</h2><p>使用一个最简单的插件，为打包的文件添加版权声明。插件名字叫<cst>BannerPlugin</cst>，属于webpack自带的插件 </p><p><b>webpack.config.js</b></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入webpack自带插件</span></span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> webpack.BannerPlugin(<span class="string">&#x27;最终版权归Simplelife所有&#x27;</span>)</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210525142718.png"></p><h2 id="打包html的plugin"><a href="#打包html的plugin" class="headerlink" title="打包html的plugin"></a>打包html的plugin</h2><p>在真实开发项目时，发布的dist文件夹，但是dist文件夹中如果没有index.html文件，那么打包的js等文件也就没有意义，因此我们需要通过HtmlWebpackPlugin插件，将index.html文件打包到dist文件夹中</p><h3 id="HtmlWebpackPlugin插件的作用："><a href="#HtmlWebpackPlugin插件的作用：" class="headerlink" title="HtmlWebpackPlugin插件的作用："></a>HtmlWebpackPlugin插件的作用：</h3><ul><li>自动生成index.html文件（可以指定模板来生成）</li><li>将打包好的js文件，自动通过script标签插入到body中</li></ul><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> install html-webpack-plugin --save-dev</span><br></pre></td></tr></table></figure><h3 id="使用插件，配置修改"><a href="#使用插件，配置修改" class="headerlink" title="使用插件，配置修改"></a>使用插件，配置修改</h3><p>修改<code>webpack.config.js</code> 文件中plugins部分内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在plugins添加 new HtmlWebpackPlugin()时，会自动添加这个导入，如果你没有，还请手动导入</span></span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class="line"></span><br><span class="line">plugins: [</span><br><span class="line"><span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line"><span class="attr">template</span>: <span class="string">&#x27;index.html&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>这里的<code>template</code>表示根据什么模板来生成<code>index.html</code>，另外，我们需要删掉之前在<code>output</code>中添加的<code>publicPath</code>属性(好吧我根本没有)，否则会影响插入的script标签中src可能会有问题</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 1. 安装plugins插件</span><br><span class="line">// 2. 配置plugins内容</span><br><span class="line">// 3. 允许<span class="attribute">npm</span> run build</span><br><span class="line">// <span class="number">4</span>. 成功后点开dist文件夹下，会有一个index.html</span><br><span class="line">npm run build</span><br></pre></td></tr></table></figure><h2 id="JS压缩的plugin"><a href="#JS压缩的plugin" class="headerlink" title="JS压缩的plugin"></a>JS压缩的plugin</h2><p>在项目发布之前，我们必然需要对JS等文件进行压缩处理。这里，我们就对打包的js文件进行压缩，我们使用一个第三方的插件<code>uglifyjs-webpack-plugin</code></p><h3 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> install uglifyjs-webpack-plugin --save-dev</span><br></pre></td></tr></table></figure><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p><b>webpack.config.js</b></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> UglifyJsPlugin = <span class="built_in">require</span>(<span class="string">&#x27;uglifyjs-webpack-plugin&#x27;</span>);</span><br><span class="line"></span><br><span class="line">plugins:[</span><br><span class="line"><span class="keyword">new</span> UglifyJsPlugin()</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210525210649.png"></p>]]></content>
      
      
      <categories>
          
          <category> Webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack配置进阶</title>
      <link href="2021/05/23/webpack3/"/>
      <url>2021/05/23/webpack3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="package-json-中定义启动"><a href="#package-json-中定义启动" class="headerlink" title="package.json 中定义启动"></a><code>package.json</code> 中定义启动</h2><p>有时候，我们需要在本地安装webpack服务，来对应项目开发。但是在终端输入的webpack命令都是全局webpack。这是我们通过脚本进入本地webpack</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//package.json 文件</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;mywebpack&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;3.6.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;index.js&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span>: &#123; <span class="comment">//在scripts脚本下面添加build</span></span><br><span class="line">        <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;build&quot;</span>: <span class="string">&quot;webpack&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;license&quot;</span>: <span class="string">&quot;ISC&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;devDependencies&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>终端执行命令：<code>npm run bulid</code> 会自动搜索本地webpack服务，其次全局</p><p>本地webpack路径寻找：<code>node_modules/.bin</code></p><h2 id="webpack添加mode"><a href="#webpack添加mode" class="headerlink" title="webpack添加mode"></a>webpack添加mode</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mode模式：development 开发者模式，便于查看打包文件内容</span></span><br><span class="line"><span class="comment">//          production 产品模式，不便于查看</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">  ……………………………………………………………………</span><br></pre></td></tr></table></figure><div class="page-header">  <h2>Less文件处理</h2>  <p>    webpack工具有很多功能，通过npm安装一些loader，来扩展这些功能。增填打包less、css、img等类型的文件  </p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先在 ./src/css/index.less 创建less文件 </span></span><br><span class="line"><span class="comment">//写一些简单的样式</span></span><br><span class="line">@fontSize:70px;</span><br><span class="line">@fontColor:#<span class="number">000000</span>;</span><br><span class="line"></span><br><span class="line">body&#123;</span><br><span class="line">  font-size: @fontSize;</span><br><span class="line">  color: @fontColor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ./src/index.js</span></span><br><span class="line"><span class="comment">// 导入刚才main.js导出的变量函数等</span></span><br><span class="line"><span class="comment">// import &#123; add, mul, name, age, obj &#125; from &#x27;./main.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> &#123; add, mul, name, age, obj &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./js/main.js&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name + <span class="string">&#x27;的年龄：&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(age);</span><br><span class="line"><span class="built_in">console</span>.log(obj.name + <span class="string">&#x27;的年龄：&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(obj.age);</span><br><span class="line"><span class="built_in">console</span>.log(name + <span class="string">&#x27;和&#x27;</span> + obj.name + <span class="string">&#x27;的年纪相加等于&#x27;</span> + <span class="string">&#x27;=&#x27;</span> + add(age, obj.age));</span><br><span class="line"><span class="built_in">console</span>.log(name + <span class="string">&#x27;和&#x27;</span> + obj.name + <span class="string">&#x27;的年纪相乘等于&#x27;</span> + <span class="string">&#x27;=&#x27;</span> + mul(age, obj.age));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入你需要依赖的css文件</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;./css/index.css&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入依赖的less文件</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;./css/index.css&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// js 输入文字，显示效果</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;hello world!&#x27;</span>)</span><br></pre></td></tr></table></figure><p><cst>webpack.config.js</cst></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;my-first-webpack.bundle.js&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [&#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">                use: [<span class="string">&#x27;style-loader&#x27;</span>, <span class="string">&#x27;css-loader&#x27;</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.less$/</span>,</span><br><span class="line">                use: [&#123; <span class="attr">loader</span>: <span class="string">&#x27;style-loader&#x27;</span>,<span class="attr">option</span>:&#125;,</span><br><span class="line">                      &#123; <span class="attr">loader</span>: <span class="string">&#x27;css-loader&#x27;</span>,<span class="attr">option</span>:&#125;, </span><br><span class="line">                      &#123; <span class="attr">loader</span>: <span class="string">&#x27;less-loader&#x27;</span>,<span class="attr">option</span>:&#125;]</span><br><span class="line">                       <span class="comment">//与上面的方式不同，这种方式可以添加更多的参数</span></span><br><span class="line">                       <span class="comment">//这里用到了less-loader、css-loader、style-loader</span></span><br><span class="line">                       <span class="comment">//从右往左，从下往上解析</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>首先，你需要先安装 <code>less</code> 和 <code>less-loader</code>：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="attribute">npm</span> install less less-loader --save-dev</span><br></pre></td></tr></table></figure><p>配置好文件后，通过命令打包</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="attribute">npm</span> run build</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210523225430.png" alt="运行index.html效果图"></p><p><br><br></p><div class="page-header">  <h2>图片文件的处理</h2>  <p>    通过webpack对图片的打包处理，我们需要提前准备两张背景图，一张24k,另一张64k。我们通过url加载图片，然后需要下载<code>url-loader</code>  </p></div><h3 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h3><p>首先，你需要安装<code>url-loader</code>和 <code>file-loader</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> install url-loader --save-dev</span><br><span class="line"></span><br><span class="line">npm install file-loader --save-dev</span><br></pre></td></tr></table></figure><p><b>index.js</b></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> img <span class="keyword">from</span> <span class="string">&#x27;./image.png&#x27;</span>;</span><br></pre></td></tr></table></figure><p><b>index.css</b></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;../img/tangsan.jpg&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>url-loader</code> 功能类似于 <a href="https://webpack.docschina.org/loaders/file-loader/"><code>file-loader</code></a>, 但是在文件大小（单位为字节）低于指定的限制时，可以返回一个 DataURL。</p><p><b>webpack.config.js</b></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(png|jpg|gif|jpeg)$/</span>, <span class="comment">//jpeg 和 jpg格式没有很多区别，当初的DOS系统不允许4位后缀名</span></span><br><span class="line">         use: [&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 当加载的图片, 小于limit时，会将图片编译成base64字符串形式 不需要单独的文件存储</span></span><br><span class="line">                    <span class="comment">// 当加载的图片，大于limit时，会使用file-loader模块进行加载</span></span><br><span class="line">                    <span class="attr">loader</span>: <span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">                    <span class="attr">options</span>: &#123;</span><br><span class="line">                        <span class="attr">limit</span>: <span class="number">25</span> * <span class="number">1024</span>,</span><br><span class="line">                        <span class="attr">name</span>: <span class="string">&#x27;./img/[name].[hash:8].[ext]&#x27;</span>, <span class="comment">//[option] 用中括号，表示参数，   //hash:8 保留8位哈希值</span></span><br><span class="line">                        <span class="comment">// [ext] 后缀名</span></span><br><span class="line">                        <span class="comment">// 打包文件自动生成在dist，自动引用dist下文件</span></span><br><span class="line">                        <span class="comment">// 利用这种方式规范命名</span></span><br><span class="line">                    &#125;,</span><br><span class="line"></span><br><span class="line">                &#125;]</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="limit"><a href="#limit" class="headerlink" title="limit"></a><code>limit</code></h3><p>类型: <code>Boolean|Number|String</code> 默认值: <code>true</code></p><p>该值可以通过 loader 的 options 参数来指定，默认为 <code>undefined</code>。</p><h3 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a><code>Boolean</code></h3><p>开启/关闭将文件转换为 base64。</p><br><div class="page-header">  <h2>ES6语法处理</h2>  <p>    将js文件的ES6语法转换成ES5，因为有些浏览器可能不支持ES6语法。在处理ES6语法时，我们需要学习新的,babel-loader  </p></div><h3 id="快速开始-1"><a href="#快速开始-1" class="headerlink" title="快速开始"></a><a href="https://webpack.docschina.org/loaders/babel-loader/#install">快速开始</a></h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> install --save-dev babel-loader@<span class="number">7</span> babel-core babel-preset-es2015</span><br></pre></td></tr></table></figure><p><b>webpack.config.js</b></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">  <span class="attr">rules</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">test</span>: <span class="regexp">/\.m?js$/</span>,</span><br><span class="line">      <span class="comment">// exclude：表示哪些文件不需要去转换</span></span><br><span class="line">      exclude: <span class="regexp">/(node_modules|bower_components)/</span>,</span><br><span class="line">      use: &#123;</span><br><span class="line">        <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: &#123;</span><br><span class="line">          <span class="attr">presets</span>: [<span class="string">&#x27;es2015&#x27;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 添加mode类型，安装命令 || 配置文件，执行打包命令，查看打包后的文件语法，已经是es5语法了</span></span><br></pre></td></tr></table></figure><h2 id="webpack配置vue"><a href="#webpack配置vue" class="headerlink" title="webpack配置vue"></a>webpack配置vue</h2><h3 id="快速开始-2"><a href="#快速开始-2" class="headerlink" title="快速开始"></a>快速开始</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 安装vue, 不使用 --save-dev,这表示开发者依赖，但是vue打包后仍然依赖</span><br><span class="line"><span class="attribute">npm</span> install vue --save</span><br></pre></td></tr></table></figure><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p><b>index.js</b></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用vue实例</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;hello webpack&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><b>index.html</b></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">       &#123;&#123;message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><cst class="red">Warning<cst>：打开控制台检测错误</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210524103725.png"></p><ul><li><cst>runtime-only</cst>：代码中，不可以有任何的template，对于vue实例用div绑定id的也是template</li><li><cst>runtime-compiler</cst>：与它相反，可以有。因为含有compiler，可以编译template</li></ul><h3 id="如何指定-runtime-compiler"><a href="#如何指定-runtime-compiler" class="headerlink" title="如何指定 runtime-compiler"></a>如何指定 <code>runtime-compiler</code></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resolve: &#123;</span><br><span class="line">   <span class="attr">alias</span>: &#123;</span><br><span class="line">       <span class="string">&#x27;vue$&#x27;</span>: <span class="string">&#x27;vue/dist/vue.esm.js&#x27;</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210524104227.png"></p><br><h2 id="vue中template和el的关系"><a href="#vue中template和el的关系" class="headerlink" title="vue中template和el的关系"></a>vue中template和el的关系</h2><h3 id="正常运行之后，我们来考虑另外一个问题："><a href="#正常运行之后，我们来考虑另外一个问题：" class="headerlink" title="正常运行之后，我们来考虑另外一个问题："></a>正常运行之后，我们来考虑另外一个问题：</h3><ul><li>如果我们希望将data中的数据显示在界面中，就必须是修改index.html</li><li>如果我们后自定义了组件，也必须修改index.html来使用组件</li><li>但是html模板在之后的开发中，我并不希望手动的来频繁修改，如何做到？</li></ul><h3 id="定义template属性："><a href="#定义template属性：" class="headerlink" title="定义template属性："></a>定义template属性：</h3><ul><li>在前面的Vue实例中，我们定义了el属性，用于和index.html中的#app进行绑定，让Vue实例之后可以管理它其中的内容</li><li>这里，我们可以将div元素中的内容删掉，只保留一个基本的id为div 的元素</li><li>但是如果我依然希望在其中显示的内容，如何操作呢？</li><li>我们可以再定义一个template属性，代码如下</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// const app = new Vue(&#123;&#125;) 可以省略前面如下面所示</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;div&gt;</span></span><br><span class="line"><span class="string">    &#123;&#123;message&#125;&#125;-&#123;&#123;test&#125;&#125;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;hello webpack&#x27;</span>,</span><br><span class="line">        <span class="attr">test</span>: <span class="string">&#x27;不更改基本模板&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>总结：当template和el同时出现时，template会替换el</p></blockquote><h3 id="将template代码移出vue实例"><a href="#将template代码移出vue实例" class="headerlink" title="将template代码移出vue实例"></a>将template代码移出vue实例</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;div&gt;</span></span><br><span class="line"><span class="string">    &#123;&#123;message&#125;&#125;-&#123;&#123;test&#125;&#125;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span>,</span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&#x27;hello webpack&#x27;</span>,</span><br><span class="line">            <span class="attr">test</span>: <span class="string">&#x27;不更改基本模板&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;App/&gt;`</span>,<span class="comment">//使用子组件</span></span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">components</span>: &#123;</span><br><span class="line">        App  <span class="comment">//注册子组件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="一-使用-js-文件来存放子组件的模板"><a href="#一-使用-js-文件来存放子组件的模板" class="headerlink" title="(一)使用 js 文件来存放子组件的模板"></a>(一)使用 js 文件来存放子组件的模板</h3><p><b>app.js</b></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;div&gt;</span></span><br><span class="line"><span class="string">    &#123;&#123;message&#125;&#125;-&#123;&#123;test&#125;&#125;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span>,</span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&#x27;hello webpack&#x27;</span>,</span><br><span class="line">            <span class="attr">test</span>: <span class="string">&#x27;不更改基本模板&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./vue/app.js&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="二-使用-vue-文件存放子组件的模板"><a href="#二-使用-vue-文件存放子组件的模板" class="headerlink" title="(二)使用 .vue 文件存放子组件的模板"></a>(二)使用 .vue 文件存放子组件的模板</h3><p><b>App.js</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// 模板</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">  &lt;p class=&quot;app&quot;&gt;  &#123;&#123;message&#125;&#125;-&#123;&#123;test&#125;&#125; &lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">// 写模板data、mothods等</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default&#123;</span><br><span class="line">    name: &quot;App&quot;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            message: &#x27;hello webpack&#x27;,</span><br><span class="line">            test: &#x27;不更改基本模板&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">// 写style样式</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">  .app&#123;</span><br><span class="line">    color: red;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./vue/App.vue&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="快速开始-3"><a href="#快速开始-3" class="headerlink" title="快速开始"></a>快速开始</h4><p>使用vue文件，需要安装新的loader来加载，vue-template-compiler 模板编译</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> install --save-dev vue-loader vue-template-compiler</span><br></pre></td></tr></table></figure><p><b>webpack.config.js</b></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 省略了一些其他之前的代码，如果需要运行，需要补齐</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line"><span class="attr">module</span>: &#123;</span><br><span class="line"><span class="attr">rules</span>: [&#123;</span><br><span class="line"><span class="attr">test</span>: <span class="regexp">/\.vue$/</span>,</span><br><span class="line">use: &#123;</span><br><span class="line">      <span class="attr">loader</span>: <span class="string">&#x27;vue-loader&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b>运行</b></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> run build</span><br></pre></td></tr></table></figure><p><cst class="red">Warning</cst></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210524144747.png"></p><blockquote><p>安装的vue-loader有很多版本，但是从14.0版本开始，vue-loader就需要plugin插件，但是我们，没有</p></blockquote><p><b>package.json</b><br><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210524150912.png"></p><p>更改版本：”13.0.0”，然后在终端输入 npm install，重新安装一下</p><blockquote><p>根据测验，我们直接改版本数据，是不能安装到13.0.0版本的，返回在npm install 时会损坏vue-loader插件，导致无法识别vue文件</p></blockquote><h4 id="解决方案一"><a href="#解决方案一" class="headerlink" title="解决方案一"></a>解决方案一</h4><p>先卸载之前的版本，然后通过添加@+版本号，安装早期版本</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> uninstall vue-loader</span><br><span class="line">npm install vue-leader@<span class="number">14</span>.<span class="number">2</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure><p>这时我们在进行打包操作，能够正常运行了</p><h4 id="解决方案二"><a href="#解决方案二" class="headerlink" title="解决方案二"></a>解决方案二</h4><p>直接按照报错要求，添加依赖的plugin插件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> VueLoaderPlugin = <span class="built_in">require</span>(<span class="string">&#x27;vue-loader/lib/plugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> VueLoaderPlugin()</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210524152537.png"></p><h4 id="注册子组件"><a href="#注册子组件" class="headerlink" title="注册子组件"></a>注册子组件</h4><p><b>Cpn.vue</b>：这里的命名并不是使用模板的名字，是导入的路径名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;&quot;&gt;我是子组件&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;&quot;&gt;我是子组件&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;Cpn&#x27;,</span><br><span class="line">  components: &#123;&#125;,</span><br><span class="line">  props: &#123;&#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;&#125;,</span><br><span class="line">  computed: &#123;&#125;,</span><br><span class="line">  methods: &#123;&#125;,</span><br><span class="line">  created() &#123;&#125;,</span><br><span class="line">  mounted() &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><b>App.js</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">  &lt;p class=&quot;app&quot;&gt;  &#123;&#123;message&#125;&#125;-&#123;&#123;test&#125;&#125; &lt;/p&gt;</span><br><span class="line">  &lt;cpn/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  //导入Cpn.vue，命名cpn</span><br><span class="line">  import cpn from &#x27;./Cpn.vue&#x27;</span><br><span class="line"></span><br><span class="line">  export default&#123;</span><br><span class="line">    name: &quot;App&quot;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            message: &#x27;hello webpack&#x27;,</span><br><span class="line">            test: &#x27;不更改基本模板&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components:&#123;</span><br><span class="line">      cpn:cpn // 同样的名字可以写成如下</span><br><span class="line">      //cpn</span><br><span class="line">      //模板名 : 导入名import</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">  .app&#123;</span><br><span class="line">    color: red;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><blockquote><p>这样就可以利用组件化开发，配合webpack操作</p></blockquote><h3 id="路径文件省略后缀名"><a href="#路径文件省略后缀名" class="headerlink" title="路径文件省略后缀名"></a>路径文件省略后缀名</h3><p><b>webpack.config.js</b></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210524170327.png"></p><p>这样配置webpack，可以省略路径后缀名</p>]]></content>
      
      
      <categories>
          
          <category> Webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack.config.js </tag>
            
            <tag> package.json </tag>
            
            <tag> loader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Github图床</title>
      <link href="2021/05/22/howtopig/"/>
      <url>2021/05/22/howtopig/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header">  <h2>新建Github仓库 获取token</h2>  <p>    如果你不知道如何去创建Github仓库，这里有一个教程链接直达    <a class="btn-beautify button--animated block right blue larger" href="/2021/05/16/Hexo1/"   title="创建Github仓库"><i class="far fa-hand-point-right"></i><span>创建Github仓库</span></a>  </p></div><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210522221243.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210522221815.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210522221912.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210522222115.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210522222257.png"></p><p><cst>滑到最下面，点击Generate token</cst></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210522222627.png"></p><div class="page-header">  <h2>    配置PicGo图床工具  </h2>  <p>    如果你还没下载图床工具，给你一个链接直达吧，省的你再去翻上一个页面啦  </p>  <a class="btn-beautify button--animated block blue right larger" href="/2021/05/19/tooltip/"   title="PicGo图床工具"><i class="far fa-hand-point-right"></i><span>PicGo图床工具</span></a></div><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210522223457.png"></p><p><cst>username</cst> 是创建github的账号用户名</p><p><cst>设定分支名</cst>：我的默认是main，你也有可能是master</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210522223747.png"></p><p><cst class="red">设定自定义域名：这是最重要的，我们会使用一个免费CDN加速访问，让你的照片访问很快</cst></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main/</span><br><span class="line"></span><br><span class="line">https://cdn.jsdelivr.net/gh/username/仓库名@分支/</span><br></pre></td></tr></table></figure><br><blockquote><p>以上就是搭建图床的全部啦，如有错误，请留言改正</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Repository </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> Tooltip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习webpack工具</title>
      <link href="2021/05/22/webpack1/"/>
      <url>2021/05/22/webpack1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>从v4.00开始，webpack可以不用再引入一个配置文件来打包项目，然而，它仍然有着高度可配置性，可以很好满足你的需求</p><p><cst>打包命令<code>npx webpack</code> 前提配置好<code>webpack.config.js</code> 文件，否则默认打包方式</cst></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>文件和文件夹解析：</p><ul><li>dist 文件夹 ：用于存放之后打包的文件，也可不创建，在打包时可以生成</li><li>src 文件夹：用于存放我们写的源文件</li><li><code>package.json</code>: 通过<code>npm init</code> 初始化生成，npm包管理文件</li></ul><h2 id="入口"><a href="#入口" class="headerlink" title="入口"></a>入口</h2><p>入口起点指示 webpack 应该使用哪个模块，来作为构建其内部依赖图的开始。进入入口起点后，webpack会找出有哪些模块和库是入口起点（直接和间接）依赖的。</p><p>默认值是<code>./src/index.js</code>，但是你可以通过<cst>webpack configuration</cst>中配置<code>entry</code>属性<br><br><strong>webpack.config.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&#x27;./path/to/my/entry/file.js&#x27;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p><strong>output</strong> 属性告诉 webpack 在哪里输出它所创建的 <em>bundle</em>，以及如何命名这些文件。主要输出文件的默认值是 <code>./dist/main.js</code>，其他生成文件默认放置在 <code>./dist</code> 文件夹中。</p><p>你可以通过在配置中指定一个 <code>output</code> 字段，来配置这些处理过程：</p><p><strong>webpack.config.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>); <span class="comment">//获取路径</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&#x27;./path/to/my/entry/file.js&#x27;</span>,  <span class="comment">//入口</span></span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;dist&#x27;</span>), <span class="comment">//path是绝对路径，通过path获取</span></span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;my-first-webpack.bundle.js&#x27;</span>, <span class="comment">//打包bundle.js的命名</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>在上面的示例中，我们通过 <code>output.filename</code> 和 <code>output.path</code> 属性，来告诉 webpack bundle 的名称，以及我们想要 bundle 生成到哪里。可能你想要了解在代码最上面导入的 path 模块是什么，它是一个 <a href="https://nodejs.org/api/modules.html">Node.js 核心模块</a>，用于操作文件路径。</p></blockquote><p>配置好简单的webpack文件，试着打包一下我们的项目</p><div id="projectpackbao">  <p class="text-right">    打包项目示例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ./src/main.js</span></span><br><span class="line"><span class="comment">// main.js写了一些变量、函数、对象，进行ES6导出操作</span></span><br><span class="line"><span class="keyword">let</span> name = <span class="string">&#x27;小明&#x27;</span></span><br><span class="line"><span class="keyword">let</span> age  = <span class="number">18</span></span><br><span class="line"><span class="keyword">let</span> obj =&#123;</span><br><span class="line">   <span class="attr">name</span>: <span class="string">&#x27;小华&#x27;</span>,</span><br><span class="line">   <span class="attr">age</span>: <span class="string">&#x27;19&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">num1,num2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mul</span>(<span class="params">num1,num2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> num1 * num2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span>&#123;</span><br><span class="line">add,</span><br><span class="line">mul,</span><br><span class="line">  name,</span><br><span class="line">  age,</span><br><span class="line">  obj</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ./src/index.js</span></span><br><span class="line"><span class="comment">// 导入刚才main.js导出的变量函数等</span></span><br><span class="line"><span class="keyword">import</span> &#123;add,mul,name,age,obj&#125; <span class="keyword">from</span> <span class="string">&#x27;./main.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name + <span class="string">&#x27;的年龄：&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(age);</span><br><span class="line"><span class="built_in">console</span>.log(obj.name + <span class="string">&#x27;的年龄：&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(obj.age);</span><br><span class="line"><span class="built_in">console</span>.log(name + <span class="string">&#x27;和&#x27;</span> + obj.name + <span class="string">&#x27;的年纪相加等于&#x27;</span> + <span class="string">&#x27;=&#x27;</span> + add(age, obj.age));</span><br><span class="line"><span class="built_in">console</span>.log(name + <span class="string">&#x27;和&#x27;</span> + obj.name + <span class="string">&#x27;的年纪相乘等于&#x27;</span> + <span class="string">&#x27;=&#x27;</span> + mul(age, obj.age));</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置文件 webpack.config.js，</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// _dirname: 是node里面的webpack.config.js的绝对路径, 然后加一个dist文件</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;my-first-webpack.bundle.js&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--创建一个index.html文件引用打包的js--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;dist/my-first-webpack.bundle.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><cst>打包命令<code>npx webpack</code> 前提配置好<code>webpack.config.js</code> 文件，否则默认打包方式</cst></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210522165104.png"></p></div><h2 id="loader"><a href="#loader" class="headerlink" title="loader"></a><a href="https://webpack.docschina.org/loaders/#styling">loader</a></h2><p>webpack 只能理解 JavaScript 和 JSON 文件，这是 webpack 开箱可用的自带能力。<strong>loader</strong> 让 webpack 能够去处理其他类型的文件，并将它们转换为有效 <a href="https://webpack.docschina.org/concepts/modules">模块</a>，以供应用程序使用，以及被添加到依赖图中。</p><blockquote><p>注意，loader 能够 <code>import</code> 导入任何类型的模块（例如 <code>.css</code> 文件），这是 webpack 特有的功能，其他打包程序或任务执行器的可能并不支持。我们认为这种语言扩展是很有必要的，因为这可以使开发人员创建出更准确的依赖关系图。</p></blockquote><p>在更高层面，在 webpack 的配置中，<strong>loader</strong> 有两个属性：</p><ol><li><code>test</code> 属性，识别出哪些文件会被转换。<cst>使用正则表达式匹配后缀名文件</cst></li><li><code>use</code> 属性，定义出在进行转换时，应该使用哪个 loader。</li></ol><p><strong>webpack.config.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;my-first-webpack.bundle.js&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [&#123; <span class="attr">test</span>: <span class="regexp">/\.txt$/</span>, use: <span class="string">&#x27;raw-loader&#x27;</span> &#125;],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//使用多个loader时：use: [&#x27;style-loader,&#x27;css.loader&#x27;]</span></span><br><span class="line">  <span class="comment">//逐渐webpack解析是从右到左的，先加载css.loader,再加载style-loader</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>以上配置中，对一个单独的 module 对象定义了 <code>rules</code> 属性，里面包含两个必须属性：<code>test</code> 和 <code>use</code>。这告诉 webpack 编译器(compiler) 如下信息： </p><p><em>“嘿，webpack 编译器，当你碰到「在 <code>require()</code>/<code>import</code> 语句中被解析为 ‘.txt’ 的路径」时，在你对它打包之前，先 <strong>use(使用)</strong> <code>raw-loader</code> 转换一下。”</em></p><div class="loadercss">  <div class="text-right">     演示一下  </div><p><cst>请一定要输入正确的配置名，否则报错你都不知道为什么</cst></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ./src/index.js</span></span><br><span class="line"><span class="comment">// 导入刚才main.js导出的变量函数等</span></span><br><span class="line"><span class="comment">// import &#123; add, mul, name, age, obj &#125; from &#x27;./main.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> &#123; add, mul, name, age, obj &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./main.js&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name + <span class="string">&#x27;的年龄：&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(age);</span><br><span class="line"><span class="built_in">console</span>.log(obj.name + <span class="string">&#x27;的年龄：&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(obj.age);</span><br><span class="line"><span class="built_in">console</span>.log(name + <span class="string">&#x27;和&#x27;</span> + obj.name + <span class="string">&#x27;的年纪相加等于&#x27;</span> + <span class="string">&#x27;=&#x27;</span> + add(age, obj.age));</span><br><span class="line"><span class="built_in">console</span>.log(name + <span class="string">&#x27;和&#x27;</span> + obj.name + <span class="string">&#x27;的年纪相乘等于&#x27;</span> + <span class="string">&#x27;=&#x27;</span> + mul(age, obj.age));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 我们定义了一个css文件，index.css</span></span><br><span class="line"><span class="comment">// 来让index.js文件 依赖index.css文件</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;./css/index.css&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;my-first-webpack.bundle.js&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [&#123;</span><br><span class="line">            <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">            use: [<span class="string">&#x27;style-loader&#x27;</span>, <span class="string">&#x27;css-loader&#x27;</span>]</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>我使用了两个loader，因此我们需要允许之前安装一下loader</p><p><code>npm install --save-dev style-loader</code> </p><p><code>npm install --save-dev css-loader</code></p><p>通过这个两个命令安装<code>style-loader</code> 和 <code>css-loader</code> ，前者负责解析css文件，后者负责打包依赖文件</p><p>使用命令进行打包：<code>npm run build</code> 启动本地webpack</p><br></div><p><label class="red"><strong>Warning</strong></label></p><blockquote><p>重要的是要记住，在 webpack 配置中定义 rules 时，要定义在 <code>module.rules</code> 而不是 <code>rules</code> 中。为了使你便于理解，如果没有按照正确方式去做，webpack 会给出警告。</p></blockquote><blockquote><p>请记住，使用正则表达式匹配文件时，你不要为它添加引号。也就是说，<code>/\.txt$/</code> 与 <code>&#39;/\.txt$/&#39;</code> 或 <code>&quot;/\.txt$/&quot;</code> 不一样。前者指示 webpack 匹配任何以 .txt 结尾的文件，后者指示 webpack 匹配具有绝对路径 ‘.txt’ 的单个文件; 这可能不符合你的意图。</p></blockquote><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>loader 用于转换某些类型的模块，而插件则可以用于执行范围更广的任务。包括：打包优化，资源管理，注入环境变量。</p><p>想要使用一个插件，你只需要 <code>require()</code> 它，然后把它添加到 <code>plugins</code> 数组中。多数插件可以通过选项(option)自定义。你也可以在一个配置文件中因为不同目的而多次使用同一个插件，这时需要通过使用 <code>new</code> 操作符来创建一个插件实例。</p><p><strong>webpack.config.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>); <span class="comment">// 通过 npm 安装</span></span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>); <span class="comment">// 用于访问内置插件</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [&#123; <span class="attr">test</span>: <span class="regexp">/\.txt$/</span>, use: <span class="string">&#x27;raw-loader&#x27;</span> &#125;],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="keyword">new</span> HtmlWebpackPlugin(&#123; <span class="attr">template</span>: <span class="string">&#x27;./src/index.html&#x27;</span> &#125;)],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在上面的示例中，<code>html-webpack-plugin</code> 为应用程序生成一个 HTML 文件，并自动注入所有生成的 bundle。</p><p><em>在 webpack 配置中使用插件是简单直接的。然而，也有很多值得我们进一步探讨的用例。<a href="https://webpack.docschina.org/concepts/plugins">查看这里了解更多</a>。</em></p><h2 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h2><p>通过选择 <code>development</code>, <code>production</code> 或 <code>none</code> 之中的一个，来设置 <code>mode</code> 参数，你可以启用 webpack 内置在相应环境下的优化。其默认值为 <code>production</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// development 开发者模式，打包后可以清晰看到webpack结构</span></span><br><span class="line"><span class="comment">// production  产品模式，无法看清webpack结构</span></span><br><span class="line"><span class="comment">// 当你需要看webpack打包的内容，请选择开发者模式</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;production&#x27;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>想要了解更多，请查阅 <a href="https://webpack.docschina.org/configuration/mode">mode 配置</a>，这里有具体每个值相应的优化行为。</p><h2 id="浏览器兼容性"><a href="#浏览器兼容性" class="headerlink" title="浏览器兼容性"></a>浏览器兼容性</h2><p>webpack 支持所有符合 <a href="https://kangax.github.io/compat-table/es5/">ES5 标准</a> 的浏览器（不支持 IE8 及以下版本）。webpack 的 <code>import()</code> 和 <code>require.ensure()</code> 需要 <code>Promise</code>。如果你想要支持旧版本浏览器，在使用这些表达式之前，还需要 <a href="https://webpack.docschina.org/guides/shimming/">提前加载 polyfill</a>。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>webpack 5 运行于 Node.js v10.13.0+ 的版本。</p><br> <div class="text-right">   <a class="btn-beautify button--animated outline blue larger" href="/2021/05/21/webpack/"   title="前端模块化 || 安装webpack"><i class="far fa-hand-point-left"></i><span>前端模块化 || 安装webpack</span></a>   <a class="btn-beautify button--animated inline outline blue larger" href="/2021/05/23/webpack3"   title="webpack.config.js || package.json"><i class="far fa-hand-point-right"></i><span>webpack.config.js || package.json</span></a>   </div>   ]]></content>
      
      
      <categories>
          
          <category> Webpack </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue数组应用</title>
      <link href="2021/05/21/vuevfor/"/>
      <url>2021/05/21/vuevfor/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><blockquote><p>Vue.js 允许你自定义过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：<strong>双花括号插值和 <code>v-bind</code> 表达式</strong>。过滤器应该被添加在 JavaScript 表达式的尾部，由“管道”符号指示：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在双花括号中 --&gt;</span></span><br><span class="line">&#123;&#123; message | capitalize &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 在 `v-bind` 中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;rawId | formatId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--通过filters写过滤方法--&gt;</span></span><br><span class="line">filters:&#123;</span><br><span class="line">capitalize(message)&#123;</span><br><span class="line">return message;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">&lt;!--写函数来修饰message返回--&gt;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>定义全局过滤器</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vue.filter(<span class="string">&#x27;capitalize&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!value) <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  value = value.toString()</span><br><span class="line">  <span class="keyword">return</span> value.charAt(<span class="number">0</span>).toUpperCase() + value.slice(<span class="number">1</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>PS：当全局过滤器和局部过滤器重名时，会采用局部过滤器。</p><p>过滤器可以串联</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; message | filterA | filterB &#125;&#125;</span><br></pre></td></tr></table></figure><p>过滤器是JavaScript函数，因此可以接收参数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; message | filterA(&#x27;arg1&#x27;, arg2) &#125;&#125;</span><br><span class="line"><span class="comment">&lt;!--这里，filterA 被定义为接收三个参数的过滤器函数。其中 message 的值作为第一个参数，普通字符串 &#x27;arg1&#x27; 作为第二个参数，表达式 arg2 的值作为第三个参数。--&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="JS高阶函数"><a href="#JS高阶函数" class="headerlink" title="JS高阶函数"></a>JS高阶函数</h2><ol><li><code>filtet</code>函数</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--filter中的回调函数有一个要求：必须返回一个boolean值--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--true：当返回true时，函数内部会自动将这次回调的n加入到新的数组中--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--false:当返回false时，函数内部会过滤掉这次的n--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> nums = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">111</span>,<span class="number">222</span>,<span class="number">444</span>,<span class="number">50</span>,<span class="number">60</span>]</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> newnums = nums.filter(<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">return</span> n&lt;<span class="number">100</span>;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript">  <span class="comment">//返回是小于100的元素</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><code>map</code>函数</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> nums = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">111</span>,<span class="number">222</span>,<span class="number">444</span>,<span class="number">50</span>,<span class="number">60</span>]</span><br><span class="line"><span class="keyword">let</span> newnums = nums.map(<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n*<span class="number">2</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//数组有几个元素执行几次，返回的元素，现在返回的两倍的值</span></span><br></pre></td></tr></table></figure><ol start="3"><li><code>reduce</code>函数</li></ol><ul><li>作用：汇总元素</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> total = newNums.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">preValue,n</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preValue + n</span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数有两个参数值 preValue和n</span></span><br><span class="line"><span class="comment">//元素过程···</span></span><br><span class="line"><span class="comment">//第一次 prevalue n1</span></span><br><span class="line"><span class="comment">//第二次 prevalue+n1 n2</span></span><br><span class="line"><span class="comment">//第三次 prevalue+n1+n2 n3</span></span><br><span class="line"><span class="comment">//第四次 prevalue+n1+n2+n3 n4</span></span><br><span class="line"><span class="comment">//假如只有4个元素，最后返回prevalue+n1+n2+n3+n4</span></span><br></pre></td></tr></table></figure><hr><h2 id="检测数据更新，响应式方法"><a href="#检测数据更新，响应式方法" class="headerlink" title="检测数据更新，响应式方法"></a>检测数据更新，响应式方法</h2><ol><li><code>push</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">push(<span class="string">&#x27;F&#x27;</span>);<span class="comment">//在数组尾部添加新元素&#x27;F&#x27;，并同时更新网页界面可添加多个元素</span></span><br><span class="line">push(<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;G&#x27;</span>,<span class="string">&#x27;E&#x27;</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li><code>pop</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pop();<span class="comment">//删掉数组最后一个元素</span></span><br></pre></td></tr></table></figure><ol start="3"><li><code>shift</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shift();<span class="comment">//删掉数组第一元素，与pop方法相反</span></span><br></pre></td></tr></table></figure><ol start="4"><li><code>unshift</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">unshift(<span class="string">&#x27;F&#x27;</span>);<span class="comment">//在数组最前面添加新元素&#x27;F&#x27;</span></span><br><span class="line">可添加多个元素</span><br><span class="line">unshift(<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;G&#x27;</span>,<span class="string">&#x27;E&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="5"><li><code>splice</code></li></ol><blockquote><p>作用：删除元素/插入元素/替换元素<br>删除元素：第一个参数开始后的位置，第二个参数删除的个数，<br>         没有第二个参数，表示某位置后面元素全部删掉<br>         格式：splice(2)/splice(2,2);</p><p>替换元素：splice(start,num,’new1’,’new2’,’new…’);<br>         num为替换元素的个数，后面的元素就改成需要替换的元素<br>         splice(2,3,’a’,’b’,’c’);第二个元素后面替换三个元素<br>         原理：是先将元素删掉，然后再添加元素</p><p>插入元素：splice(start,0,’new1’,’new2’,’new…’);<br>         num改为零了，表示不删掉元素，后面直接追加新元素<br>         strat是值意思都是一样的</p></blockquote><ol start="6"><li><code>reverse</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作用：反转数组</span><br><span class="line">reserve();</span><br><span class="line">[<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>] ==&gt; [<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;1&#x27;</span>]</span><br></pre></td></tr></table></figure><ol start="7"><li><code>sort</code></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--冒泡排序方法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">sortNumber</span>(<span class="params">a,b</span>)</span></span></span><br><span class="line"><span class="function"><span class="javascript"></span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">return</span> a - b</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">  arr[<span class="number">0</span>] = <span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="javascript">  arr[<span class="number">1</span>] = <span class="string">&quot;5&quot;</span></span></span><br><span class="line"><span class="javascript">  arr[<span class="number">2</span>] = <span class="string">&quot;40&quot;</span></span></span><br><span class="line"><span class="javascript">  arr[<span class="number">3</span>] = <span class="string">&quot;25&quot;</span></span></span><br><span class="line"><span class="javascript">  arr[<span class="number">4</span>] = <span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="javascript">  arr[<span class="number">5</span>] = <span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(arr + <span class="string">&quot;&lt;br /&gt;&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(arr.sort(sortNumber))</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue基础 </tag>
            
            <tag> Vue </tag>
            
            <tag> vue数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础指令</title>
      <link href="2021/05/21/vuezhiling/"/>
      <url>2021/05/21/vuezhiling/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="vue使用Mustache语法"><a href="#vue使用Mustache语法" class="headerlink" title="vue使用Mustache语法"></a>vue使用Mustache语法</h2><p>通过Mustache语法，让vue实例的数据data，显示在页面当中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h2><p>组件绑定<code>v-once</code>，该组件只会解析一次mustache语法，之后改变data数据，也不会影响界面数据</p><p>只渲染元素和组件<strong>一次</strong>。随后的重新渲染，元素/组件及其所有的子节点将被视为静态内容并跳过。这可以用于优化更新性能。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-once</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  /*</span><br><span class="line">  当控制台改变app.message的值，但是html中message值不改变</span><br><span class="line">  因为使用了v-once</span><br><span class="line">  */</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h2><p>在vue实例中的data直接使用HTML标签，是无法通过mustache语法解析出来，但是给组件绑定<code>v-html</code>让该组件解析html标签</p><blockquote><p>在网站上动态渲染任意 HTML 是非常危险的，因为容易导致 <a href="https://en.wikipedia.org/wiki/Cross-site_scripting">XSS 攻击</a>。只在可信内容上使用 <code>v-html</code>，<strong>永不</strong>用在用户提交的内容上。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-html</span>=<span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  /*</span><br><span class="line">  当控制台改变app.message的值，但是html中message值不改变</span><br><span class="line">  因为使用了v-once</span><br><span class="line">  */</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">data</span>:[</span></span><br><span class="line"><span class="javascript">          message:<span class="string">&#x27;&lt;a href=&quot;https://www.baidu.com&quot;&gt;百度一下&lt;/a&gt;&#x27;</span></span></span><br><span class="line"><span class="javascript">      ]</span></span><br><span class="line"><span class="javascript">  &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h2><p>不需要使用mustache语法显示数据，直接通过<code>v-text=&quot;message&quot;</code>绑定数据。缺点明显，不灵活</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 等价于 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-pre"><a href="#v-pre" class="headerlink" title="v-pre"></a>v-pre</h2><p>原封不动的解析标签内容，不解析mustache语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-pre</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span> <span class="comment">&lt;!--结果： &#123;&#123;message&#125;&#125;--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-cloak"><a href="#v-cloak" class="headerlink" title="v-cloak"></a>v-cloak</h2><p>当vue未解析的时候，htmlDOM提前解析了，展现的内容对用户 不友好，给组件添加v-bloak，当没有解析的时候，不展现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-cloak</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 如果解析时，先解析的是div标签，而不是vue实例，那么展现的结果就是 &#123;&#123;message&#125;&#125;</span></span><br><span class="line"><span class="comment">这样的效果，对用户体验不好 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-cloak</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 绑定v-cloak时，在没有解析vue实例之前，该标签不会展现内容 </span></span><br><span class="line"><span class="comment">避免让用户看到了 &#123;&#123;message&#125;&#125; </span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[v-cloak]</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h2><p>根据表达式的真假值，切换元素的 <code>display</code> CSS property。</p><p>当条件变化时该指令触发过渡效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-show</span>=<span class="string">&quot;ok&quot;</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h2><ul><li><p><strong>缩写</strong>：<code>@</code></p></li><li><p><strong>预期</strong>：<code>Function | Inline Statement | Object</code></p></li><li><p><strong>参数</strong>：<code>event</code></p></li><li><p><strong>修饰符</strong>：</p><ul><li><code>.stop</code> - 调用 <code>event.stopPropagation()</code>。</li><li><code>.prevent</code> - 调用 <code>event.preventDefault()</code>。</li><li><code>.capture</code> - 添加事件侦听器时使用 capture 模式。</li><li><code>.self</code> - 只当事件是从侦听器绑定的元素本身触发时才触发回调。</li><li><code>.&#123;keyAlias&#125;</code> - 仅当事件是从特定键触发时才触发回调。</li><li><code>.once</code> - 只触发一次回调。</li><li><code>.left</code> - 只当点击鼠标左键时触发。</li><li><code>.right</code> - 只当点击鼠标右键时触发。</li><li><code>.middle</code> - 只当点击鼠标中键时触发。</li><li><code>.passive</code> - <code>&#123; passive: true &#125;</code> 模式添加侦听器</li></ul></li><li><p><strong>用法</strong>：</p><p>绑定事件监听器。事件类型由参数指定。表达式可以是一个方法的名字或一个内联语句，如果没有修饰符也可以省略。</p><p>用在普通元素上时，只能监听<a href="https://developer.mozilla.org/en-US/docs/Web/Events">原生 DOM 事件</a>。用在自定义元素组件上时，也可以监听子组件触发的<strong>自定义事件</strong>。</p><p>监听原生 DOM 事件时，方法以事件为唯一的参数。如果使用内联语句，语句可以访问一个 <code>$event</code> property：<code>v-on:click=&quot;handle(&#39;ok&#39;, $event)&quot;</code>。</p><p><code>v-on</code> 同样支持不带参数绑定一个事件/监听器键值对的对象。注意当使用对象语法时，是不支持任何修饰器的。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 方法处理器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 动态事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:</span>[<span class="attr">event</span>]=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 内联语句 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;doThat(&#x27;hello&#x27;, $event)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 缩写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 动态事件缩写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @[<span class="attr">event</span>]=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 停止冒泡 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 阻止默认行为 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 阻止默认行为，没有表达式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 串联修饰符 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop.prevent</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 键修饰符，键别名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;onEnter&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 点击回调只会触发一次 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click.once</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 对象语法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on</span>=<span class="string">&quot;&#123; mousedown: doThis, mouseup: doThat &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在子组件上监听自定义事件 (当子组件触发“my-event”时将调用事件处理器)：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">my-component</span> @<span class="attr">my-event</span>=<span class="string">&quot;handleThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 内联语句 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">my-component</span> @<span class="attr">my-event</span>=<span class="string">&quot;handleThis(123, $event)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h2><ul><li><p><strong>缩写</strong>：<code>:</code></p></li><li><p><strong>预期</strong>：<code>any (with argument) | Object (without argument)</code></p></li><li><p><strong>参数</strong>：<code>attrOrProp (optional)</code></p></li><li><p><strong>修饰符</strong>：</p><ul><li><code>.camel</code> - 将 kebab-case attribute 名转换为 camelCase。</li></ul></li><li><p><strong>用法</strong>：</p><p>动态地绑定一个或多个 attribute，或一个组件 prop 到表达式。</p><p>在绑定 <code>class</code> 或 <code>style</code> attribute 时，支持其它类型的值，如数组或对象。可以通过下面的教程链接查看详情。</p><p>在绑定 prop 时，prop 必须在子组件中声明。可以用修饰符指定不同的绑定类型。</p><p>没有参数时，可以绑定到一个包含键值对的对象。注意此时 <code>class</code> 和 <code>style</code> 绑定不支持数组和对象。</p></li><li><p><strong>示例</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 绑定 attribute --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;imageSrc&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 动态 attribute 名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-bind:</span>[<span class="attr">key</span>]=<span class="string">&quot;value&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 缩写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imageSrc&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 动态 attribute 名缩写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">:</span>[<span class="attr">key</span>]=<span class="string">&quot;value&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 内联字符串拼接 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;&#x27;/path/to/images/&#x27; + fileName&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- class 绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; red: isRed &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;[classA, classB]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;[classA, &#123; classB: isB, classC: isC &#125;]&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- style 绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; fontSize: size + &#x27;px&#x27; &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">&quot;[styleObjectA, styleObjectB]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 绑定一个全是 attribute 的对象 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind</span>=<span class="string">&quot;&#123; id: someProp, &#x27;other-attr&#x27;: otherProp &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- prop 绑定。&quot;prop&quot; 必须在 my-component 声明 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">my-component</span> <span class="attr">:prop</span>=<span class="string">&quot;someThing&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 通过 $props 将父组件的 props 一起传给子组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">child-component</span> <span class="attr">v-bind</span>=<span class="string">&quot;$props&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">child-component</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- XLink --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">:xlink:special</span>=<span class="string">&quot;foo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>.camel</code> 修饰符允许在使用 DOM 模板时将 <code>v-bind</code> property 名称驼峰化，例如 SVG 的 <code>viewBox</code> property：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">:view-box.camel</span>=<span class="string">&quot;viewBox&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在使用字符串模板或通过 <code>vue-loader</code> / <code>vueify</code> 编译时，无需使用 <code>.camel</code>。</p></li><li><p><strong>参考</strong>：</p><ul><li><a href="https://v3.cn.vuejs.org/guide/class-and-style.html">Class 和 Style 绑定</a></li><li><a href="https://v3.cn.vuejs.org/guide/component-basics.html#%E9%80%9A%E8%BF%87-prop-%E5%90%91%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE">组件 - Props</a></li></ul></li></ul><h2 id="v-model"><a href="#v-model" class="headerlink" title="#v-model"></a><a href="https://v3.cn.vuejs.org/api/directives.html#v-model">#</a>v-model</h2><ul><li><p><strong>预期</strong>：随表单控件类型不同而不同。</p></li><li><p><strong>限制于</strong>：</p><ul><li><code>&lt;input&gt;</code></li><li><code>&lt;select&gt;</code></li><li><code>&lt;textarea&gt;</code></li><li>components</li></ul></li><li><p><strong>修饰符</strong>：</p><ul><li><a href="https://v3.cn.vuejs.org/guide/forms.html#lazy"><code>.lazy</code></a> - 监听 <code>change</code> 而不是 <code>input</code> 事件</li><li><a href="https://v3.cn.vuejs.org/guide/forms.html#number"><code>.number</code></a> - 输入字符串转为有效的数字</li><li><a href="https://v3.cn.vuejs.org/guide/forms.html#trim"><code>.trim</code></a> - 输入首尾空格过滤</li></ul></li><li><p><strong>用法</strong>：</p><p>在表单控件或者组件上创建双向绑定。细节请看下面的教程链接。</p></li><li><p><strong>参考</strong>：</p><ul><li><a href="https://v3.cn.vuejs.org/guide/forms.html">表单控件绑定</a></li><li><a href="https://v3.cn.vuejs.org/guide/component-custom-events.html#v-model-%E5%8F%82%E6%95%B0">组件 - 在输入组件上使用自定义事件</a></li></ul></li></ul><h2 id="v-slot"><a href="#v-slot" class="headerlink" title="#v-slot"></a><a href="https://v3.cn.vuejs.org/api/directives.html#v-slot">#</a>v-slot</h2><ul><li><p><strong>缩写</strong>：<code>#</code></p></li><li><p><strong>预期</strong>：可放置在函数参数位置的 JavaScript 表达式 (在<a href="https://v3.cn.vuejs.org/guide/component-slots.html#%E8%A7%A3%E6%9E%84%E6%8F%92%E6%A7%BD-prop">支持的环境</a>下可使用解构)。可选，即只需要在为插槽传入 prop 的时候使用。</p></li><li><p><strong>参数</strong>：插槽名 (可选，默认值是 <code>default</code>)</p></li><li><p><strong>限用于</strong>：</p><ul><li><code>&lt;template&gt;</code></li><li><a href="https://v3.cn.vuejs.org/guide/component-slots.html#%E7%8B%AC%E5%8D%A0%E9%BB%98%E8%AE%A4%E6%8F%92%E6%A7%BD%E7%9A%84%E7%BC%A9%E5%86%99%E8%AF%AD%E6%B3%95">组件</a> (对于一个单独的带 prop 的默认插槽)</li></ul></li><li><p><strong>用法</strong>：</p><p>提供具名插槽或需要接收 prop 的插槽。</p></li><li><p><strong>示例</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 具名插槽 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base-layout</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:header</span>&gt;</span></span><br><span class="line">    Header content</span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:default</span>&gt;</span></span><br><span class="line">    Default slot content</span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:footer</span>&gt;</span></span><br><span class="line">    Footer content</span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">base-layout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 接收 prop 的具名插槽 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">infinite-scroll</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:item</span>=<span class="string">&quot;slotProps&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; slotProps.item.text &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">infinite-scroll</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 接收 prop 的默认插槽，使用了解构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mouse-position</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; x, y &#125;&quot;</span>&gt;</span></span><br><span class="line">  Mouse position: &#123;&#123; x &#125;&#125;, &#123;&#123; y &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">mouse-position</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端模块化</title>
      <link href="2021/05/21/webpack/"/>
      <url>2021/05/21/webpack/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前端模块化"><a href="#前端模块化" class="headerlink" title="前端模块化"></a>前端模块化</h2><div class="page-header">  <h3>前言</h3>  <p>    在<cst>JavaScript</cst>发展初期就是为了实现简单的页面交互逻辑，寥寥数语即可；如今CPU、浏览器性能得到了极大的提升，很多页面逻辑迁移到了客户端（表单验证等），随着<cst>web2.0时代</cst>的到来，<cst>Ajax技术</cst>得到广泛应用，<cst>jQuery</cst>等前端库层出不穷，前端代码日益膨胀，此时在JS方面就会考虑使用<cst>模块化规范</cst>去管理。  </p></div><div class="page-header"><h3>理解模块化</h3><p>模块化是一个语言发展的必经之路，其能够帮助开发者拆分和组织代码，随着前端技术的发展，前端编写的代码量也越来越大，就需要对代码有很好的管理，而模块化能够帮助开发者解决命名冲突、管理依赖、提高代码的可读性、代码解耦以及提高代码的复用性。  </p></div><div class="page-header"><h3>描述</h3><p>模块化开发其实就是封装细节，提供使用接口，彼此之间互不影响，每个模块都是实现某一特定的功能，同时也需要避免全局变量的污染，最初通过函数实现模块，实际上是利用了函数的局部作用域来形成模块。</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述的<code>func1</code>与<code>func2</code>函数分别形成了两个模块，需要使用的时候直接调用即可，但是这样无法保证不与其他模块发生变量名冲突，而且模块成员之间看不出直接关系，再之后便有使用对象作为模块，将成员的都放置于对象中。</p><div class="page-header"><h3>模块化规范</h3><p><cst>CommonJs、AMD、CMD、ES6</cst>都是用于模块化定义中使用的规范，其为了规范化模块的引入与处理模块之间的依赖关系以及解决命名冲突问题，并使用模块化方案来使复杂系统分解为代码结构更合理，可维护性更高的可管理的模块。</p></div><div class="page-header"><h3>CommonJS</h3> <p>   <cst>CommonJS</cst>是<cst>NodeJs</cst>服务器端模块的规范，根据这个规范，每个文件就是一个模块，有自己的作用域。在一个文件里面定义的变量、函数、类，都是私有的，对其他文件不可见。CommonJS规范规定，每个模块内部，module变量代表当前模块。这个变量是一个对象，它的exports属性是对外的接口。加载某个模块，其实是加载该模块exports属性。总之，<cst>CommonJS规范通过require导入，module.exports与exports进行导出。</cst>  </p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.js，定义变量、函数等</span></span><br><span class="line"><span class="keyword">var</span> a  = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出方法，类似对象定义</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="attr">a</span>: a,</span><br><span class="line">    <span class="attr">b</span>: b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">// 当导出的模块名与被导出的成员或方法重名时可以有如下写法</span></span><br><span class="line"><span class="comment">module.exports = &#123;</span></span><br><span class="line"><span class="comment">    a,</span></span><br><span class="line"><span class="comment">    b</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2.js  导入方式一</span></span><br><span class="line"><span class="keyword">const</span> m1 = <span class="built_in">require</span>(<span class="string">&quot;./1.js&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(m1.a); <span class="comment">// 1</span></span><br><span class="line">m1.b(); <span class="comment">// 1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><cst>require是依赖于node环境的，浏览器无法解析require，所以CommonJS是Node服务端的规范，我们将学一下ES6模块化</cst></p><div class="page-header"><h3>ES6</h3>  <p></p></div><p><code>ES6</code>在语言标准的层面上实现了模块的功能，是为了成为浏览器和服务器通用的模块解决方案，<code>ES6</code>标准使用<code>export</code>与<code>export default</code>来导出模块，使用<code>import</code>导入模块</p><p>导出方式两种<code>export</code> 和 <code>export default</code></p><ul><li><code>export</code> 能按需导入，<code>export default</code> 不行</li><li><code>export</code>  可以有多个，<code>export default</code> 仅有一个</li><li><code>export</code>能直接导出变量表达式，<code>export default</code>不行。</li><li><code>export</code>方式导出，在导入时要加<code>&#123;&#125;</code>，<code>export default</code>则不需要。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导出单个特性</span></span><br><span class="line"><span class="comment">// 在js定义变量、</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> name1, name2, …, nameN; <span class="comment">// also var, const</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> name1 = …, name2 = …, …, nameN; <span class="comment">// also var, const</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">FunctionName</span>(<span class="params"></span>)</span>&#123;...&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassName</span> </span>&#123;...&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出列表</span></span><br><span class="line"><span class="keyword">export</span> &#123; name1, name2, …, nameN &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重命名导出，引用的时候是newname1，newname2</span></span><br><span class="line"><span class="keyword">export</span> &#123; name1 <span class="keyword">as</span> newname1, name2 <span class="keyword">as</span> newname2 , …, nameN &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> expression;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params">…</span>) </span>&#123; … &#125; <span class="comment">// also class, function*</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">name1</span>(<span class="params">…</span>) </span>&#123; … &#125; <span class="comment">// also class, function*</span></span><br><span class="line"><span class="keyword">export</span> &#123; name1 <span class="keyword">as</span> <span class="keyword">default</span>, … &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出模块合集</span></span><br><span class="line"><span class="keyword">export</span> * <span class="keyword">from</span> …; <span class="comment">// does not set the default export</span></span><br><span class="line"><span class="keyword">export</span> * <span class="keyword">as</span> name1 <span class="keyword">from</span> …; <span class="comment">// Draft ECMAScript® 2O21</span></span><br><span class="line"><span class="keyword">export</span> &#123; name1, name2, …, nameN &#125; <span class="keyword">from</span> …;</span><br><span class="line"><span class="keyword">export</span> &#123; import1 <span class="keyword">as</span> name1, import2 <span class="keyword">as</span> name2, …, nameN &#125; <span class="keyword">from</span> …;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> &#125; <span class="keyword">from</span> …;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> defaultMember <span class="keyword">from</span> <span class="string">&quot;module-name&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> name <span class="keyword">from</span> <span class="string">&quot;module-name&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; member &#125; <span class="keyword">from</span> <span class="string">&quot;module-name&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; member <span class="keyword">as</span> alias &#125; <span class="keyword">from</span> <span class="string">&quot;module-name&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; member1 , member2 &#125; <span class="keyword">from</span> <span class="string">&quot;module-name&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; member1 , member2 <span class="keyword">as</span> alias2 , [...] &#125; <span class="keyword">from</span> <span class="string">&quot;module-name&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> defaultMember, &#123; member [ , [...] ] &#125; <span class="keyword">from</span> <span class="string">&quot;module-name&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> defaultMember, * <span class="keyword">as</span> name <span class="keyword">from</span> <span class="string">&quot;module-name&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;module-name&quot;</span>; <span class="comment">// 将运行模块中的全局代码, 但实际上不导入任何值。</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//常用的导出方式</span></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">a,</span><br><span class="line">  b,</span><br><span class="line">  c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导入方式</span></span><br><span class="line"><span class="keyword">import</span> &#123;a,b,c&#125; <span class="keyword">from</span> <span class="string">&#x27;./a.js&#x27;</span></span><br></pre></td></tr></table></figure><div class="page-header"><h3>引用JS文件</h3>  <p class="blue">在引用JS文件时，需要给js添加type类型module，确保它是一个单独的模块</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;./a.js&quot;</span> type=<span class="string">&quot;module&quot;</span> charset=<span class="string">&quot;utf-8&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./b.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><div class="page-header"><h3>前端模块化雏形</h3>  <p>前端开发，代码逐渐复杂，开发人员越来重视模块化思想，模块化雏形是通过闭包的形式出现的</p></div><h4 id="匿名闭包，解决了命名冲突问题，但是出现了代码不可复用性"><a href="#匿名闭包，解决了命名冲突问题，但是出现了代码不可复用性" class="headerlink" title="匿名闭包，解决了命名冲突问题，但是出现了代码不可复用性"></a>匿名闭包，解决了命名冲突问题，但是出现了代码不可复用性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">;(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> name= <span class="string">&#x27;小明&#x27;</span></span><br><span class="line"><span class="keyword">var</span> age = <span class="number">18</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">n1,n2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> n1+n2</span><br><span class="line">&#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><h4 id="通过obj对象导出"><a href="#通过obj对象导出" class="headerlink" title="通过obj对象导出"></a>通过obj对象导出</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.js文件</span></span><br><span class="line">;<span class="keyword">var</span> <span class="built_in">module</span> = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> obj=&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> name= <span class="string">&#x27;小明&#x27;</span></span><br><span class="line"><span class="keyword">var</span> age = <span class="number">18</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">n1,n2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> n1+n2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj.name = name;</span><br><span class="line">obj.age  = age;</span><br><span class="line">obj.sum  = sum;</span><br><span class="line"></span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line"><span class="comment">//-----------------------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.js文件，引用1.js导出的obj</span></span><br><span class="line">;(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(moduleA.name) <span class="comment">// logs 小明</span></span><br><span class="line"><span class="built_in">console</span>.log(moduleA.age)  <span class="comment">// logs 18</span></span><br><span class="line"><span class="built_in">console</span>.log(moduleA.sum(<span class="number">150</span>,<span class="number">35</span>)) <span class="comment">//logs 185</span></span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p><cst>早期模块化开发都是通过闭包的方式避免命名冲突，通过对象导出。规模每一个人使用的模块命名</cst></p><div class="page-header"><h2>Webpack安装</h2><p>本质上，webpack 是一个用于现代 JavaScript 应用程序的 静态模块打包工具。当 webpack 处理应用程序时，它会在内部构建一个 依赖图(dependency graph)，此依赖图对应映射到项目所需的每个模块，并生成一个或多个 bundle。</p><div style="text-align:right;"><a class="btn-beautify button--animated outline blue larger" href="https://webpack.docschina.org/concepts/"   title="Webpack官方文档"><i class="far fa-hand-point-right"></i><span>Webpack官方文档</span></a></div></div><h3 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h3><p>webpack 用于编译 JavaScript 模块。一旦完成 <a href="https://webpack.docschina.org/guides/installation">安装</a>，你就可以通过 webpack <a href="https://webpack.docschina.org/api/cli">CLI</a> 或 <a href="https://webpack.docschina.org/api/node">API</a> 与其配合交互。如果你还不熟悉 webpack，请阅读 <a href="https://webpack.docschina.org/concepts">核心概念</a> 和 <a href="https://webpack.docschina.org/comparison">对比</a>，了解为什么要使用 webpack，而不是社区中的其他工具。</p><p><label class="red">Warning<label>：运行 webpack 5 的 Node.js 最低版本是 10.13.0 (LTS)。</p><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><p>在开始之前，请确保安装了 <a href="https://nodejs.org/en/">Node.js</a> 的最新版本。使用 Node.js 最新的长期支持版本(LTS - Long Term Support)，是理想的起步。 使用旧版本，你可能遇到各种问题，因为它们可能缺少 webpack 功能， 或者缺少相关 package。</p><div class="page-header"><h3>本地安装</h3><p>最新的 webpack 正式版本是：v5.37.1<br>要安装最新版本或特定版本，请运行以下命令之一：</p></div> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev webpack</span><br><span class="line"># 或指定版本 </span><br><span class="line">npm install --save-dev webpack@&lt;version&gt;</span><br></pre></td></tr></table></figure><blockquote><p>是否使用 <code>--save-dev</code> 取决于你的应用场景。假设你仅使用 webpack 进行构建操作，那么建议你在安装时使用 <code>--save-dev</code> 选项，因为可能你不需要在生产环境上使用 webpack。如果需要应用于生产环境，请忽略 <code>--save-dev</code> 选项。</p></blockquote><div class="page-header"><h3>全局安装</h3><p>通过以下 NPM 安装方式，可以使 webpack 在全局环境下可用：</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global webpack</span><br></pre></td></tr></table></figure><blockquote><p><strong>不推荐</strong> 全局安装 webpack。这会将你项目中的 webpack 锁定到指定版本，并且在使用不同的 webpack 版本的项目中， 可能会导致构建失败。</p></blockquote><p>我在学vue的时候，是先安装全局的webpack，便于我在任何地方使用，也许以后开发项目，不能这样安装</p><br><a class="btn-beautify button--animated outline block right blue larger" href="/2021/05/22/webpack1/"   title="学习webpack工具"><i class="far fa-hand-point-right"></i><span>学习webpack工具</span></a>]]></content>
      
      
      <categories>
          
          <category> Webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack安装 </tag>
            
            <tag> 前端模块化 </tag>
            
            <tag> 打包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5、CSS、Javascript</title>
      <link href="2021/05/20/Html_CSS/"/>
      <url>2021/05/20/Html_CSS/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header">    <h2 class="huise">HTML5</h2>    <p>    HTML5 是下一代 HTML 标准。HTML , HTML 4.01的上一个版本诞生于 1999 年。自从那以后，Web 世界已经经历了巨变。HTML5 仍处于完善之中。然而，大部分现代浏览器已经具备了某些 HTML5 支持。    <a class="btn-beautify button--animated block larger right" href="/2021/07/06/HTML5/"   title="HTML5"><i class="far fa-hand-point-right"></i><span>HTML5</span></a>    </p></div><div class="page-header">    <h2 class="blue">CSS3</h2>    <p>    CSS 用于控制网页的样式和布局。CSS3 是最新的 CSS 标准。    <a class="btn-beautify button--animated block larger blue right" href="/2021/07/07/CSS3/"   title="CSS3"><i class="far fa-hand-point-right"></i><span>CSS3</span></a>    </p></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础知识</title>
      <link href="2021/05/20/Vue2/"/>
      <url>2021/05/20/Vue2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header"><h2>条件渲染</h2><p>控制切换一个元素是否显示。重要代码<code>v-if</code>、<code>v-else</code>、<code>v-else-if</code>、<code>v-show</code>  </p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-3&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--v-if=&quot;boolean&quot;是一个布尔值--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--v-show=&quot;boolean&quot;同样是布尔值&gt;</span></span><br><span class="line"><span class="comment">&lt;p v-show=&quot;seen&quot;&gt;现在你看到我了&lt;/p&gt;</span></span><br><span class="line"><span class="comment">  &lt;p v-if=&quot;seen&quot;&gt;现在你看到我了&lt;/p&gt;</span></span><br><span class="line"><span class="comment">&lt;/div&gt;</span></span><br><span class="line"><span class="comment">&lt;script&gt;</span></span><br><span class="line"><span class="comment">  var app3 = new Vue(&#123;</span></span><br><span class="line"><span class="comment">  el: &#x27;#app-3&#x27;,</span></span><br><span class="line"><span class="comment">  data: &#123;</span></span><br><span class="line"><span class="comment">    seen: true</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">&#125;)</span></span><br><span class="line"><span class="comment">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><span class="blue">v-if 和 v-show的区别：</span>v-if 的布尔值是false是不执行该标签的，不会渲染在DOM结构。v-show 是改变display属性，渲染在DOM结构</p><p><code>v-if</code> 指令用于条件性地渲染一块内容。这块内容只会在指令的表达式返回 <span class="blue">truthy </span>值的时候被渲染。</p><p><code>v-if && v-else</code>联合使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-if</span>=<span class="string">&quot;awesome&quot;</span>&gt;</span>Vue is awesome!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-else</span>&gt;</span>Oh no 😢<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>v-else</code> 元素必须紧跟在带 <code>v-if</code> 或者 <code>v-else-if</code> 的元素的后面，否则它将不会被识别。</p><p><code>v-else-if</code>和 js 里面的<code>else-if</code>是一样的功能，用来连续判断的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--可以用判断句返回boolean值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span></span><br><span class="line">  A</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span></span><br><span class="line">  B</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span></span><br><span class="line">  C</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">  Not A/B/C</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="用key管理可复用的元素"><a href="#用key管理可复用的元素" class="headerlink" title="用key管理可复用的元素"></a>用<code>key</code>管理可复用的元素</h3><p>Vue 会尽可能<cst>高效地渲染</cst>元素，通常会<cst>复用已有</cst>元素而不是从头开始渲染。这么做除了使 Vue 变得非常快之外，还有其它一些好处。例如，如果你允许用户在不同的登录方式之间切换：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;loginType === &#x27;username&#x27;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your username&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your email address&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="blue text-left" style="width:200px">        效果模拟：      </div><div id="app">        <div id="inputid">            <div v-if="email">              <label>Username</label>              <input placeholder="Enter your username">            </div>            <div v-else>              <label>Email</label>              <input placeholder="Enter your email address">            </div>            <button type="button" class="btn btn-success" @click="qiehuan()">切换登录类型</button>        </div>    </div><script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js" type="text/javascript" charset="utf-8"></script><script type="text/javascript">    const app = new Vue({        el:'#app',        data:{            email: false        },        methods:{            qiehuan(){                this.email=!this.email;            }        }    })</script><p><br><cst class="red">结论：</cst>条件渲染时，会出现<cst>复用组件</cst>情况。这也是<cst>节约DOM性能</cst>。我们在输入值是，切换登录value值依然在，这就是<cst>复用了input</cst>组件。如果不希望出现这个结果，可以给input 添加<cst> key</cst>属性，<cst>不同的key值</cst>，将会重新渲染一个新的组件，而不是复用</p><h3 id="v-if-vs-v-show的区别"><a href="#v-if-vs-v-show的区别" class="headerlink" title="v-if vs v-show的区别"></a><code>v-if</code> vs <code>v-show</code>的区别</h3><p><code>v-if</code> 是“真正”的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。</p><p><code>v-if</code> 也是<strong>惰性的</strong>：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。</p><p>相比之下，<code>v-show</code> 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换。</p><p>一般来说，<code>v-if</code> 有更高的切换开销，而 <code>v-show</code> 有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用 <code>v-show</code> 较好；如果在运行时条件很少改变，则使用 <code>v-if</code> 较好。</p><hr><div class="page-header"><h2>列表渲染</h2><p>用 v-for 把一个数组对应为一组元素</p></div><p>我们可以用 <code>v-for</code> 指令基于一个数组来渲染一个列表。<code>v-for</code> 指令需要使用 <code>item in items</code> 形式的特殊语法，其中 <code>items</code> 是<cst>源数据数组</cst>，而 <code>item</code> 则是被迭代的数组元素的<cst>别名</cst>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 渲染数组，在data数据中存放了items数组，每一个li标签绑定了不同的key值，避免复用</span></span><br><span class="line"><span class="comment">item 是别名，可以任意，但最好能表达数组含义。--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;example-1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; item.message &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> example1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">el</span>: <span class="string">&#x27;#example-1&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">items</span>: [</span></span><br><span class="line"><span class="javascript">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Foo&#x27;</span> &#125;,</span></span><br><span class="line"><span class="javascript">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Bar&#x27;</span> &#125;</span></span><br><span class="line"><span class="javascript">    ]</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="cstimg"><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210521081004.png"/></div><p>在 <code>v-for</code> 块中，我们可以访问所有父作用域的 property。<code>v-for</code> 还支持一个可选的第二个参数，即当前项的索引。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;example-2&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in items&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; parentMessage &#125;&#125; - &#123;&#123; index &#125;&#125; - &#123;&#123; item.message &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> example2 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">el</span>: <span class="string">&#x27;#example-2&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">parentMessage</span>: <span class="string">&#x27;Parent&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">items</span>: [</span></span><br><span class="line"><span class="javascript">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Foo&#x27;</span> &#125;,</span></span><br><span class="line"><span class="javascript">      &#123; <span class="attr">message</span>: <span class="string">&#x27;Bar&#x27;</span> &#125;</span></span><br><span class="line"><span class="javascript">    ]</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="cstimg">  <img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210521082043.png" /></div><p>你也可以用 <code>of</code> 替代 <code>in</code> 作为分隔符，因为它更接近 JavaScript 迭代器的语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;item of items&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;v-for-object&quot;</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;value in object&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; value &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">el</span>: <span class="string">&#x27;#v-for-object&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">object</span>: &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">title</span>: <span class="string">&#x27;How to do lists in Vue&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">author</span>: <span class="string">&#x27;Jane Doe&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">publishedAt</span>: <span class="string">&#x27;2016-04-10&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="cstimg">  <img  src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210521082655.png"/></div><p>你也可以提供第二个的参数为 <cst>property </cst>名称 (也就是键名)：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, name) in object&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; name &#125;&#125;: &#123;&#123; value &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>还可以用第三个参数作为索引：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, name, index) in object&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; index &#125;&#125;. &#123;&#123; name &#125;&#125;: &#123;&#123; value &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ES6语法遍历数组"><a href="#ES6语法遍历数组" class="headerlink" title="ES6语法遍历数组"></a>ES6语法遍历数组</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//this.libararys是data数据数组，用in获取的是元素索引</span></span><br><span class="line"><span class="comment">//用of获取的是元素本身，如果是对象的话，直接获取拿到属性值</span></span><br><span class="line"><span class="keyword">let</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> <span class="built_in">this</span>.libararys)&#123;</span><br><span class="line">sum+=<span class="built_in">this</span>.libararys[i].num * <span class="built_in">this</span>.libararys[i].price;</span><br><span class="line">&#125;</span><br><span class="line">      </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> <span class="built_in">this</span>.libararys)&#123;</span><br><span class="line">    sum += item.price * item.num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="v-if-与-v-for-一起使用"><a href="#v-if-与-v-for-一起使用" class="headerlink" title="v-if 与 v-for 一起使用"></a><code>v-if</code> 与 <code>v-for</code> 一起使用</h3><p>当 <code>v-if</code> 与 <code>v-for</code> 一起使用时，<code>v-for</code> 具有比 <code>v-if</code> 更高的优先级。所以不建议同时使用。</p><h2 id="维护状态"><a href="#维护状态" class="headerlink" title="维护状态"></a>维护状态</h2><p>当 Vue 正在更新使用 <code>v-for</code> 渲染的元素列表时，它默认使用“ 就地更新 “的策略。如果数据项的顺序被改变，Vue将不会移动DOM元素来匹配数据项的顺序，而是就地更新每一个元素，并确保它们在每个索引位置正确渲染。</p><p>这个默认的模式是<cst>高效</cst>的，但是<cst>只适用于不依赖子组件状态或临时DOM状态</cst></p><p>为了给 Vue 一个提示，以便它能跟踪每个节点的身份，从而重用和重新排序现有元素，你需要为每项提供一个唯一 <code>key</code> 值：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">v-bind:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>建议尽可能在使用 <code>v-for</code> 时提供 <code>key</code> 值，除非遍历输出的 DOM 内容非常简单，或者是刻意依赖默认行为以获取性能上的提升。</p><p>因为它是 Vue 识别节点的一个通用机制，<code>key</code> 并不仅与 <code>v-for</code> 特别关联。后面我们将在博客中看到，它还具有其它用途。</p><div class="text-right">  <a class="btn-beautify button--animated outline green larger" href="/2021/05/21/vuevfor/"   title="数组应用"><i class="far fa-hand-point-right"></i><span>数组应用</span></a></div>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue基础 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Front-matter || button</title>
      <link href="2021/05/20/frontmatter/"/>
      <url>2021/05/20/frontmatter/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="禁用布局"><a href="#禁用布局" class="headerlink" title="禁用布局"></a>禁用布局</h2><blockquote><p>如果您不希望使用主题处理文章（帖子/页面），请将<code>layout: false</code>其设置为头版</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>布局<code>layout</code> 设置false ，你的页面不受主题的影响，可以自行配置文章主题</p><div class="page-header">  <h2 class="blue">    Page Front-matter  </h2></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aside:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line"><span class="section">sticky:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】页面标题</td></tr><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标签、分类和友情链接三个页面需要配置</td></tr><tr><td>updated</td><td>【可选】页面更新日期</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块(默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr><tr><td>sticky</td><td>【可选】在需要文章置顶时，填写数字，最大999</td></tr></tbody></table><div class="page-header">  <h2 class="blue">    Post Front-matter<small>新增转载数据参数</small>  </h2></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">comments:</span></span><br><span class="line"><span class="emphasis">cover:</span></span><br><span class="line"><span class="emphasis">toc:</span></span><br><span class="line"><span class="emphasis">toc_</span>number:</span><br><span class="line">copyright:</span><br><span class="line">copyright<span class="emphasis">_author:</span></span><br><span class="line"><span class="emphasis">copyright_</span>author<span class="emphasis">_href:</span></span><br><span class="line"><span class="emphasis">copyright_</span>url:</span><br><span class="line">copyright<span class="emphasis">_info:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line"><span class="section">aside:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>toc</td><td>【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td>toc_number</td><td>【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的文章作者</td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的文章作者链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的文章连结链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的版权声明文字</td></tr></tbody></table><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><blockquote><p>使用参数，版本适用于3.0以上</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %&#125;</span><br><span class="line"></span><br><span class="line">[url]         : 鏈接</span><br><span class="line">[text]        : 按鈕文字</span><br><span class="line">[icon]        : [可選] 圖標</span><br><span class="line">[color]       : [可選] 按鈕背景顔色(默認style時）</span><br><span class="line"><span class="code">                      按鈕字體和邊框顔色(outline時)</span></span><br><span class="line"><span class="code">                      default/blue/pink/red/purple/orange/green</span></span><br><span class="line"><span class="code">[style]       : [可選] 按鈕樣式 默認實心</span></span><br><span class="line"><span class="code">                      outline/留空</span></span><br><span class="line"><span class="code">[layout]      : [可選] 按鈕佈局 默認為line</span></span><br><span class="line"><span class="code">                      block/留空</span></span><br><span class="line"><span class="code">[position]    : [可選] 按鈕位置 前提是設置了layout為block 默認為左邊</span></span><br><span class="line"><span class="code">                      center/right/留空</span></span><br><span class="line"><span class="code">[size]        : [可選] 按鈕大小</span></span><br><span class="line"><span class="code">                      larger/留空</span></span><br></pre></td></tr></table></figure><blockquote><p>样式</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,larger %&#125;</span><br></pre></td></tr></table></figure><p>This is my website, click the button <a class="btn-beautify button--animated " href="http://www.noti.top/"   title="SimpleLife"><span>SimpleLife</span></a><br>This is my website, click the button <a class="btn-beautify button--animated " href="http://www.noti.top/"   title="SimpleLife"><i class="far fa-hand-point-right"></i><span>SimpleLife</span></a><br>This is my website, click the button <a class="btn-beautify button--animated outline" href="http://www.noti.top/"   title="SimpleLife"><span>SimpleLife</span></a><br>This is my website, click the button <a class="btn-beautify button--animated outline" href="http://www.noti.top/"   title="SimpleLife"><i class="far fa-hand-point-right"></i><span>SimpleLife</span></a><br>This is my website, click the button <a class="btn-beautify button--animated larger" href="http://www.noti.top/"   title="SimpleLife"><i class="far fa-hand-point-right"></i><span>SimpleLife</span></a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn &#x27;http://www.noti.top/&#x27;,SimpleLife,far fa-hand-point-right,block %&#125;</span><br><span class="line">&#123;% btn &#x27;http://www.noti.top/&#x27;,SimpleLife,far fa-hand-point-right,block center larger %&#125;</span><br><span class="line">&#123;% btn &#x27;http://www.noti.top/&#x27;,SimpleLife,far fa-hand-point-right,block right outline larger %&#125;</span><br></pre></td></tr></table></figure><a class="btn-beautify button--animated block" href="http://www.noti.top/"   title="SimpleLife"><i class="far fa-hand-point-right"></i><span>SimpleLife</span></a><a class="btn-beautify button--animated block center larger" href="http://www.noti.top/"   title="SimpleLife"><i class="far fa-hand-point-right"></i><span>SimpleLife</span></a><a class="btn-beautify button--animated block right outline larger" href="http://www.noti.top/"   title="SimpleLife"><i class="far fa-hand-point-right"></i><span>SimpleLife</span></a><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,blue larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,pink larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,red larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,purple larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,orange larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,green larger %&#125;</span><br></pre></td></tr></table></figure><a class="btn-beautify button--animated larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated blue larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated pink larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated red larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated purple larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated orange larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated green larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline blue larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline pink larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline red larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline purple larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline orange larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline green larger %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="text-center"><a class="btn-beautify button--animated outline larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated outline blue larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated outline pink larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated outline red larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated outline purple larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated outline orange larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated outline green larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></div><h2 id="label"><a href="#label" class="headerlink" title="label"></a>label</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label text color %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>text</td><td>文字</td></tr><tr><td>color</td><td>【可选】背景顏色，默认为 default/blue/pink/red/purple/orange/green</td></tr></tbody></table><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">臣亮言：&#123;% label 先帝 %&#125;創業未半，而&#123;% label 中道崩殂 blue %&#125;。今天下三分，&#123;% label 益州疲敝 pink %&#125;，此誠&#123;% label 危急存亡之秋 red %&#125;也！然侍衞之臣，不懈於內；&#123;% label 忠志之士 purple %&#125;，忘身於外者，蓋追先帝之殊遇，欲報之於陛下也。誠宜開張聖聽，以光先帝遺德，恢弘志士之氣；不宜妄自菲薄，引喻失義，以塞忠諫之路也。</span><br><span class="line">宮中、府中，俱為一體；陟罰臧否，不宜異同。若有&#123;% label 作奸 orange %&#125;、&#123;% label 犯科 green %&#125;，及為忠善者，宜付有司，論其刑賞，以昭陛下平明之治；不宜偏私，使內外異法也。</span><br></pre></td></tr></table></figure><p>臣亮言：<mark class="hl-label blue">先帝</mark> 創業未半，而<mark class="hl-label default">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此誠<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈於內；<mark class="hl-label purple">忠志之士</mark> ，忘身於外者，蓋追先帝之殊遇，欲報之於陛下也。誠宜開張聖聽，以光先帝遺德，恢弘志士之氣；不宜妄自菲薄，引喻失義，以塞忠諫之路也。<br>宮中、府中，俱為一體；陟罰臧否，不宜異同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及為忠善者，宜付有司，論其刑賞，以昭陛下平明之治；不宜偏私，使內外異法也。</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Front_matter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> front-matter </tag>
            
            <tag> butterfly </tag>
            
            <tag> blog </tag>
            
            <tag> button </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap框架学习之旅</title>
      <link href="2021/05/19/Bootstrap1/"/>
      <url>2021/05/19/Bootstrap1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://v3.bootcss.com/">Bootstrap</a>是最受欢迎的HTML、CSS和JS框架，用于响应式布局、移动设备优先的WEB项目</p></blockquote><h2 id="起步Bootstrap"><a href="#起步Bootstrap" class="headerlink" title="起步Bootstrap"></a>起步<a href="https://v3.bootcss.com/getting-started/">Bootstrap</a></h2><p>简要介绍Boostrap，以及如何下载、使用，还有基本模板和案例</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>Bootstrap（当前版本v3.4.1）提供一下几种方式帮你快速上手，每一种方式针对具有不用技能等级的开发者和不同的使用场景</p><div style="display: flex;justify-content: center;">    <div style="width:200px;height:200px;">        <h5>用于生产环境的Bootstrap</h5>        <div class="down_content">编译并压缩后的CSS、JS和字体文件。不包含文档和源码 </div>        <div class="downBtn"            onclick="window.open('https://github.com/twbs/bootstrap/releases/download/v3.4.1/bootstrap-3.4.1-dist.zip')">            下载 Boostrap        </div>    </div>    <div style="width:200px;margin: auto 50px;height:200px;">        <h5>Bootstrap 源码</h5>        <div class="down_content">Less、JavaScript 和 字体文件的源码，并且带有文档。需要 Less 编译器和一些设置工作。</div>        <div class="downBtn" onclick="window.open('https://github.com/twbs/bootstrap/archive/v3.4.1.zip')">下载源码</div>  </div><div style="width:200px;height:200px;">    <h5>Sass</h5>    <div class="down_content">这是 Bootstrap 从 Less 到 Sass 的源码移植项目，用于快速地在 Rails、Compass 或 只针对 Sass 的项目中引入。</div>    <div class="downBtn" onclick="window.open('https://github.com/twbs/bootstrap-sass/archive/v3.4.1.tar.gz')">        下载 Sass 项目    </div></div></div><h2 id="BootstrapCDN"><a href="#BootstrapCDN" class="headerlink" title="BootstrapCDN"></a>BootstrapCDN</h2><p>直接使用Bootstrap的CSS和JavaScript文件的链接，更加方便</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 可选的 Bootstrap 主题文件（一般不用引入） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap-theme.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-6pzBo3FDv/PJ8r2KRkGHifhEocL+1X2rVCTTkUfGk7/0pbek5mMa1upzvWbrUbOZ&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--引入BootstrapJS文件，先引入Jquery文件，因为依赖它--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="基本模板"><a href="#基本模板" class="headerlink" title="基本模板"></a>基本模板</h2><p>使用一下给出的这份超级简单的HTML模板，可以根据自己的需求进行修改，而不是简单的复制，粘贴</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 101 Template<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src=&quot;https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src=&quot;https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，世界！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="通过-npm-进行安装"><a href="#通过-npm-进行安装" class="headerlink" title="通过 npm 进行安装"></a>通过 npm 进行安装</h2><p>你还可以利用 npm 工具来安装 Bootstrap</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> install bootstrap@<span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="实例精选"><a href="#实例精选" class="headerlink" title="实例精选"></a>实例精选</h2><p>以下实例全部基于前面所讲的基本模板并配合 Bootstrap 的众多组件开发而成。我们鼓励你根据自身项目的需要对 Bootstrap 进行定制和修改。</p><h3 id="Bootstrap-框架的基本用法"><a href="#Bootstrap-框架的基本用法" class="headerlink" title="Bootstrap 框架的基本用法"></a>Bootstrap 框架的基本用法</h3><div class="sl_jingxuan">  <div class="sl_img">    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/starter-template.jpg"  >       <div onclick="window.open('https://v3.bootcss.com/examples/starter-template/')">      <h4>        入门级模板      </h4>      <p>        只有基本的东西：引入了预编译版的 CSS 和 JavaScript 文件，页面只包含了一个 container 元素。      </p>    </div>  </div>  <div class="sl_img" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/theme.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/theme/')">      <h4>        Bootstrap 主题      </h4>      <p>        加载可选的 Bootstrap 主题，获得增强的视觉体验。      </p>    </div>  </div>  <div class="sl_img" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/grid.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/grid/')">      <h4>        栅格      </h4>      <p>        多个关于栅格布局方面的实例，涉及到层级（tier）、嵌套（nesting）等等。      </p>    </div>  </div>  <div class="sl_img" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/jumbotron.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/jumbotron/')">      <h4>        巨幕      </h4>      <p>        使用导航栏和一些基本的网格列围绕jumbotron构建.      </p>    </div>  </div>  <div class="sl_img" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/jumbotron-narrow.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/jumbotron-narrow/')">      <h4>        Narrow jumbotron      </h4>      <p>       通过缩小默认容器和jumbotron的范围来构建更自定义的页面.      </p>    </div>  </div></div><h3 id="导航精选"><a href="#导航精选" class="headerlink" title="导航精选"></a>导航精选</h3><div class="sl_jingxuan">  <div class="sl_img">    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/navbar.jpg"  >       <div onclick="window.open('https://v3.bootcss.com/examples/navbar/')">      <h4>        导航条      </h4>      <p>       包含导航条和一起附加内容的超级基础的模板。      </p>    </div>  </div>  <div class="sl_img" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/navbar-static.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/navbar-static-top/')">      <h4>        静态导航条      </h4>      <p>        包含一个静态导航条以及一些附加内容的超级基础的模板。      </p>    </div>  </div>  <div class="sl_img" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/navbar-fixed.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/navbar-fixed-top/')">      <h4>        固定位置的导航条      </h4>      <p>        这是一个超简单的页面，拥有一个固定在顶部的导航条和一些演示内容。      </p>    </div>  </div></div><h3 id="自定义组件"><a href="#自定义组件" class="headerlink" title="自定义组件"></a>自定义组件</h3><div class="sl_jingxuan">  <div class="sl_img">    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/cover.jpg"  >       <div onclick="window.open('https://v3.bootcss.com/examples/cover/')">      <h4>        封面图      </h4>      <p>       一个简单、漂亮的首页。      </p>    </div>  </div>  <div class="sl_img" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/carousel.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/carousel/')">      <h4>        轮播图      </h4>      <p>        自定义导航栏和轮播图，然后添加一些新组件。      </p>    </div>  </div>  <div class="sl_img" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/blog.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/blog/')">      <h4>        博客页面      </h4>      <p>        简单的两列式博客布局，还包含了自定义的导航、页头、分类等元素。      </p>    </div>  </div>  <div class="sl_img" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/dashboard.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/dashboard/')">      <h4>        控制台      </h4>      <p>        包含基本结构的后台管理模板，还有固定的侧边栏和导航条。      </p>    </div>  </div>  <div class="sl_img" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/sign-in.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/signin/')">      <h4>        登录页      </h4>      <p>       自定义的表单布局以及经过简单设计的登录表单。      </p>    </div>  </div>   <div class="sl_img" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/justified-nav.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/justified-nav/')">      <h4>        Justified nav      </h4>      <p>       Create a custom navbar with justified links. Heads up! Not too Safari friendly.      </p>    </div>  </div>   <div class="sl_img" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/sticky-footer.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/sticky-footer/')">      <h4>        Sticky footer      </h4>      <p>       Attach a footer to the bottom of the viewport when the content is shorter than it.      </p>    </div>  </div>   <div class="sl_img" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/sticky-footer-navbar.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/sticky-footer-navbar/')">      <h4>        Sticky footer with navbar      </h4>      <p>       Attach a footer to the bottom of the viewport with a fixed navbar at the top.      </p>    </div>  </div></div><h3 id="实例性案例"><a href="#实例性案例" class="headerlink" title="实例性案例"></a>实例性案例</h3><div class="sl_jingxuan">  <div class="sl_img divlast" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/non-responsive.jpg"  >       <div onclick="window.open('https://v3.bootcss.com/examples/non-responsive/')">      <h4>        非响应式 Bootstrap 布局      </h4>      <p>       Easily disable the responsiveness of Bootstrap per our docs.      </p>    </div>  </div>  <div class="sl_img divlast" >    <img src="https://cdn.jsdelivr.net/npm/@bootcss/v3.bootcss.com@1.0.10/examples/screenshots/offcanvas.jpg">       <div onclick="window.open('https://v3.bootcss.com/examples/offcanvas/')">      <h4>        Offcanvas      </h4>      <p>Build a toggleable off-canvas navigation menu for use with Bootstrap.      </p>    </div>  </div>  </div>]]></content>
      
      
      <categories>
          
          <category> Bootstrap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bootstrap入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown语法</title>
      <link href="2021/05/19/markdown/"/>
      <url>2021/05/19/markdown/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="simple text-center">SimpleLife带你学习，带你飞</div><div class="page-headermd text-center"><h2>MarkDown语法</h2><p>Markdown 指南 是一份免费且开源的 Markdown 参考手册，详细讲解了<br>Markdown 这一简单、易用的文档格式化标记语言的用法。</p><span><a class="btn-beautify button--animated outline blue larger" href="https://www.markdown.xyz"   title="官方文档"><span>官方文档</span></a></span></div> <div class="page-header"><h2>Markdown是什么 </h2><p>一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。Markdown有John Gruber于2004年创建，如今很受欢迎</p></div>Markdown 语法的首要设计目标是尽可能易读。基于这个目标，Markdown 格式的文档能够以纯文本形式原样发布，而不会看起来像被填满了标签或格式化指令。 <div class="page-header"><h2>为什么要使用Markdown？</h2></div><ol><li>Markdown 处处可用。人们使用它创建 <span class="blue">网站</span>、<span class="blue">文档</span>、<span class="blue">便签</span>、<span class="blue">书籍</span>、<span class="blue">演示文稿</span>、<span class="blue">邮件</span> 和 <span class="blue">技术文档</span></li><li>Markdown 是可移植的。可以将markdown移植到任意平台。你的格式，在其它平台依然生效</li><li>Markdown 是独立于平台的。不受<span class="blue">操作系统</span>的限制</li><li>Markdown 能适应未来的变化。及时你使用你程序不能使用了，你仍然可以使用文本编辑器读取 Markdown 格式的文本。</li><li>Markdown 无处不在。众多平台支持markdown语法，如<span class="blue">Github</span>，<span class="blue">博客园</span></li></ol> <div class="page-header"><h2>工欲善其事，必先利其器</h2><p>Markdown 入门的最佳方式就是多使用它。由于有大量免费工具的存在，这比以前任何时候都更容易开始上手了。</p></div><div class="text-center"><span><a class="btn-beautify button--animated outline blue larger" href="https://dillinger.io"   title="Markdown在线编辑器<small class=huise>不易访问</small>"><i class="far fa-hand-point-right"></i><span>Markdown在线编辑器<small class=huise>不易访问</small></span></a></span><span><a class="btn-beautify button--animated outline blue larger" href="https://www.typora.io"   title="工具Typora"><i class="far fa-hand-point-right"></i><span>工具Typora</span></a></span></div> <div class="page-header"><h2>Markdown基本语法</h2><p>几乎所有 Markdown 应用程序都支持 John Gruber 原始设计文档中列出的 Markdown 基本语法。但是，Markdown 处理程序之间存在着细微的变化和差异，我们都会尽可能标记出来</p></div><span class="blue">创建标题：</span>在标题前面添加井号(#)。个数代表了标题的级别 <table class="table table-bordered table-hover">     <thead class="trta">    <tr class="text-left trta">      <th>Markdown</th>      <th>HTML</th>      <th>渲染效果</th>    </tr>  </thead>  <tbody>    <tr >      <td><samp># Heading level 1</samp></td>      <td><samp class="highlighter-rouge">&lt;h1&gt;Heading level 1&lt;/h1&gt;</samp></td>      <td><h1 class="no-anchor" data-toc-skip="">Heading level 1</h1></td>    </tr>    <tr>      <td><samp class="highlighter-rouge">## Heading level 2</samp></td>      <td><samp class="highlighter-rouge">&lt;h2&gt;Heading level 2&lt;/h2&gt;</samp></td>      <td><h2 class="no-anchor" data-toc-skip="">Heading level 2</h2></td>    </tr>    <tr>      <td><samp class="highlighter-rouge">### Heading level 3</samp></td>      <td><samp class="highlighter-rouge">&lt;h3&gt;Heading level 3&lt;/h3&gt;</samp></td>      <td><h3 class="no-anchor" data-toc-skip="">Heading level 3</h3></td>    </tr>    <tr>      <td><samp class="highlighter-rouge">#### Heading level 4</samp></td>      <td><samp class="highlighter-rouge">&lt;h4&gt;Heading level  4&lt;/h4&gt;</samp></td>      <td><h4 class="no-anchor">Heading level 4</h4></td>    </tr>    <tr>      <td><samp class="highlighter-rouge">##### Heading level 5</samp></td>      <td><samp class="highlighter-rouge">&lt;h5&gt;Heading level 5&lt;/h5&gt;</samp></td>      <td><h5 class="no-anchor">Heading level 5</h5></td>    </tr>    <tr>      <td><samp class="highlighter-rouge">###### Heading level 6</samp></td>      <td><samp class="highlighter-rouge">&lt;h6&gt;Heading level 6&lt;/h6&gt;</samp></td>      <td><h6 class="no-anchor">Heading level 6</h6></td>    </tr>  </tbody> </table> <span class="blue">可选语法：</span>还可以在文本下方添加任意数量的 == 号来标识一级标题，或者 -- 号来标识二级标题。 <table class="table table-bordered">  <thead class="thead-light">    <tr class="text-left">      <th>Markdown</th>      <th>HTML</th>      <th>渲染效果</th>    </tr>  </thead>  <tbody>    <tr>      <td><samp class="highlighter-rouge">Heading level 1<br />===============</samp></td>      <td><samp class="highlighter-rouge">&lt;h1&gt;Heading level 1&lt;/h1&gt;</samp></td>      <td><h1 class="no-anchor" data-toc-skip="">Heading level 1</h1></td>    </tr>    <tr>      <td><samp class="highlighter-rouge">Heading level 2<br />---------------</samp></td>      <td><samp class="highlighter-rouge">&lt;h2&gt;Heading level 2&lt;/h2&gt;</samp></td>      <td><h2 class="no-anchor" data-toc-skip="">Heading level 2</h2></td>    </tr>  </tbody></table> <footer class="blue"> 当井号（#）和标题文本之间<span class="red">没有空格</span>时，各 Markdown 应用程序的处理方式是不一样的。为了兼容考虑，请在井号和标题文本之间<span class="red">添加一个空格</span>。<hr></footer><p><span class="blue" >创建段落：</span>请使用空白行将一行或多行文本进行分隔。</p><table class="table table-bordered" id="csttable"><thead><tr class="text-left"><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><samp class="highlighter-rouge"> I really like using Markdown.<br /><br />I sampthink I'll use it to format all of my documents from now on.</samp></td><td><samp class="highlighter-rouge">&lt;p&gt;I really like using Markdown.&lt;/p&gt;<br /><br />&lt;p&gt;I think I'll use it to format all of my documents from now on.&lt;/p&gt;</samp></td><td><p>I really like using Markdown.</p><p>I think I'll use it to format all of my documents from now on.</p></td>    </tr>  </tbody></table><p><span class="blue">换行（Line Break）用法的最佳实践</span></p><p>在一行的末尾添加<span class="red">两个或多个空格</span>，然后按回车键（return），即可创建一个换行（line break） (&lt;br&gt;)。<br><br>因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个格<br>为了<span class="red">兼容性</span>，请在行尾添加“<span class="red">结尾空格</span>”或 HTML 的 <span class="red">&lt;br&gt;</span>标签来实现换行。</p><p><span class="blue">强调字体：</span>粗体和斜体的使用<br>要<span class="blue">加粗文本</span>，请在单词或短语的前后各添加<span class="red">两个星号或下划线</span>。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号<br><br>要用<span class="blue">斜体显示文本</span>，请在单词或短语前后添加<span class="red">一个星号或下划线</span>。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。</p><footer class="red">尽量使用星号*去加粗和斜体，因为Markdown的众多应用程序处理单词中间下划线意见不一致。加粗和斜体同时使用，左右两侧添加三个星号*</footer><hr><div class="page-header"><h2>块引用</h2><p>要创建块引用，请在段落前添加一个 > 符号。</p></div><code>> Dorothy followed her through many of the beautiful rooms in her castle.</code><blockquote><p> Dorothy followed her through many of the beautiful rooms in her castle.</p></blockquote><p>  嵌套块引用效果：通过多个'>' 来达到效果</p><blockquote><blockquote><p>3</p><blockquote><p>2</p><blockquote><p>1</p></blockquote></blockquote></blockquote></blockquote><div>  <h2>    列表  </h2>  <p>        你可以将多个条目组织成有序或无序列表。      </p></div>1. 有序列表：2. 无序列表<hr><div class="page-header">  <h2>    表格  </h2>  <p>    如需添加表格，请使用三个或更多个连字符（---）来为每个列创建表头，并使用管道符（|）来分隔每个列。你还可以     在表格的任意一侧添加管道符。  </p></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Syntax      | Description |</span><br><span class="line">| ----------- | ----------- |</span><br><span class="line">| Header      | Title       |</span><br><span class="line">| Paragraph   | Text        |</span><br></pre></td></tr></table></figure><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>Header</td><td>Title</td></tr><tr><td>Paragraph</td><td>Text</td></tr></tbody></table><h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><p>通过在标题行中的连字符(–)的左侧或右侧或两侧添加冒号（<code>:</code>），可以将对应列中的文本向左或向右或居中对齐。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Syntax      | Description | Test Text     |</span><br><span class="line">| :---        |    :----:   |          ---: |</span><br><span class="line">| Header      | Title       | Here&#x27;s this   |</span><br><span class="line">| Paragraph   | Text        | And more      |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">Syntax</th><th align="center">Description</th><th align="right">Test Text</th></tr></thead><tbody><tr><td align="left">Header</td><td align="center">Title</td><td align="right">Here’s this</td></tr><tr><td align="left">Paragraph</td><td align="center">Text</td><td align="right">And more</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> MarkDown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> front-matter </tag>
            
            <tag> 开源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Software Sharing</title>
      <link href="2021/05/19/software/"/>
      <url>2021/05/19/software/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header">    <h2 class="huise">HBuilderX<small>web开发编辑器</small></h2>    <p>HBuilderX，简称HX，是轻如编辑器、强如IDE的合体版本。轻巧、极速 为极客、为懒人、为你</p>        <div class="text-right">    <a class="btn-beautify button--animated outline larger" href="https://www.dcloud.io/hbuilderx.html"   title="HBuilderX"><i class="far fa-hand-point-right"></i><span>HBuilderX</span></a>       </div></div><div class="page-header">    <h2 class="blue">XMind<small>思维导图</small></h2>    <p>XMind 是一个全功能的思维导图和头脑风暴软件，为激发灵感和创意而生。作为一款有效提升工作和生活效率的生产力工具，受到全球百千万用户的青睐。</p>        <div class="text-right">    <a class="btn-beautify button--animated outline blue larger" href="https://www.xmind.cn"   title="XMind"><i class="far fa-hand-point-right"></i><span>XMind</span></a>    <a class="btn-beautify button--animated outline blue larger" href="https://pan.baidu.com/s/10Gy1CvkBP_aR6Yrc_KH6Rw"   title="[百度网盘life(破解)]XMind"><i class="far fa-hand-point-right"></i><span>[百度网盘life(破解)]XMind</span></a>       </div></div><div class="page-header">    <h2 class="pink">VS Code<small>强大的IDE</small></h2>    <p>VS Code，全称Visual Studio Code，是轻量的编辑器，通过下载插件，让VS Code 更加灵活，好用。你想要的功能，插件都能满足你！</p>        <div class="text-right">    <a class="btn-beautify button--animated outline pink larger" href="https://code.visualstudio.com/Download/"   title="VS Code"><i class="far fa-hand-point-right"></i><span>VS Code</span></a>       </div></div>]]></content>
      
      
      <categories>
          
          <category> Repository </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tooltip </tag>
            
            <tag> 编辑器 </tag>
            
            <tag> 神器 </tag>
            
            <tag> 强大好用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tool Sharing</title>
      <link href="2021/05/19/tooltip/"/>
      <url>2021/05/19/tooltip/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="page-header">    <h2 class="huise">PotPlayer<small>万能播放器</small></h2>    <p>是一款绝对轻量级的万能播放器，而且免费，不会有弹窗</p>        <div class="text-right">    <a class="btn-beautify button--animated outline larger" href="https://potplayer.en.softonic.com/download"   title="PotPlayer"><i class="far fa-hand-point-right"></i><span>PotPlayer</span></a>       </div></div><div class="page-header">    <h2 class="blue">ImageGlass<small>图像查看器</small></h2>    <p>一个轻量级、多功能的图像查看器</p>        <div class="text-right">    <a class="btn-beautify button--animated outline blue larger" href="https://imageglass.org"   title="ImageGlass"><i class="far fa-hand-point-right"></i><span>ImageGlass</span></a>       </div></div><div class="page-header">    <h2 class="pink">Snipaste<small>截图工具</small></h2>    <p>Snipaste 是一个简单但强大的截图工具，也可以让你将截图贴回到屏幕上</p>        <div class="text-right">    <a class="btn-beautify button--animated outline pink larger" href="https://zh.snipaste.com/download.html"   title="Snipaste"><i class="far fa-hand-point-right"></i><span>Snipaste</span></a>       </div></div><div class="page-header">    <h2 class="red">Antelope<small>压缩照片</small></h2>    <p>Antelope是快速，批量优化的应用程序，用于JPEG和PNG文件大小，而不会降低质量</p>        <div class="text-right">    <a class="btn-beautify button--animated outline red larger" href="https://boldright.co.jp/products/antelope/"   title="Antelope"><i class="far fa-hand-point-right"></i><span>Antelope</span></a>       </div></div><div class="page-header">    <h2 class="purple">PicGo<small>图床管理</small></h2>    <p>PicGo 是一款开源跨平台的免费图片上传工具以及图床相册管理软件，它能帮你快速地将图片上传到微博、又拍云、阿里云 OSS、腾讯云 COS、七牛、GitHub、sm.ms、Imgur 等常见的免费图床网站</p>        <div class="text-right">    <a class="btn-beautify button--animated outline purple larger" href="https://github.com/Molunerfinn/PicGo/releases/tag/v2.2.2"   title="[Github]PicGo"><i class="far fa-hand-point-right"></i><span>[Github]PicGo</span></a>      <a class="btn-beautify button--animated outline purple larger" href="https://pan.baidu.com/s/1KOtURBzcILC1n3ftIuuheA"   title="[百度网盘life]PicGo"><i class="far fa-hand-point-right"></i><span>[百度网盘life]PicGo</span></a>       </div></div><div class="page-header">    <h2 class="orange">Typora<small>markdown编辑器</small></h2>    <p>一个轻量级的Markdown编辑器，简单而强大，可读可写，开源免费</p>        <div class="text-right">    <a class="btn-beautify button--animated outline orange larger" href="https://www.typora.io/"   title="Typora"><i class="far fa-hand-point-right"></i><span>Typora</span></a>       </div></div><div class="page-header">    <h2 class="green">TEMPMAIL<small>临时邮箱</small></h2>    <p>不用再担心垃圾邮件，广告邮件，黑客和机器人攻击。让您真实的邮箱保持干净和安全。Temp Mail提供临时、安全、匿名、免费的一次性电子邮件地址。</p>        <div class="text-right">    <a class="btn-beautify button--animated outline green larger" href="https://temp-mail.org/zh/"   title="TEMPMAIL"><i class="far fa-hand-point-right"></i><span>TEMPMAIL</span></a>       </div></div><div class="page-header">    <h2 class="huise">IDM<small>资源下载</small></h2>    <p>IDM，全称internetdownloadmanager。开启后，可以下载网页资源，简单快速而强大</p>        <div class="text-right">    <a class="btn-beautify button--animated outline larger" href="https://pan.baidu.com/s/1rSxKxFVuzQl1gwJ-_9iV6g"   title="[百度网盘life]TEMPMAIL"><i class="far fa-hand-point-right"></i><span>[百度网盘life]TEMPMAIL</span></a>       </div></div><div class="page-header">    <h2 class="blue">HUORONG<small>火绒安全</small></h2>    <p>不打扰，是我们的态度；易使用，是我们的温度。火绒安全也绝对轻量级，个人版免费使用，拒绝弹窗，净化一切</p>        <div class="text-right">    <a class="btn-beautify button--animated outline blue larger" href="https://www.huorong.cn"   title="HUORONG"><i class="far fa-hand-point-right"></i><span>HUORONG</span></a>       </div></div>]]></content>
      
      
      <categories>
          
          <category> Repository </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tooltip </tag>
            
            <tag> 神器 </tag>
            
            <tag> 工具箱 </tag>
            
            <tag> 轻量级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Hexo主题</title>
      <link href="2021/05/17/Hexo2/"/>
      <url>2021/05/17/Hexo2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><blockquote><p>什么是<a href="https://git-scm.com/">Git</a>？Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们将本地搭建好的网站，使用Git工具同步到Github上</p></blockquote><p><a href="https://git-scm.com/download/win">Git下载地址</a></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517081113.png"></p><blockquote><p>在window桌面右键菜单栏，点击Git Bash Here，这是接下来需要的工具</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517081245.png"></p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><blockquote><p>Hexo基于Node.js，Node.js下载地址<a href="https://nodejs.org/en/download/%EF%BC%8C%E6%B3%A8%E6%84%8F%E5%AE%89%E8%A3%85Node.js%E4%BC%9A%E5%8C%85%E5%90%AB%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%8F%8Anpm%E7%9A%84%E5%AE%89%E8%A3%85%EF%BC%8C%E5%AE%89%E8%A3%85%E5%90%8E%EF%BC%8C%E5%9C%A8%E5%91%BD%E5%90%8D%E8%A1%8CCMD%E8%BE%93%E5%85%A5node">https://nodejs.org/en/download/，注意安装Node.js会包含环境变量及npm的安装，安装后，在命名行CMD输入node</a> -v，判断是否安装成功</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517081912.png"></p><p>通过两个命令，判断node和npm是否安装成功，安装成功会得到版本号信息</p><h3 id="使用npm命令安装Hexo-Git安装"><a href="#使用npm命令安装Hexo-Git安装" class="headerlink" title="使用npm命令安装Hexo(Git安装)"></a>使用npm命令安装Hexo(Git安装)</h3><p><code>npm install -g hexo-cli </code></p><h3 id="耐心等待安装后，准备初始化博客"><a href="#耐心等待安装后，准备初始化博客" class="headerlink" title="耐心等待安装后，准备初始化博客"></a>耐心等待安装后，准备初始化博客</h3><blockquote><p>选择一个路径，创建博客文件夹，用于存放博客的。进入博客文件夹</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517082803.png"></p><div style=text-align:center;font-size:20px>  我创建了AlovelyYou文件夹，右键打开Git Bash，输入命令<cmd>hexo init</cmd>  <br>使用命令hexo s 本地访问网站，输入临时网站localhost:4000，如下图所示</div><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517083415.png"></p><h3 id="配置username和useremail信息，本地绑定github"><a href="#配置username和useremail信息，本地绑定github" class="headerlink" title="配置username和useremail信息，本地绑定github"></a>配置username和useremail信息，本地绑定github</h3><blockquote><p>git config –global user.name “你的GitHub用户名”<br>git config –global user.email “你的GitHub注册邮箱”</p></blockquote><h3 id="生成ssh密钥文件："><a href="#生成ssh密钥文件：" class="headerlink" title="生成ssh密钥文件："></a>生成ssh密钥文件：</h3><blockquote><p>ssh-keygen -t rsa -C “你的GitHub注册邮箱”</p></blockquote><p>然后直接三个回车即可，默认不需要设置密码。在c盘用户管理员文件夹找到.ssh，打开id_rsa.push密钥，将全部内容复制下来</p><blockquote><p>$ ssh -T <a href="mailto:&#103;&#105;&#116;&#64;&#103;&#105;&#x74;&#x68;&#x75;&#98;&#x2e;&#99;&#x6f;&#x6d;">&#103;&#105;&#116;&#64;&#103;&#105;&#x74;&#x68;&#x75;&#98;&#x2e;&#99;&#x6f;&#x6d;</a> # 注意邮箱地址不用改</p></blockquote><p>因为我已经搭建了博客，不演示输入命令的结果了。按照文字说明即可</p><h3 id="进入Github设置ssh密钥"><a href="#进入Github设置ssh密钥" class="headerlink" title="进入Github设置ssh密钥"></a>进入Github设置ssh密钥</h3><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517090803.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517091154.png"></p><p>输入命令ssh <a href="mailto:&#x67;&#105;&#116;&#x40;&#103;&#x69;&#116;&#104;&#117;&#98;&#x2e;&#x63;&#x6f;&#109;">&#x67;&#105;&#116;&#x40;&#103;&#x69;&#116;&#104;&#117;&#98;&#x2e;&#x63;&#x6f;&#109;</a>，结果所下图所示说明成功啦</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517091358.png"></p><h3 id="配置hexo文件-config-yml"><a href="#配置hexo文件-config-yml" class="headerlink" title="配置hexo文件_config.yml"></a>配置hexo文件_config.yml</h3><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517091801.png"></p><p>我们将本地博客和GitHub关联起来，打开配置文件，在最后一页</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517092021.png"></p><p>如果你的仓库分支是master，在branch填master，我默认是main，如果你的默认是master，请修改</p><p>保存文件配置，现在安装Git部署插件，将本地部署到github</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><code>hexo c</code> &amp;&amp; <code>hexo g</code> &amp;&amp;<code>hexo d</code></p><p>通过这三条命令，你可以将本地博客部署到Github上，在输入命名时，你可以跟我一样通过&amp;&amp;符合连接三个命令，你也可以单独执行</p><div style="text-align:right;"><a class="btn-beautify button--animated outline green larger" href="/2021/05/17/Hexo3/"   title="搭建Hexo博客(三)"><i class="far fa-hand-point-right"></i><span>搭建Hexo博客(三)</span></a></div>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题</title>
      <link href="2021/05/17/Hexo3/"/>
      <url>2021/05/17/Hexo3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="搭建Butterfly主题"><a href="#搭建Butterfly主题" class="headerlink" title="搭建Butterfly主题"></a>搭建<a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly</a>主题</h3><blockquote><p>我自己搭建博客主题就是butterfly，也遇到了很多困惑。目前基本解决了。如果你不喜欢这个主题可以去百度搜索其他Hexo主题。接下来，我会写一些搭建butterfly主题的教程，搭建者需要配合<a href="https://butterfly.js.org/posts/21cfbf15/">官方文档</a>。单纯依靠官方文档搭建是可以的，我也是如此。</p></blockquote><h3 id="Git安装Butterfly主题"><a href="#Git安装Butterfly主题" class="headerlink" title="Git安装Butterfly主题"></a>Git安装Butterfly主题</h3><p>在你的博客根目录右键打开Git Bash</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> master https://github.com/jerryc127/hexo<span class="literal">-theme</span><span class="literal">-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><p>修改站点配置文件<code>_config.yml</code>，把主题更改<code>butterfly</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>如果你没有pug以及stylus的渲染器，请下载安装：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-renderer</span><span class="literal">-pug</span> hexo<span class="literal">-renderer</span><span class="literal">-stylus</span> -<span class="literal">-save</span></span><br></pre></td></tr></table></figure><h3 id="主题配置文件复制"><a href="#主题配置文件复制" class="headerlink" title="主题配置文件复制"></a>主题配置文件复制</h3><p>把主题文件夹中的<code>_config.yml</code>复制到Hexo根目录下，听说重新命名<code>_config.butterfly.yml</code></p><p>以后只需要在<code>_config.butterfly.yml</code>进行配置就行</p><p>Hexo会自动合并主题中的<code>_config.yml</code>和<code>_config.butterfly.yml</code>里的配置，如果存在同名配置，会使用</p><p><code>_config.butterfly.yml</code>的配置，其优先度较高。</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210517110551.png"></p><h3 id="小结：butterfly主题基本样式ok"><a href="#小结：butterfly主题基本样式ok" class="headerlink" title="小结：butterfly主题基本样式ok"></a>小结：butterfly主题基本样式ok</h3><blockquote><p>以上是一些简单的搭建操作，使用Hexo命令部署到Github上，已经会有一个基本的主题样式，</p></blockquote><blockquote><p>后续我将结合文档，写留言板、说说、在线聊天等功能博客。在此之前请完善butterfly主题基本样式，如果有问题请留言</p></blockquote><div style="text-align:center;">  <a class="btn-beautify button--animated outline green larger" href="/2021/05/17/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2(%E4%B8%89)/"   title="留言板"><i class="far fa-hand-point-right"></i><span>留言板</span></a>  <a class="btn-beautify button--animated outline blue larger" href="/2021/05/17/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2(%E4%B8%89)/"   title="说说"><i class="far fa-hand-point-right"></i><span>说说</span></a>  <a class="btn-beautify button--animated outline red larger" href="/2021/05/17/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2(%E4%B8%89)/"   title="在线聊天"><i class="far fa-hand-point-right"></i><span>在线聊天</span></a></div>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue框架学习之旅</title>
      <link href="2021/05/17/Vue1/"/>
      <url>2021/05/17/Vue1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue-js是什么"><a href="#Vue-js是什么" class="headerlink" title="Vue.js是什么"></a>Vue.js是什么</h2><p>Vue（读音/vju:/，类似view）是一套用于构建用户界面的渐进式框架。以前学习JQuery编程叫命令式编程，学习vue编程，叫声明式编程。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用</p><h2 id="前端三大框架之一"><a href="#前端三大框架之一" class="headerlink" title="前端三大框架之一"></a>前端三大框架之一</h2><p>Vue框架：作者<a href="https://www.jianshu.com/p/3092b382ee80">尤雨溪</a>，创建了全世界三大前端框架之一，领先于React和Angular</p><p>2013年，在Google工作的尤雨溪，收到Angular的启发，开发了一款轻量框架，最初命名Seed</p><p>设计思想：是一种“渐进式框架”，淡化框架本省的主张，降低框架作为工具的复杂度，从而降低对使用者的要求</p><h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><blockquote><p>官方指南假设你已了解关于 HTML、CSS 和 JavaScript 的中级知识。如果你刚开始学习前端开发，将框架作为你的第一步可能不是最好的主意——掌握好基础知识再来吧！之前有其它框架的使用经验会有帮助，但这不是必需的。</p></blockquote><p>尝试Vue.js最简单的方法是使用hello world例子，引用vue文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告，利于初学者 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Vue.js的核心是一个允许采用简洁的模板语法来声明式地将数据渲染进DOM的系统：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  <span class="attr">data</span>:&#123;</span><br><span class="line">    <span class="comment">//存放数据</span></span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;Hello Vue&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>:&#123;</span><br><span class="line">    <span class="comment">//写方法</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>:&#123;</span><br><span class="line">    <span class="comment">//属性方法，有缓存</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">components</span>:&#123;</span><br><span class="line">    <span class="comment">//声明子组件</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>以上一个简单的Vue实例，写了基本的Vue语法，使用的是Mustach语法，用来显示Vue实例的数据，但是容器需要捆绑id，接下来我会一步步记录Vue的学习笔记</p></blockquote><h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><ol><li><a href="http://www.noti.top/2021/05/20/Vue2/">Vue基础知识</a></li><li><a href="http://www.noti.top/2021/05/21/vuevfor/">Vue数组应用</a></li><li><a href="http://www.noti.top/2021/05/21/vuezhiling/">Vue基础指令</a></li><li><a href="http://www.noti.top/2021/05/28/vue-components/">Vue组件化开发</a></li><li><a href="http://www.noti.top/webpack/">学习Webpack打包工具</a></li><li><a href="http://www.noti.top/2021/05/27/vue-cli/">掌握开发项目Vue-CLI脚手架</a></li><li><a href="http://www.noti.top/2021/06/01/Vue-Router%20Content/">掌握Vue路由</a></li></ol><div style="text-align:right;">  <a class="btn-beautify button--animated outline blue larger" href="https://cn.vuejs.org/v2/guide/"   title="Vue2.x官方文档"><i class="far fa-hand-point-right"></i><span>Vue2.x官方文档</span></a>  <a class="btn-beautify button--animated outline blue larger" href="https://v3.cn.vuejs.org/api/"   title="Vue3.x官方文档"><i class="far fa-hand-point-right"></i><span>Vue3.x官方文档</span></a>  <a class="btn-beautify button--animated outline blue larger" href="/vue/"   title="Vue框架学习目录"><i class="far fa-hand-point-right"></i><span>Vue框架学习目录</span></a></div>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Github博客</title>
      <link href="2021/05/16/Hexo1/"/>
      <url>2021/05/16/Hexo1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="搭建github博客"><a href="#搭建github博客" class="headerlink" title="搭建github博客"></a>搭建github博客</h1><ul><li><h3 id="创建Github账号"><a href="#创建Github账号" class="headerlink" title="创建Github账号"></a>创建<a href="https://github.com/join">Github账号</a></h3></li></ul><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516202937.png" alt="Github注册页面"></p><blockquote><p>选择一个好听、好记的用户名，博客以用户名为域名的，使用字母+数组组合</p></blockquote><blockquote><p>创建好github账号，验证Email，这是重要的</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516204745.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516205631.png"></p><p>进入Your repositiories 创建创库，仓库名字 username.github.io，以后进入博客名字就是这个</p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516211900.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516212649.png"></p><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516213223.png"></p><blockquote><p>这时候你的基本博客搭建好了，接下搭建Hexo博客主题，美化自己的博客</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SimpleLifecst/simple@main//20210516215941.png" alt="Butterfly样式"></p><h6 id="这是我们后续将会搭建的主题"><a href="#这是我们后续将会搭建的主题" class="headerlink" title="这是我们后续将会搭建的主题"></a>这是我们后续将会搭建的主题</h6><div style="text-align:right;">  <a class="btn-beautify button--animated outline green larger" href="/2021/05/17/Hexo2/"   title="搭建Hexo博客(二)"><i class="far fa-hand-point-right"></i><span>搭建Hexo博客(二)</span></a></div>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue插槽Slot</title>
      <link href="2021/05/13/Vue_slot/"/>
      <url>2021/05/13/Vue_slot/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="插槽slot"><a href="#插槽slot" class="headerlink" title="插槽slot"></a>插槽slot</h2><blockquote><p>大纲：了解插槽Slot的基本使用、学习新概念具名，通过给slot添加值name，指定修改内容、理解插槽作用域：父级模板里的所有内容都是在父级作用域中编译的；子模板里的所有内容都是在子作用域中编译的。</p></blockquote><h2 id="插槽slot的基本使用"><a href="#插槽slot的基本使用" class="headerlink" title="插槽slot的基本使用"></a>插槽slot的基本使用</h2><p>加强扩展性：在模板添加<code>&lt;slot&gt;&lt;/slot&gt;</code>，当需要给模板新添加内容时，可以在子组件中添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是子组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--使用模板时需要添加button--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span></span><br><span class="line">    按钮</span><br><span class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这新增的标签会放到插槽位置上，如果有多个标签同样一起放入--&gt;</span></span><br></pre></td></tr></table></figure><p>添加默认值：如果模板在很多地方都需要这个标签，但是小部分不需要，可以给插槽添加默认值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是子组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--默认含有按钮--&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--如果不需要按钮，可以新增替换--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="具名插槽"><a href="#具名插槽" class="headerlink" title="具名插槽"></a>具名插槽</h2><blockquote><p>给<code>slot</code>插槽添加<code>name</code>值，当创建模板的时候，会存在多个插槽，当需要改变特定插槽的值，可以指定它的name</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>左边<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>中间<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>右边<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>不需要指定name，被替换<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--指定了name=&quot;left&quot;，替换默认值为button--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">slot</span>=<span class="string">&quot;left&quot;</span>&gt;</span>button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!--没有指定slot=&quot;name&quot;的都替换--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>使用<code>v-slot</code>绑定name</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--template模板，header和footer指定了name属性--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--使用模板--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--通过template标签 用v-slot绑定特定插槽，能添加很多新标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base-layout</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Here might be a page title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>A paragraph for the main content.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>And another one.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Here&#x27;s some contact info<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">base-layout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://cn.vuejs.org/v2/guide/components-slots.html">官方示例</a></p><h2 id="编译作用域"><a href="#编译作用域" class="headerlink" title="编译作用域"></a>编译作用域</h2><blockquote><p>父级模板里的所有内容都是在父级作用域中编译的；子模板里的所有内容都是在子作用域中编译的。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--使用模板时,模板cpn相当div，使用的数据都是vue实例的，而不是模板组件数据--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">v-show:</span>&quot;<span class="attr">isShow</span>&quot;&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="作用域插槽"><a href="#作用域插槽" class="headerlink" title="作用域插槽"></a>作用域插槽</h2><p>使用<code>slot</code>作用域插槽</p><blockquote><p>父组件替换插槽的标签，但是内容由子组件提供</p><ul><li>因此我们需要从子组件获取到数据</li><li>但是因为作用域拿到的数据是vue实例data，因此我们需要子组件传过去</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;slot&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">&quot;item in slot.aanguage&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">:aanguage</span>=<span class="string">&quot;pLanguage&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in pLanguage&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">message</span>:<span class="string">&#x27;你好啊&#x27;</span></span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">cpn</span>:&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">template</span>:<span class="string">&#x27;#cpn&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">pLanguage</span>:[<span class="string">&#x27;Javascript&#x27;</span>,<span class="string">&#x27;C++&#x27;</span>,<span class="string">&#x27;C#&#x27;</span>,<span class="string">&#x27;Python&#x27;</span>,<span class="string">&#x27;Php&#x27;</span>]</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>PS：绑定子组件数据的名字不能使用大写，因为驼峰标识。无法识别</p><p><code>&lt;slot :aanguage=&quot;pLanguage&quot;&gt;</code></p><p><code>&lt;template slot-scope=&quot;slot&quot;&gt;</code></p><p><code>        &lt;span v-for=&quot;item in slot.aanguage&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/span&gt;</code></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue插槽Slot </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
